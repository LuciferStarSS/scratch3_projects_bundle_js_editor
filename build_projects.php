<?php
$ids=@file_get_contents("./data/scratch_gui_ready.dat");
if($ids!="OK") exit("GUI模块有数据已更新，请先“生成”GUI模块。");


$scratch_editor_path="../editor";

$filename="projects";

$filedata="var strLastUpdated=\"".date("Y-m-d H:i:s")."\";\n//Regenerated by LuciferStar(admin@singlestudio.net.cn),\n//based on MIT Project 'scratch-www'(first compiled on 2019-10-02).\nwebpackJsonp([0],[\n";			//数据头

$index_proj=file_get_contents("./data/index_projects.inc.php");
$indexArr=unserialize($index_proj);

$bannedList="";

for($i=0;$i<1453;$i++)
{
   $bBanned=false;					//默认不排除

   if(isset($indexArr[$i]))				//检测是否需要排除
   {
      if(strpos($indexArr[$i],"×")>-1) $bBanned=true;
   }

   if(file_exists("./data/".$filename."/".$i.".part.js"))//对应位置文件存在，需要处理
   {
      if($bBanned)					//被排除，留接口，删数据
      {
         $filedata.='/* '.$i.' */
 (function(module, exports, __webpack_require__) {
"use strict";
eval("");
 })'.",\n";//消除了实际代码的模块，接口依然保留。
         $bannedList.=$i.",";
         if(!file_exists("./data/excluded/".$i.".part.js"))
            copy("./data/".$filename."/".$i.".part.js","./data/excluded/".$i.".part.js");
      }
      else						//未被排除，正常输出
      {
         $filedata.=file_get_contents("./data/".$filename."./".$i.".part.js").",\n";
      }
   }
   else							//对应位置没有数据，留空
   {
      $filedata.="/* $i */,\n";				//本身不存在的模块
   }
}

$filedata=trim($filedata,",\n");			//清掉最后一次的逗号和换行

$filedata.="\n],[993]);";				//数据位

file_put_contents($scratch_editor_path."/js/".$filename.".bundle.js",$filedata);	//保存文件
echo "OK\n已屏蔽的组件ID如下：".trim($bannedList,",").".";
?>