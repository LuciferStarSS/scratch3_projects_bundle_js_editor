/* 433 */\n (function(module, exports, __webpack_require__) {\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\nvar html = __webpack_require__(154);\nvar decodeHtml = __webpack_require__(980);\n/**\n * Convert a part of a mutation DOM to a mutation VM object, recursively.\n * @param {object} dom DOM object for mutation tag.\n * @return {object} Object representing useful parts of this mutation.\n */\nvar mutatorTagToObject = function mutatorTagToObject(dom) {\n  var obj = Object.create(null);\n  obj.tagName = dom.name;\n  obj.children = [];\n  for (var prop in dom.attribs) {\n    if (prop === 'xmlns') continue;\n    obj[prop] = decodeHtml(dom.attribs[prop]); // Note: the capitalization of block info in the following lines is important.\n    // The lowercase is read in from xml which normalizes case. The VM uses camel case everywhere else.\n    if (prop === 'blockinfo') {\n      obj.blockInfo = JSON.parse(obj.blockinfo);\n      delete obj.blockinfo;\n    }\n  }\n  for (var i = 0; i < dom.children.length; i++) {\n    obj.children.push(mutatorTagToObject(dom.children[i]));\n  }\n  return obj;\n};\n/**\n * Adapter between mutator XML or DOM and block representation which can be\n * used by the Scratch runtime.\n * @param {(object|string)} mutation Mutation XML string or DOM.\n * @return {object} Object representing the mutation.\n */\nvar mutationAdpater = function mutationAdpater(mutation) {\n  var mutationParsed; // Check if the mutation is already parsed; if not, parse it.\n  if (_typeof(mutation) === 'object') {\n    mutationParsed = mutation;\n  } else {\n    mutationParsed = html.parseDOM(mutation)[0];\n  }\n  return mutatorTagToObject(mutationParsed);\n};\nmodule.exports = mutationAdpater;\n })