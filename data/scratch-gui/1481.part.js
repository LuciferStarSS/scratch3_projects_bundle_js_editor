/* 1481 */\n (function(module, __webpack_exports__, __webpack_require__) {\n\"use strict\";\n// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, \"SB1File\", function() { return /* reexport */ sb1_file_SB1File; });\n__webpack_require__.d(__webpack_exports__, \"AssertionError\", function() { return /* reexport */ AssertionError; });\n__webpack_require__.d(__webpack_exports__, \"ValidationError\", function() { return /* reexport */ ValidationError; });\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/util/assert.js\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n/**\n * A `scratch-sb1-converter` assertion.\n */\nvar AssertionError = function (_Error) {\n  _inherits(AssertionError, _Error);\n  var _super = _createSuper(AssertionError);\n  function AssertionError() {\n    _classCallCheck(this, AssertionError);\n    return _super.apply(this, arguments);\n  }\n  return AssertionError;\n}( _wrapNativeSuper(Error));\n/**\n * A `scratch-sb1-converter` validation error.\n */\nvar ValidationError = function (_AssertionError) {\n  _inherits(ValidationError, _AssertionError);\n  var _super2 = _createSuper(ValidationError);\n  function ValidationError() {\n    _classCallCheck(this, ValidationError);\n    return _super2.apply(this, arguments);\n  }\n  return ValidationError;\n}(AssertionError);\nvar assert = function assert(test, message) {\n  if (!test) throw new AssertionError(message);\n};\nassert.validate = function (test, message) {\n  if (!test) throw new ValidationError(message);\n};\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/coders/byte-stream.js\nfunction byte_stream_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n/**\n * Read and write a stream of {@link BytePrimitive}s, {@link Packet}s, or byte\n * arrays to an ArrayBuffer.\n */\nvar byte_stream_ByteStream = function () {\n  /**\n   * @param {ArrayBuffer} buffer - The ArrayBuffer to read from or write to.\n   * @param {number=} [position=0] - The position to start reading or writing\n   * from in the ArrayBuffer.\n   */\n  function ByteStream(buffer) {\n    var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    byte_stream_classCallCheck(this, ByteStream);\n    /**\n     * The ArrayBuffer to read from or write to.\n     * @type {ArrayBuffer}\n     */\n    this.buffer = buffer;\n    /**\n     * The position to start reading or writing from in the ArrayBuffer.\n     * @type {number}\n     */\n    this.position = position;\n    /**\n     * The typed array view of the buffer to read and write with.\n     * @type {Uint8Array}\n     */\n    this.uint8a = new Uint8Array(this.buffer);\n  }\n  /**\n   * Read one instance of a given BytePrimitive and increment position based\n   * on the size of that value.\n   * @param {BytePrimitive} member - BytePrimitive to read and increment size\n   * with.\n   * @returns {*} Return the value produced by the BytePrimitive.\n   */\n  _createClass(ByteStream, [{\n    key: \"read\",\n    value: function read(member) {\n      var value = member.read(this.uint8a, this.position);\n      if (member.size === 0) {\n        this.position += member.sizeOf(this.uint8a, this.position);\n      } else {\n        this.position += member.size;\n      }\n      return value;\n    }\n    /**\n     * Read one instance of a given Packet subclass and increment position\n     * based on the size of that value.\n     * @param {PacketConstructor} StructType - Packet subclass constructor that\n     * can read from the current stream position.\n     * @returns {Packet} Instance of a Packet pointed at the position of the\n     * stream before calling readStruct.\n     */\n  }, {\n    key: \"readStruct\",\n    value: function readStruct(StructType) {\n      var obj = new StructType(this.uint8a, this.position);\n      this.position += StructType.size;\n      return obj;\n    }\n    /**\n     * Resize the internal buffer to allow for the needed amount of space.\n     * @param {number} needed - How many bytes need to fit in the buffer.\n     * @private\n     */\n  }, {\n    key: \"resize\",\n    value: function resize(needed) {\n      if (this.buffer.byteLength < needed) {\n        var uint8a = this.uint8a;\n        var nextPowerOf2 = Math.pow(2, Math.ceil(Math.log(needed) / Math.log(2)));\n        this.buffer = new ArrayBuffer(nextPowerOf2);\n        this.uint8a = new Uint8Array(this.buffer);\n        this.uint8a.set(uint8a);\n      }\n    }\n    /**\n     * Write a value to the stream (with a BytePrimitive defining how to do so)\n     * and increment the position.\n     * @param {BytePrimitive} member - BytePrimitive to define how to write the\n     * value.\n     * @param {*} value - Value to write.\n     * @returns {*} Value passed to the method.\n     */\n  }, {\n    key: \"write\",\n    value: function write(member, value) {\n      if (member.size === 0) {\n        this.resize(this.position + member.writeSizeOf(value));\n      } else {\n        this.resize(this.position + member.size);\n      }\n      member.write(this.uint8a, this.position, value);\n      if (member.size === 0) {\n        this.position += member.writeSizeOf(this.uint8a, this.position);\n      } else {\n        this.position += member.size;\n      }\n      return value;\n    }\n    /**\n     * Write data to the stream structured by a given Packet subclass\n     * constructor and increment the position.\n     * @param {PacketConstructor} StructType - The Packet subclass constructor\n     * defining how to write the data.\n     * @param {object} data - Data to write.\n     * @returns {Packet} - Constructed packet after writing data.\n     */\n  }, {\n    key: \"writeStruct\",\n    value: function writeStruct(StructType, data) {\n      this.resize(this.position + StructType.size);\n      var st = Object.assign(new StructType(this.uint8a, this.position), data);\n      this.position += StructType.size;\n      return st;\n    }\n    /**\n     * Write bytes from the given Uint8Array array to the stream and increment\n     * the position.\n     * @param {Uint8Array} bytes - Bytes to write to the stream.\n     * @param {number=} [start=0] - Where in bytes to start writing from.\n     * @param {number=} [end=bytes.length] - Where in bytes to stop writing, excluding position at bytes[end].\n     * @returns {Uint8Array} Passed bytes Uint8Array.\n     */\n  }, {\n    key: \"writeBytes\",\n    value: function writeBytes(bytes) {\n      var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : bytes.length;\n      assert(bytes instanceof Uint8Array, 'writeBytes must be passed an Uint8Array');\n      this.resize(this.position + (end - start));\n      for (var i = start; i < end; i++) {\n        this.uint8a[this.position + i - start] = bytes[i];\n      }\n      this.position += end - start;\n      return bytes;\n    }\n  }]);\n  return ByteStream;\n}();\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/squeak/byte-take-iterator.js\nfunction byte_take_iterator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction byte_take_iterator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction byte_take_iterator_createClass(Constructor, protoProps, staticProps) { if (protoProps) byte_take_iterator_defineProperties(Constructor.prototype, protoProps); if (staticProps) byte_take_iterator_defineProperties(Constructor, staticProps); return Constructor; }\n/**\n * An iterator that only takes bytes up to a certain position.\n *\n * Take iterators constrain the number of times an inner iterator can return\n * values. Normally it constrains the number of returned values.\n * ByteTakeIterator instead constrains the number of bytes the inner iterator\n * may take from its stream before ByteTakeIterator returns done objects.\n *\n * Primarily used to wrap {@link FieldIterator}.\n */\nvar ByteTakeIterator = function () {\n  /**\n   * @param {{stream: ByteStream}} iter - Iterator with `stream` member.\n   * @param {number} [maxPosition=Infinity] - Position `stream` may not go\n   * beyond when yielding the next value.\n   */\n  function ByteTakeIterator(iter) {\n    var maxPosition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Infinity;\n    byte_take_iterator_classCallCheck(this, ByteTakeIterator);\n    this.iter = iter;\n    this.maxPosition = maxPosition;\n  }\n  /**\n   * @returns {ByteTakeIterator} - Returns itself.\n   */\n  byte_take_iterator_createClass(ByteTakeIterator, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this;\n    }\n    /**\n     * @returns {{value: *, done: boolean}} - Return the next value or indicate\n     * the Iterator has reached its end.\n     */\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (this.iter.stream.position >= this.maxPosition) {\n        return {\n          value: null,\n          done: true\n        };\n      }\n      return this.iter.next();\n    }\n  }]);\n  return ByteTakeIterator;\n}();\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/coders/byte-primitives.js\nfunction byte_primitives_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { byte_primitives_typeof = function _typeof(obj) { return typeof obj; }; } else { byte_primitives_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return byte_primitives_typeof(obj); }\nfunction byte_primitives_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) byte_primitives_setPrototypeOf(subClass, superClass); }\nfunction byte_primitives_setPrototypeOf(o, p) { byte_primitives_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return byte_primitives_setPrototypeOf(o, p); }\nfunction byte_primitives_createSuper(Derived) { var hasNativeReflectConstruct = byte_primitives_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = byte_primitives_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = byte_primitives_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return byte_primitives_possibleConstructorReturn(this, result); }; }\nfunction byte_primitives_possibleConstructorReturn(self, call) { if (call && (byte_primitives_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return byte_primitives_assertThisInitialized(self); }\nfunction byte_primitives_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction byte_primitives_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\nfunction byte_primitives_getPrototypeOf(o) { byte_primitives_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return byte_primitives_getPrototypeOf(o); }\nfunction byte_primitives_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction byte_primitives_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction byte_primitives_createClass(Constructor, protoProps, staticProps) { if (protoProps) byte_primitives_defineProperties(Constructor.prototype, protoProps); if (staticProps) byte_primitives_defineProperties(Constructor, staticProps); return Constructor; }\nvar notImplemented = function notImplemented() {\n  throw new Error('Not implemented');\n};\n/**\n * Is the host computer little or big endian.\n * @const IS_HOST_LITTLE_ENDIAN\n * @type {boolean}\n */\nvar IS_HOST_LITTLE_ENDIAN = function () {\n  var ab16 = new Uint16Array(1);\n  var ab8 = new Uint8Array(ab16.buffer);\n  ab16[0] = 0xaabb;\n  return ab8[0] === 0xbb;\n}();\n/**\n * @callback BytePrimitive~sizeOfCallback\n * @param {Uint8Array} uint8a\n * @param {number} position\n * @returns {number}\n */\n/**\n * @callback BytePrimitive~writeSizeOfCallback\n * @param {Uint8Array} uint8a\n * @param {number} position\n * @param {*} value\n * @returns {number}\n */\n/**\n * @callback BytePrimitive~writeCallback\n * @param {Uint8Array} uint8a\n * @param {number} position\n * @param {*} value\n */\n/**\n * An interface for reading and writing binary values to typed arrays.\n *\n * Combined with {@link Packet Packet} this makes reading and writing packets\n * of binary values easy.\n */\nvar BytePrimitive = function () {\n  /**\n   * @constructor\n   * @param {object} options - Options to initialize BytePrimitive instance\n   * with.\n   * @param {number} [options.size=0] - Fixed size of the BytePrimitive.\n   * Should be 0 if the primitive has a variable size.\n   * @param {BytePrimitive~sizeOfCallback} [options.sizeOf=() => size] -\n   * Variable size of the primitive depending on its value stored in the\n   * array.\n   * @param {BytePrimitive~writeSizeOfCallback} [options.writeSizeOf] -\n   * Variable size of the primitive depending on the value being written.\n   * @param {TypedArray} [options.toBytes=new Uint8Array(1)] - Temporary\n   * space to copy bytes to/from to translate between a value and its\n   * representative byte set.\n   * @param {BytePrimitive#read} options.read - How is a value read\n   * at the given position of the array.\n   * @param {BytePrimitive~writeCallback} [options.write] - How to write a\n   * value to the array at the given position.\n   */\n  function BytePrimitive(_ref) {\n    var _ref$size = _ref.size,\n        size = _ref$size === void 0 ? 0 : _ref$size,\n        _ref$sizeOf = _ref.sizeOf,\n        sizeOf = _ref$sizeOf === void 0 ? function () {\n      return size;\n    } : _ref$sizeOf,\n        _ref$writeSizeOf = _ref.writeSizeOf,\n        writeSizeOf = _ref$writeSizeOf === void 0 ? notImplemented : _ref$writeSizeOf,\n        _ref$toBytes = _ref.toBytes,\n        toBytes = _ref$toBytes === void 0 ? new Uint8Array(1) : _ref$toBytes,\n        read = _ref.read,\n        _ref$write = _ref.write,\n        write = _ref$write === void 0 ? notImplemented : _ref$write;\n    byte_primitives_classCallCheck(this, BytePrimitive);\n    this.size = size;\n    this.sizeOf = sizeOf;\n    this.writeSizeOf = writeSizeOf;\n    this.toBytes = toBytes;\n    this.bytes = new Uint8Array(toBytes.buffer);\n    this.read = read;\n    this.write = write;\n  }\n  /**\n   * Create an object that can be used with `Object.defineProperty` to read\n   * and write values offset by `position` and the object's `this.offset`\n   * from `this.uint8a` by getting or setting the property.\n   * @param {number} position - Additional offset with `this.offset` to read\n   * from or write to.\n   * @returns {object} - A object that can be passed as the third argument to\n   * `Object.defineProperty`.\n   */\n  byte_primitives_createClass(BytePrimitive, [{\n    key: \"asPropertyObject\",\n    value: function asPropertyObject(position) {\n      var _this = this;\n      return {\n        get: function get() {\n          return _this.read(this.uint8a, position + this.offset);\n        },\n        set: function set(value) {\n          return _this.write(this.uint8a, position + this.offset, value);\n        },\n        enumerable: true\n      };\n    }\n    /**\n     * Read a value from `position` in `uint8a`.\n     * @param {Uint8Array} uint8a - Array to read from.\n     * @param {number} position - Position in `uint8a` to read from.\n     * @returns {*} - Value read from `uint8a` at `position`.\n     */\n  }, {\n    key: \"read\",\n    value: function read() {\n      return null;\n    }\n  }]);\n  return BytePrimitive;\n}();\n/**\n * @const Uint8\n * @type {BytePrimitive}\n */\nvar Uint8 = new BytePrimitive({\n  size: 1,\n  read: function read(uint8a, position) {\n    return uint8a[position];\n  },\n  write: function write(uint8a, position, value) {\n    uint8a[position] = value;\n    return value;\n  }\n});\nvar HOSTLE_BE16 = {\n  size: 2,\n  // toBytes: Defined by instance.\n  read: function read(uint8a, position) {\n    this.bytes[1] = uint8a[position + 0];\n    this.bytes[0] = uint8a[position + 1];\n    return this.toBytes[0];\n  },\n  write: function write(uint8a, position, value) {\n    this.toBytes[0] = value;\n    uint8a[position + 0] = this.bytes[1];\n    uint8a[position + 1] = this.bytes[0];\n    return value;\n  }\n};\nvar HOSTBE_BE16 = {\n  size: 2,\n  // toBytes: Defined by instance.\n  read: function read(uint8a, position) {\n    this.bytes[0] = uint8a[position + 0];\n    this.bytes[1] = uint8a[position + 1];\n    return this.toBytes[0];\n  },\n  write: function write(uint8a, position, value) {\n    this.toBytes[0] = value;\n    uint8a[position + 0] = this.bytes[0];\n    uint8a[position + 1] = this.bytes[1];\n    return value;\n  }\n};\nvar BE16;\nif (IS_HOST_LITTLE_ENDIAN) {\n  BE16 = HOSTLE_BE16;\n} else {\n  BE16 = HOSTBE_BE16;\n}\n/**\n * @const Uint16BE\n * @type {BytePrimitive}\n */\nvar Uint16BE = new BytePrimitive(Object.assign({}, BE16, {\n  toBytes: new Uint16Array(1)\n}));\n/**\n * @const Int16BE\n * @type {BytePrimitive}\n */\nvar Int16BE = new BytePrimitive(Object.assign({}, BE16, {\n  toBytes: new Int16Array(1)\n}));\nvar HOSTLE_BE32 = {\n  size: 4,\n  // toBytes: Defined by instance.\n  read: function read(uint8a, position) {\n    this.bytes[3] = uint8a[position + 0];\n    this.bytes[2] = uint8a[position + 1];\n    this.bytes[1] = uint8a[position + 2];\n    this.bytes[0] = uint8a[position + 3];\n    return this.toBytes[0];\n  },\n  write: function write(uint8a, position, value) {\n    this.toBytes[0] = value;\n    uint8a[position + 0] = this.bytes[3];\n    uint8a[position + 1] = this.bytes[2];\n    uint8a[position + 2] = this.bytes[1];\n    uint8a[position + 3] = this.bytes[0];\n    return value;\n  }\n};\nvar HOSTBE_BE32 = {\n  size: 4,\n  // toBytes: Defined by instance.\n  read: function read(uint8a, position) {\n    this.bytes[0] = uint8a[position + 0];\n    this.bytes[1] = uint8a[position + 1];\n    this.bytes[2] = uint8a[position + 2];\n    this.bytes[3] = uint8a[position + 3];\n    return this.toBytes[0];\n  },\n  write: function write(uint8a, position, value) {\n    this.toBytes[0] = value;\n    uint8a[position + 0] = this.bytes[0];\n    uint8a[position + 1] = this.bytes[1];\n    uint8a[position + 2] = this.bytes[2];\n    uint8a[position + 3] = this.bytes[3];\n    return value;\n  }\n};\nvar BE32;\nif (IS_HOST_LITTLE_ENDIAN) {\n  BE32 = HOSTLE_BE32;\n} else {\n  BE32 = HOSTBE_BE32;\n}\n/**\n * @const Int32BE\n * @type {BytePrimitive}\n */\nvar Int32BE = new BytePrimitive(Object.assign({}, BE32, {\n  toBytes: new Int32Array(1)\n}));\n/**\n * @const Uint32BE\n * @type {BytePrimitive}\n */\nvar Uint32BE = new BytePrimitive(Object.assign({}, BE32, {\n  toBytes: new Uint32Array(1)\n}));\nvar LE16;\nif (IS_HOST_LITTLE_ENDIAN) {\n  LE16 = HOSTBE_BE16;\n} else {\n  LE16 = HOSTLE_BE16;\n}\n/**\n * @const Uint16LE\n * @type {BytePrimitive}\n */\nvar Uint16LE = new BytePrimitive(Object.assign({}, LE16, {\n  toBytes: new Uint16Array(1)\n}));\nvar LE32;\nif (IS_HOST_LITTLE_ENDIAN) {\n  LE32 = HOSTBE_BE32;\n} else {\n  LE32 = HOSTLE_BE32;\n}\n/**\n * @const Uint32LE\n * @type {BytePrimitive}\n */\nvar Uint32LE = new BytePrimitive(Object.assign({}, LE32, {\n  toBytes: new Uint32Array(1)\n}));\nvar HOSTLE_BEDOUBLE = {\n  size: 8,\n  read: function read(uint8a, position) {\n    this.bytes[7] = uint8a[position + 0];\n    this.bytes[6] = uint8a[position + 1];\n    this.bytes[5] = uint8a[position + 2];\n    this.bytes[4] = uint8a[position + 3];\n    this.bytes[3] = uint8a[position + 4];\n    this.bytes[2] = uint8a[position + 5];\n    this.bytes[1] = uint8a[position + 6];\n    this.bytes[0] = uint8a[position + 7];\n    return this.toBytes[0];\n  }\n};\nvar HOSTBE_BEDOUBLE = {\n  size: 8,\n  read: function read(uint8a, position) {\n    this.bytes[7] = uint8a[position + 0];\n    this.bytes[6] = uint8a[position + 1];\n    this.bytes[5] = uint8a[position + 2];\n    this.bytes[4] = uint8a[position + 3];\n    this.bytes[3] = uint8a[position + 4];\n    this.bytes[2] = uint8a[position + 5];\n    this.bytes[1] = uint8a[position + 6];\n    this.bytes[0] = uint8a[position + 7];\n    return this.toBytes[0];\n  }\n};\nvar BEDOUBLE;\nif (IS_HOST_LITTLE_ENDIAN) {\n  BEDOUBLE = HOSTLE_BEDOUBLE;\n} else {\n  BEDOUBLE = HOSTBE_BEDOUBLE;\n}\n/**\n * @const DoubleBE\n * @type {BytePrimitive}\n */\nvar DoubleBE = new BytePrimitive(Object.assign({}, BEDOUBLE, {\n  toBytes: new Float64Array(1)\n}));\n/**\n * @extends BytePrimitive\n */\nvar byte_primitives_FixedAsciiString = function (_BytePrimitive) {\n  byte_primitives_inherits(FixedAsciiString, _BytePrimitive);\n  var _super = byte_primitives_createSuper(FixedAsciiString);\n  /**\n   * @param {number} size - Number of bytes the FixedAsciiString uses.\n   */\n  function FixedAsciiString(size) {\n    byte_primitives_classCallCheck(this, FixedAsciiString);\n    return _super.call(this, {\n      size: size,\n      read: function read(uint8a, position) {\n        var str = '';\n        for (var i = 0; i < size; i++) {\n          var code = uint8a[position + i];\n          assert(code <= 127, 'Non-ascii character in FixedAsciiString');\n          str += String.fromCharCode(code);\n        }\n        return str;\n      },\n      write: function write(uint8a, position, value) {\n        for (var i = 0; i < size; i++) {\n          var code = value.charCodeAt(i);\n          assert(code <= 127, 'Non-ascii character in FixedAsciiString');\n          uint8a[position + i] = code;\n        }\n        return value;\n      }\n    });\n  }\n  return FixedAsciiString;\n}(BytePrimitive);\n// EXTERNAL MODULE: ./node_modules/text-encoding/index.js\nvar text_encoding = __webpack_require__(160);\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/squeak/byte-primitives.js\nvar BUFFER_TOO_BIG = 10 * 1024 * 1024;\n/**\n * @const ReferenceBE\n * @type BytePrimitive\n */\nvar ReferenceBE;\nif (IS_HOST_LITTLE_ENDIAN) {\n  ReferenceBE = new BytePrimitive({\n    size: 3,\n    read: function read(uint8a, position) {\n      return uint8a[position + 0] << 16 | uint8a[position + 1] << 8 | uint8a[position + 2];\n    }\n  });\n} else {\n  ReferenceBE = new BytePrimitive({\n    size: 3,\n    read: function read(uint8a, position) {\n      return uint8a[position + 2] << 16 | uint8a[position + 1] << 8 | uint8a[position + 0];\n    }\n  });\n}\n/**\n * @const LargeInt\n * @type BytePrimitive\n */\nvar LargeInt = new BytePrimitive({\n  sizeOf: function sizeOf(uint8a, position) {\n    var count = Int16BE.read(uint8a, position);\n    return Int16BE.size + count;\n  },\n  read: function read(uint8a, position) {\n    var num = 0;\n    var multiplier = 0;\n    var count = Int16BE.read(uint8a, position);\n    for (var i = 0; i < count; i++) {\n      num = num + multiplier * Uint8.read(uint8a, position++);\n      multiplier *= 256;\n    }\n    return num;\n  }\n});\n/**\n * @const AsciiString\n * @type BytePrimitive\n */\nvar AsciiString = new BytePrimitive({\n  sizeOf: function sizeOf(uint8a, position) {\n    var count = Uint32BE.read(uint8a, position);\n    return Uint32BE.size + count;\n  },\n  read: function read(uint8a, position) {\n    var count = Uint32BE.read(uint8a, position);\n    assert(count < BUFFER_TOO_BIG, 'asciiString too big');\n    position += 4;\n    var str = '';\n    for (var i = 0; i < count; i++) {\n      str += String.fromCharCode(uint8a[position++]);\n    }\n    return str;\n  }\n});\n/**\n * @const Bytes\n * @type BytePrimitive\n */\nvar Bytes = new BytePrimitive({\n  sizeOf: function sizeOf(uint8a, position) {\n    return Uint32BE.size + Uint32BE.read(uint8a, position);\n  },\n  read: function read(uint8a, position) {\n    var count = Uint32BE.read(uint8a, position);\n    assert(count < BUFFER_TOO_BIG, 'bytes too big');\n    position += Uint32BE.size;\n    assert(count < BUFFER_TOO_BIG, 'uint8a array too big');\n    return new Uint8Array(uint8a.buffer, position, count);\n  }\n});\n/**\n * @const SoundBytes\n * @type BytePrimitive\n */\nvar SoundBytes = new BytePrimitive({\n  sizeOf: function sizeOf(uint8a, position) {\n    return Uint32BE.size + Uint32BE.read(uint8a, position) * 2;\n  },\n  read: function read(uint8a, position) {\n    var samples = Uint32BE.read(uint8a, position);\n    assert(samples < BUFFER_TOO_BIG, 'sound too big');\n    position += Uint32BE.size;\n    var count = samples * 2;\n    assert(count < BUFFER_TOO_BIG, 'uint8a array too big');\n    return new Uint8Array(uint8a.buffer, position, count);\n  }\n});\n/**\n * @const Bitmap32BE\n * @type BytePrimitive\n */\nvar Bitmap32BE = new BytePrimitive({\n  sizeOf: function sizeOf(uint8a, position) {\n    return Uint32BE.size + Uint32BE.read(uint8a, position) * Uint32BE.size;\n  },\n  read: function read(uint8a, position) {\n    var count = Uint32BE.read(uint8a, position);\n    assert(count < BUFFER_TOO_BIG, 'bitmap too big');\n    position += Uint32BE.size;\n    assert(count < BUFFER_TOO_BIG, 'uint8a array too big');\n    var value = new Uint32Array(count);\n    for (var i = 0; i < count; i++) {\n      value[i] = Uint32BE.read(uint8a, position);\n      position += Uint32BE.size;\n    }\n    return value;\n  }\n});\nvar decoder;\n/* global TextDecoder:true */\nif (typeof TextDecoder === 'undefined') {\n  decoder = new text_encoding[\"TextDecoder\"]();\n} else {\n  decoder = new TextDecoder();\n}\n/**\n * @const UTF8\n * @type BytePrimitive\n */\nvar UTF8 = new BytePrimitive({\n  sizeOf: function sizeOf(uint8a, position) {\n    return Uint32BE.size + Uint32BE.read(uint8a, position);\n  },\n  read: function read(uint8a, position) {\n    var count = Uint32BE.read(uint8a, position);\n    assert(count < BUFFER_TOO_BIG, 'utf8 too big');\n    position += Uint32BE.size;\n    assert(count < BUFFER_TOO_BIG, 'uint8a array too big');\n    return decoder.decode(new Uint8Array(uint8a.buffer, position, count));\n  }\n});\n/**\n * @const OpaqueColor\n * @type BytePrimitive\n */\nvar OpaqueColor = new BytePrimitive({\n  size: 4,\n  read: function read(uint8a, position) {\n    var rgb = Uint32BE.read(uint8a, position);\n    var a = 0xff;\n    var r = rgb >> 22 & 0xff;\n    var g = rgb >> 12 & 0xff;\n    var b = rgb >> 2 & 0xff;\n    return (a << 24 | r << 16 | g << 8 | b) >>> 0;\n  }\n});\n/**\n * @const TranslucentColor\n * @type BytePrimitive\n */\nvar TranslucentColor = new BytePrimitive({\n  size: 5,\n  read: function read(uint8a, position) {\n    var rgb = Uint32BE.read(uint8a, position);\n    var a = Uint8.read(uint8a, position);\n    var r = rgb >> 22 & 0xff;\n    var g = rgb >> 12 & 0xff;\n    var b = rgb >> 2 & 0xff;\n    return (a << 24 | r << 16 | g << 8 | b) >>> 0;\n  }\n});\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/squeak/ids.js\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/**\n * A numeric identifier for each possible class of {@link Field} that can be in\n * a `.sb` file.\n * @enum {number}\n */\nvar TYPES = {\n  /** A `null` {@link Value}. No data is stored after the class id. */\n  NULL: 1,\n  /** A `true` {@link Value}. No data is stored after the class id. */\n  TRUE: 2,\n  /** A `false` {@link Value}. No data is stored after the class id. */\n  FALSE: 3,\n  /** A small integer {@link Value}. The next 4 bytes represent an integer. */\n  SMALL_INT: 4,\n  /** A small integer {@link Value}. The next 2 bytes represent an integer. */\n  SMALL_INT_16: 5,\n  /** A large integer {@link Value}. The value is a variable number of bytes.\n   * The next byte defines the number of bytes after that represent the\n   * integer. The integer's bytes are stored least value first (little\n   * endian). */\n  LARGE_INT_POSITIVE: 6,\n  /** A large integer {@link Value}. The value is a variable number of bytes.\n   * The next byte defines the number of bytes after that represent the\n   * integer. The integer's bytes are stored least value first (little\n   * endian). */\n  LARGE_INT_NEGATIVE: 7,\n  /** A floating point {@link Value}. The next 8 bytes are stored as a double\n   * precision floating point value. */\n  FLOATING: 8,\n  /** A ascii string {@link Value}. The next 4 bytes defines the number of\n   * following bytes that make up the string. */\n  STRING: 9,\n  /** A ascii string {@link Value}. The next 4 bytes defines the number of\n   * following bytes that make up the string. */\n  SYMBOL: 10,\n  /** A sequence of bytes ({@link Value}). The next 4 bytes defines the\n   * number of bytes in the sequence. */\n  BYTES: 11,\n  /** A sequence of 16 bit samples ({@link Value}). The next 4 bytes defines\n   * the number of samples in the sequence. */\n  SOUND: 12,\n  /** A sequence of 32 bit color integers ({@link Value}). The next 4 bytes\n   * defines the number of colors in the bitmap. */\n  BITMAP: 13,\n  /** A utf8 string {@link Value}. The next 4 bytes defines the number of\n   * bytes used by the string. */\n  UTF8: 14,\n  /** An array {@link Header}. The next 4 bytes defines the following number\n   * of fields in the array. */\n  ARRAY: 20,\n  /** An array {@link Header}. The next 4 bytes defines the following number\n   * of fields in the array. */\n  ORDERED_COLLECTION: 21,\n  /** An array {@link Header}. The next 4 bytes defines the following number\n   * of fields in the array. */\n  SET: 22,\n  /** An array {@link Header}. The next 4 bytes defines the following number\n   * of fields in the array. */\n  IDENTITY_SET: 23,\n  /** A dictionary {@link Header}. The next 4 bytes defines the following\n   * number of key/value field pairs in the dictionary. */\n  DICTIONARY: 24,\n  /** A dictionary {@link Header}. The next 4 bytes defines the following\n   * number of key/value field pairs in the dictionary. */\n  IDENTITY_DICTIONARY: 25,\n  /** A color {@link Value}. The next 4 bytes represents the color. */\n  COLOR: 30,\n  /** A color {@link Value}. The next 4 bytes represents the red, green, and\n   * blue subpixels. The following byte represents the alpha. */\n  TRANSLUCENT_COLOR: 31,\n  /** A 2 field point {@link Header}. The next 2 fields are the x and y\n   * values of this point. */\n  POINT: 32,\n  /** A 4 field rectangle {@link Header}. The next 4 fields are the x, y, x2,\n   * y2 values of this rectangle. */\n  RECTANGLE: 33,\n  /** A 5 field image {@link Header}. The next 5 fields are the width,\n   * height, bit depth, unused, and bytes. */\n  FORM: 34,\n  /** A 6 field image {@link Header}. The next 6 fields are the width,\n   * height, bit depth, unsued, bytes and colormap. */\n  SQUEAK: 35,\n  /** An object {@link Reference} to a position in the top level array of fields in a\n   * block. */\n  OBJECT_REF: 99,\n  /** A variable {@link FieldObjectHeader}. */\n  MORPH: 100,\n  /** A variable {@link FieldObjectHeader}. */\n  ALIGNMENT: 104,\n  /** A variable {@link FieldObjectHeader}.\n   *\n   * In Scratch 2 this is called String. To reduce confusion in the set of\n   * types, this is called STATIC_STRING in this converter. */\n  STATIC_STRING: 105,\n  /** A variable {@link FieldObjectHeader}. */\n  UPDATING_STRING: 106,\n  /** A variable {@link FieldObjectHeader}. */\n  SAMPLED_SOUND: 109,\n  /** A variable {@link FieldObjectHeader}. */\n  IMAGE_MORPH: 110,\n  /** A variable {@link FieldObjectHeader}. */\n  SPRITE: 124,\n  /** A variable {@link FieldObjectHeader}. */\n  STAGE: 125,\n  /** A variable {@link FieldObjectHeader}. */\n  WATCHER: 155,\n  /** A variable {@link FieldObjectHeader}. */\n  IMAGE_MEDIA: 162,\n  /** A variable {@link FieldObjectHeader}. */\n  SOUND_MEDIA: 164,\n  /** A variable {@link FieldObjectHeader}. */\n  MULTILINE_STRING: 171,\n  /** A variable {@link FieldObjectHeader}. */\n  WATCHER_READOUT_FRAME: 173,\n  /** A variable {@link FieldObjectHeader}. */\n  WATCHER_SLIDER: 174,\n  /** A variable {@link FieldObjectHeader}. */\n  LIST_WATCHER: 175\n};\n/**\n * A inverted map of TYPES. Map id numbers to their string names.\n * @type {object.<number, string>}\n */\nvar TYPE_NAMES = Object.entries(TYPES).reduce(function (carry, _ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n  carry[value] = key;\n  return carry;\n}, {});\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/squeak/fields.js\nfunction fields_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction fields_createClass(Constructor, protoProps, staticProps) { if (protoProps) fields_defineProperties(Constructor.prototype, protoProps); if (staticProps) fields_defineProperties(Constructor, staticProps); return Constructor; }\nfunction fields_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) fields_setPrototypeOf(subClass, superClass); }\nfunction fields_setPrototypeOf(o, p) { fields_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return fields_setPrototypeOf(o, p); }\nfunction fields_createSuper(Derived) { var hasNativeReflectConstruct = fields_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = fields_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = fields_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return fields_possibleConstructorReturn(this, result); }; }\nfunction fields_possibleConstructorReturn(self, call) { if (call && (fields_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return fields_assertThisInitialized(self); }\nfunction fields_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction fields_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\nfunction fields_getPrototypeOf(o) { fields_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return fields_getPrototypeOf(o); }\nfunction fields_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { fields_typeof = function _typeof(obj) { return typeof obj; }; } else { fields_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return fields_typeof(obj); }\nfunction fields_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n/**\n * An abstract value contained in a `.sb` file.\n *\n * `.sb` files are made up of two blocks of Fields. Each field in the binary\n * file defines its \"class\" and is possibly followed by some binary data\n * depending on the class. Each class explicitly defines what follows. Knowing\n * all the possible classes each block can be broken up into a series of Field\n * objects.\n */\nvar Field =\n/**\n * @param {TYPES} classId - The class identifier of this Field.\n * @param {number} position - Byte position in the `.sb` file.\n */\nfunction Field(classId, position) {\n  fields_classCallCheck(this, Field);\n  /**\n   * The class identifier of this Field.\n   * @type {TYPES}\n   */\n  this.classId = classId;\n  /**\n   * Byte position in the `.sb` file.\n   * @type {number}\n   */\n  this.position = position;\n};\nvar fields_valueOf = function valueOf(obj) {\n  if (fields_typeof(obj) === 'object' && obj) return obj.valueOf();\n  return obj;\n};\n/**\n * A concrete value contained in a `.sb` file.\n * @extends Field\n */\nvar fields_Value = function (_Field) {\n  fields_inherits(Value, _Field);\n  var _super = fields_createSuper(Value);\n  /**\n   * @param {TYPES} classId - The class identifier of this Field.\n   * @param {number} position - Byte position in the `.sb` file.\n   * @param {*} value - A value decoded according to `classId` from an `.sb`\n   * file.\n   */\n  function Value(classId, position, value) {\n    var _this;\n    fields_classCallCheck(this, Value);\n    _this = _super.call(this, classId, position);\n    /**\n     * A value decoded according to `classId` from an `.sb` file.\n     * @type {*}\n     */\n    _this.value = value;\n    return _this;\n  }\n  fields_createClass(Value, [{\n    key: \"valueOf\",\n    value: function valueOf() {\n      return this.value;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      if (this.classId === TYPES.TRANSLUCENT_COLOR || this.classId === TYPES.COLOR) {\n        // TODO: Can colors be 32 bit in scratch-packets?\n        return this.value & 0xffffff;\n      }\n      return this.value;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return this.value;\n    }\n  }]);\n  return Value;\n}(Field);\n/**\n * A header for a FieldObject representing its class and how many fields are in\n * the object.\n *\n * The `size` of a header is the number of Fields that appear in the byte\n * stream after the header that are related to the header. That set of `size`\n * length Fields make up a FieldObject of `classId` passed to this header.\n * @extends Field\n */\nvar Header = function (_Field2) {\n  fields_inherits(Header, _Field2);\n  var _super2 = fields_createSuper(Header);\n  /**\n   * @param {TYPES} classId - The class identifier of this Field.\n   * @param {number} position - Byte position in the `.sb` file.\n   * @param {number} size - The number of fields to collect.\n   */\n  function Header(classId, position, size) {\n    var _this2;\n    fields_classCallCheck(this, Header);\n    _this2 = _super2.call(this, classId, position);\n    /**\n     * The number of fields to collect.\n     * @type {number}\n     */\n    _this2.size = size;\n    return _this2;\n  }\n  return Header;\n}(Field);\n/**\n * A integer reference of an object in an array produced by TypeIterator of\n * Values and FieldObjects.\n * @extends Field\n */\nvar Reference = function (_Field3) {\n  fields_inherits(Reference, _Field3);\n  var _super3 = fields_createSuper(Reference);\n  /**\n   * @param {TYPES} classId - The class identifier of this Field.\n   * @param {number} position - Byte position in the `.sb` file.\n   * @param {number} index - The index this Reference refers to.\n   */\n  function Reference(classId, position, index) {\n    var _this3;\n    fields_classCallCheck(this, Reference);\n    _this3 = _super3.call(this, classId, position);\n    /**\n     * The index this Reference refers to.\n     * @type {number}\n     */\n    _this3.index = index;\n    return _this3;\n  }\n  fields_createClass(Reference, [{\n    key: \"valueOf\",\n    value: function valueOf() {\n      return \"Ref(\".concat(this.index, \")\");\n    }\n  }]);\n  return Reference;\n}(Field);\n/**\n * An object header of 0 size.\n * @extends Header\n */\nvar BuiltinObjectHeader = function (_Header) {\n  fields_inherits(BuiltinObjectHeader, _Header);\n  var _super4 = fields_createSuper(BuiltinObjectHeader);\n  function BuiltinObjectHeader(classId, position) {\n    fields_classCallCheck(this, BuiltinObjectHeader);\n    return _super4.call(this, classId, position, 0);\n  }\n  return BuiltinObjectHeader;\n}(Header);\n/**\n * An object header with an id more than 99, a version, and a size. The version\n * and size appear in the `sb` file as one byte for version followed by another\n * byte for the size.\n * @extends Header\n */\nvar FieldObjectHeader = function (_Header2) {\n  fields_inherits(FieldObjectHeader, _Header2);\n  var _super5 = fields_createSuper(FieldObjectHeader);\n  /**\n   * @param {TYPES} classId - The class identifier of this Field.\n   * @param {number} position - Byte position in the `.sb` file.\n   * @param {number} version - The version of this instance of a certain\n   * value.\n   * @param {number} size - The number of fields in this object.\n   */\n  function FieldObjectHeader(classId, position, version, size) {\n    var _this4;\n    fields_classCallCheck(this, FieldObjectHeader);\n    _this4 = _super5.call(this, classId, position, size);\n    /**\n     * The version of this instance of a certain value.\n     * @type {number}\n     */\n    _this4.version = version;\n    return _this4;\n  }\n  return FieldObjectHeader;\n}(Header);\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/squeak/field-iterator.js\nvar _CONSUMER_PROTOS;\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction field_iterator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction field_iterator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction field_iterator_createClass(Constructor, protoProps, staticProps) { if (protoProps) field_iterator_defineProperties(Constructor.prototype, protoProps); if (staticProps) field_iterator_defineProperties(Constructor, staticProps); return Constructor; }\n\n/**\n * Consume values for the byte stream with a iterator-like interface.\n */\nvar field_iterator_Consumer = function () {\n  /**\n   * @param {object} options - Define the consumer.\n   * @param {function} [options.type=Value] - The {@link Field} type to\n   * create.\n   * @param {BytePrimitive} options.read - How to read the third Field\n   * argument. The third field argument is the value the field represented in\n   * the `.sb` file. It is either the Value's value, the Reference's index,\n   * or the Header's field size.\n   * @param {function} [options.value] - How to produce the third Field\n   * argument from a stream. Defaults to `stream =>\n   * stream.read(options.read)`.\n   */\n  function Consumer(_ref) {\n    var _ref$type = _ref.type,\n        type = _ref$type === void 0 ? fields_Value : _ref$type,\n        read = _ref.read,\n        _ref$value = _ref.value,\n        value = _ref$value === void 0 ? read ? function (stream) {\n      return stream.read(read);\n    } : null : _ref$value;\n    field_iterator_classCallCheck(this, Consumer);\n    this.type = type;\n    this.value = value;\n  }\n  /**\n   * @param {ByteStream} stream - Stream to read from.\n   * @param {TYPES} classId - FieldObject TYPES identifying the value to read.\n   * @param {number} position - Position in the stream the classId was read\n   * from.\n   * @returns {{value: *, done: boolean}} - An iterator.next() return value.\n   */\n  field_iterator_createClass(Consumer, [{\n    key: \"next\",\n    value: function next(stream, classId, position) {\n      return {\n        value: new this.type(classId, position, this.value(stream)),\n        done: false\n      };\n    }\n  }]);\n  return Consumer;\n}();\n/**\n * @const CONSUMER_PROTOS\n * @type {Object.<number, {type, read, value}>}\n */\nvar CONSUMER_PROTOS = (_CONSUMER_PROTOS = {}, _defineProperty(_CONSUMER_PROTOS, TYPES.NULL, {\n  value: function value() {\n    return null;\n  }\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.TRUE, {\n  value: function value() {\n    return true;\n  }\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.FALSE, {\n  value: function value() {\n    return false;\n  }\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.SMALL_INT, {\n  read: Int32BE\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.SMALL_INT_16, {\n  read: Int16BE\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.LARGE_INT_POSITIVE, {\n  read: LargeInt\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.LARGE_INT_NEGATIVE, {\n  read: LargeInt\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.FLOATING, {\n  read: DoubleBE\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.STRING, {\n  read: AsciiString\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.SYMBOL, {\n  read: AsciiString\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.BYTES, {\n  read: Bytes\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.SOUND, {\n  read: SoundBytes\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.BITMAP, {\n  read: Bitmap32BE\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.UTF8, {\n  read: UTF8\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.ARRAY, {\n  type: Header,\n  read: Int32BE\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.ORDERED_COLLECTION, {\n  type: Header,\n  read: Int32BE\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.SET, {\n  type: Header,\n  read: Int32BE\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.IDENTITY_SET, {\n  type: Header,\n  read: Int32BE\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.DICTIONARY, {\n  type: Header,\n  value: function value(stream) {\n    return stream.read(Int32BE) * 2;\n  }\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.IDENTITY_DICTIONARY, {\n  type: Header,\n  value: function value(stream) {\n    return stream.read(Int32BE) * 2;\n  }\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.COLOR, {\n  read: OpaqueColor\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.TRANSLUCENT_COLOR, {\n  read: TranslucentColor\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.POINT, {\n  type: Header,\n  value: function value() {\n    return 2;\n  }\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.RECTANGLE, {\n  type: Header,\n  value: function value() {\n    return 4;\n  }\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.FORM, {\n  type: Header,\n  value: function value() {\n    return 5;\n  }\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.SQUEAK, {\n  type: Header,\n  value: function value() {\n    return 6;\n  }\n}), _defineProperty(_CONSUMER_PROTOS, TYPES.OBJECT_REF, {\n  type: Reference,\n  read: ReferenceBE\n}), _CONSUMER_PROTOS);\n/**\n * @const CONSUMERS\n * @type {Array.<Consumer|null>}\n */\nvar CONSUMERS = Array.from({\n  length: 256\n}, function (_, i) {\n  if (CONSUMER_PROTOS[i]) return new field_iterator_Consumer(CONSUMER_PROTOS[i]);\n  return null;\n});\nvar builtinConsumer = new field_iterator_Consumer({\n  type: BuiltinObjectHeader,\n  value: function value() {\n    return null;\n  }\n});\n/**\n * Field iterator.\n */\nvar field_iterator_FieldIterator = function () {\n  /**\n   * @param {ArrayBuffer} buffer - Buffer to read from.\n   * @param {number} position - Position in buffer to start at.\n   */\n  function FieldIterator(buffer, position) {\n    field_iterator_classCallCheck(this, FieldIterator);\n    this.buffer = buffer;\n    this.stream = new byte_stream_ByteStream(buffer, position);\n  }\n  /**\n   * @returns {FieldIterator} - Returns this.\n   */\n  field_iterator_createClass(FieldIterator, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this;\n    }\n    /**\n     * @returns {{value: *, done: boolean}} - An iterator.next() value.\n     */\n  }, {\n    key: \"next\",\n    value: function next() {\n      if (this.stream.position >= this.stream.uint8a.length) {\n        return {\n          value: null,\n          done: true\n        };\n      }\n      var position = this.stream.position;\n      var classId = this.stream.read(Uint8);\n      var consumer = CONSUMERS[classId];\n      if (consumer !== null) {\n        return consumer.next(this.stream, classId, position);\n      } else if (classId < TYPES.OBJECT_REF) {\n        // TODO: Does this ever happen?\n        return builtinConsumer.next(this.stream, classId, position);\n      }\n      var classVersion = this.stream.read(Uint8);\n      var size = this.stream.read(Uint8);\n      return {\n        value: new FieldObjectHeader(classId, position, classVersion, size),\n        done: false\n      };\n    }\n  }]);\n  return FieldIterator;\n}();\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/squeak/field-object.js\nfunction field_object_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { field_object_typeof = function _typeof(obj) { return typeof obj; }; } else { field_object_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return field_object_typeof(obj); }\nfunction field_object_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) field_object_setPrototypeOf(subClass, superClass); }\nfunction field_object_setPrototypeOf(o, p) { field_object_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return field_object_setPrototypeOf(o, p); }\nfunction field_object_createSuper(Derived) { var hasNativeReflectConstruct = field_object_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = field_object_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = field_object_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return field_object_possibleConstructorReturn(this, result); }; }\nfunction field_object_possibleConstructorReturn(self, call) { if (call && (field_object_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return field_object_assertThisInitialized(self); }\nfunction field_object_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction field_object_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\nfunction field_object_getPrototypeOf(o) { field_object_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return field_object_getPrototypeOf(o); }\nfunction field_object_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction field_object_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction field_object_createClass(Constructor, protoProps, staticProps) { if (protoProps) field_object_defineProperties(Constructor.prototype, protoProps); if (staticProps) field_object_defineProperties(Constructor, staticProps); return Constructor; }\nfunction field_object_slicedToArray(arr, i) { return field_object_arrayWithHoles(arr) || field_object_iterableToArrayLimit(arr, i) || field_object_unsupportedIterableToArray(arr, i) || field_object_nonIterableRest(); }\nfunction field_object_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction field_object_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return field_object_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return field_object_arrayLikeToArray(o, minLen); }\nfunction field_object_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction field_object_iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction field_object_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar toTitleCase = function toTitleCase(str) {\n  return str.toLowerCase().replace(/_(\\w)/g, function (_ref) {\n    var _ref2 = field_object_slicedToArray(_ref, 2),\n        letter = _ref2[1];\n    return letter.toUpperCase();\n  });\n};\n/**\n * A object representation of a {@link Header} collecting the given {@link\n * Header#size} in fields.\n */\nvar field_object_FieldObject = function () {\n  /**\n   * @param {TYPES} classId - {@link TYPES} id that informs what the shape of\n   * this object is.\n   * @param {number} version - Version number of this object. Some items in\n   * the same class may have different content and so will be different\n   * versions.\n   * @param {Array.<Field>} fields - An array of fields in this FieldObject.\n   */\n  function FieldObject(_ref3) {\n    var classId = _ref3.classId,\n        version = _ref3.version,\n        fields = _ref3.fields;\n    field_object_classCallCheck(this, FieldObject);\n    /** @type {number} */\n    this.classId = classId;\n    /** @type {number} */\n    this.version = version;\n    /** @type {Array.<Field>} */\n    this.fields = fields;\n  }\n  /**\n   * @type {object}\n   */\n  field_object_createClass(FieldObject, [{\n    key: \"string\",\n    value: function string(field) {\n      return String(this.fields[field]);\n    }\n  }, {\n    key: \"number\",\n    value: function number(field) {\n      return +this.fields[field];\n    }\n  }, {\n    key: \"boolean\",\n    value: function boolean(field) {\n      return !!this.fields[field];\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (this.constructor === FieldObject) {\n        return \"\".concat(this.constructor.name, \" \").concat(this.classId, \" \").concat(TYPE_NAMES[this.classId]);\n      }\n      return this.constructor.name;\n    }\n    /**\n     * Define a FieldObject subclass by mapping field names to indices in\n     * {@link FieldObject#fields}.\n     * @param {object} FIELDS - Mapping of ALL_CAPS keys to index in {@link\n     * FieldObject#fields}.\n     * @param {function} [Super] - Parent class of the returned subclass.\n     * @returns {function} - FieldObject subclass constructor.\n     */\n  }, {\n    key: \"FIELDS\",\n    get: function get() {\n      return [];\n    }\n    /**\n     * @type {Array.<Field>}\n     */\n  }, {\n    key: \"RAW_FIELDS\",\n    get: function get() {\n      return this.fields;\n    }\n  }], [{\n    key: \"define\",\n    value: function define(FIELDS) {\n      var Super = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : FieldObject;\n      var DefinedObject = function (_Super) {\n        field_object_inherits(DefinedObject, _Super);\n        var _super = field_object_createSuper(DefinedObject);\n        function DefinedObject() {\n          field_object_classCallCheck(this, DefinedObject);\n          return _super.apply(this, arguments);\n        }\n        field_object_createClass(DefinedObject, [{\n          key: \"FIELDS\",\n          get: function get() {\n            return FIELDS;\n          }\n        }], [{\n          key: \"FIELDS\",\n          get: function get() {\n            return FIELDS;\n          }\n        }]);\n        return DefinedObject;\n      }(Super);\n      Object.keys(FIELDS).forEach(function (key) {\n        var index = FIELDS[key];\n        Object.defineProperty(DefinedObject.prototype, toTitleCase(key), {\n          get: function get() {\n            return this.fields[index];\n          }\n        });\n      });\n      return DefinedObject;\n    }\n  }]);\n  return FieldObject;\n}();\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/coders/crc32.js\nfunction crc32_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction crc32_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction crc32_createClass(Constructor, protoProps, staticProps) { if (protoProps) crc32_defineProperties(Constructor.prototype, protoProps); if (staticProps) crc32_defineProperties(Constructor, staticProps); return Constructor; }\nvar CRC32 = function () {\n  function CRC32() {\n    crc32_classCallCheck(this, CRC32);\n    this.bit = new Uint32Array(1);\n    this.crc = 0;\n    this.c = 0;\n    this.table = [];\n    var c;\n    for (var i = 0; i < 256; i++) {\n      c = i;\n      for (var j = 0; j < 8; j++) {\n        c = c & 1 ? 0xedb88320 ^ c >>> 1 : c >>> 1;\n      }\n      this.table[i] = c >>> 0;\n    }\n  }\n  crc32_createClass(CRC32, [{\n    key: \"update\",\n    value: function update(uint8a) {\n      var position = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var length = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : uint8a.length;\n      var crc = ~this.crc >>> 0;\n      for (var i = 0; i < length; i++) {\n        crc = crc >>> 8 ^ this.table[(crc ^ uint8a[position + i]) & 0xff];\n      }\n      this.crc = ~crc >>> 0;\n      return this;\n    }\n  }, {\n    key: \"digest\",\n    get: function get() {\n      return this.crc;\n    }\n  }]);\n  return CRC32;\n}();\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/coders/squeak-image.js\nfunction squeak_image_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction squeak_image_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction squeak_image_createClass(Constructor, protoProps, staticProps) { if (protoProps) squeak_image_defineProperties(Constructor.prototype, protoProps); if (staticProps) squeak_image_defineProperties(Constructor, staticProps); return Constructor; }\nvar defaultColorMap = [0x00000000, 0xFF000000, 0xFFFFFFFF, 0xFF808080, 0xFFFF0000, 0xFF00FF00, 0xFF0000FF, 0xFF00FFFF, 0xFFFFFF00, 0xFFFF00FF, 0xFF202020, 0xFF404040, 0xFF606060, 0xFF9F9F9F, 0xFFBFBFBF, 0xFFDFDFDF, 0xFF080808, 0xFF101010, 0xFF181818, 0xFF282828, 0xFF303030, 0xFF383838, 0xFF484848, 0xFF505050, 0xFF585858, 0xFF686868, 0xFF707070, 0xFF787878, 0xFF878787, 0xFF8F8F8F, 0xFF979797, 0xFFA7A7A7, 0xFFAFAFAF, 0xFFB7B7B7, 0xFFC7C7C7, 0xFFCFCFCF, 0xFFD7D7D7, 0xFFE7E7E7, 0xFFEFEFEF, 0xFFF7F7F7, 0xFF000000, 0xFF003300, 0xFF006600, 0xFF009900, 0xFF00CC00, 0xFF00FF00, 0xFF000033, 0xFF003333, 0xFF006633, 0xFF009933, 0xFF00CC33, 0xFF00FF33, 0xFF000066, 0xFF003366, 0xFF006666, 0xFF009966, 0xFF00CC66, 0xFF00FF66, 0xFF000099, 0xFF003399, 0xFF006699, 0xFF009999, 0xFF00CC99, 0xFF00FF99, 0xFF0000CC, 0xFF0033CC, 0xFF0066CC, 0xFF0099CC, 0xFF00CCCC, 0xFF00FFCC, 0xFF0000FF, 0xFF0033FF, 0xFF0066FF, 0xFF0099FF, 0xFF00CCFF, 0xFF00FFFF, 0xFF330000, 0xFF333300, 0xFF336600, 0xFF339900, 0xFF33CC00, 0xFF33FF00, 0xFF330033, 0xFF333333, 0xFF336633, 0xFF339933, 0xFF33CC33, 0xFF33FF33, 0xFF330066, 0xFF333366, 0xFF336666, 0xFF339966, 0xFF33CC66, 0xFF33FF66, 0xFF330099, 0xFF333399, 0xFF336699, 0xFF339999, 0xFF33CC99, 0xFF33FF99, 0xFF3300CC, 0xFF3333CC, 0xFF3366CC, 0xFF3399CC, 0xFF33CCCC, 0xFF33FFCC, 0xFF3300FF, 0xFF3333FF, 0xFF3366FF, 0xFF3399FF, 0xFF33CCFF, 0xFF33FFFF, 0xFF660000, 0xFF663300, 0xFF666600, 0xFF669900, 0xFF66CC00, 0xFF66FF00, 0xFF660033, 0xFF663333, 0xFF666633, 0xFF669933, 0xFF66CC33, 0xFF66FF33, 0xFF660066, 0xFF663366, 0xFF666666, 0xFF669966, 0xFF66CC66, 0xFF66FF66, 0xFF660099, 0xFF663399, 0xFF666699, 0xFF669999, 0xFF66CC99, 0xFF66FF99, 0xFF6600CC, 0xFF6633CC, 0xFF6666CC, 0xFF6699CC, 0xFF66CCCC, 0xFF66FFCC, 0xFF6600FF, 0xFF6633FF, 0xFF6666FF, 0xFF6699FF, 0xFF66CCFF, 0xFF66FFFF, 0xFF990000, 0xFF993300, 0xFF996600, 0xFF999900, 0xFF99CC00, 0xFF99FF00, 0xFF990033, 0xFF993333, 0xFF996633, 0xFF999933, 0xFF99CC33, 0xFF99FF33, 0xFF990066, 0xFF993366, 0xFF996666, 0xFF999966, 0xFF99CC66, 0xFF99FF66, 0xFF990099, 0xFF993399, 0xFF996699, 0xFF999999, 0xFF99CC99, 0xFF99FF99, 0xFF9900CC, 0xFF9933CC, 0xFF9966CC, 0xFF9999CC, 0xFF99CCCC, 0xFF99FFCC, 0xFF9900FF, 0xFF9933FF, 0xFF9966FF, 0xFF9999FF, 0xFF99CCFF, 0xFF99FFFF, 0xFFCC0000, 0xFFCC3300, 0xFFCC6600, 0xFFCC9900, 0xFFCCCC00, 0xFFCCFF00, 0xFFCC0033, 0xFFCC3333, 0xFFCC6633, 0xFFCC9933, 0xFFCCCC33, 0xFFCCFF33, 0xFFCC0066, 0xFFCC3366, 0xFFCC6666, 0xFFCC9966, 0xFFCCCC66, 0xFFCCFF66, 0xFFCC0099, 0xFFCC3399, 0xFFCC6699, 0xFFCC9999, 0xFFCCCC99, 0xFFCCFF99, 0xFFCC00CC, 0xFFCC33CC, 0xFFCC66CC, 0xFFCC99CC, 0xFFCCCCCC, 0xFFCCFFCC, 0xFFCC00FF, 0xFFCC33FF, 0xFFCC66FF, 0xFFCC99FF, 0xFFCCCCFF, 0xFFCCFFFF, 0xFFFF0000, 0xFFFF3300, 0xFFFF6600, 0xFFFF9900, 0xFFFFCC00, 0xFFFFFF00, 0xFFFF0033, 0xFFFF3333, 0xFFFF6633, 0xFFFF9933, 0xFFFFCC33, 0xFFFFFF33, 0xFFFF0066, 0xFFFF3366, 0xFFFF6666, 0xFFFF9966, 0xFFFFCC66, 0xFFFFFF66, 0xFFFF0099, 0xFFFF3399, 0xFFFF6699, 0xFFFF9999, 0xFFFFCC99, 0xFFFFFF99, 0xFFFF00CC, 0xFFFF33CC, 0xFFFF66CC, 0xFFFF99CC, 0xFFFFCCCC, 0xFFFFFFCC, 0xFFFF00FF, 0xFFFF33FF, 0xFFFF66FF, 0xFFFF99FF, 0xFFFFCCFF, 0xFFFFFFFF];\nvar defaultOneBitColorMap = [0xFFFFFFFF, 0xFF000000];\nvar VariableIntBE = new BytePrimitive({\n  sizeOf: function sizeOf(uint8a, position) {\n    var count = uint8a[position];\n    if (count <= 223) return 1;\n    if (count <= 254) return 2;\n    return 5;\n  },\n  read: function read(uint8a, position) {\n    var count = uint8a[position];\n    if (count <= 223) return count;\n    if (count <= 254) return (count - 224) * 256 + uint8a[position + 1];\n    return Uint32BE.read(uint8a, position + 1);\n  }\n});\nvar squeak_image_SqueakImage = function () {\n  function SqueakImage() {\n    squeak_image_classCallCheck(this, SqueakImage);\n  }\n  squeak_image_createClass(SqueakImage, [{\n    key: \"decode\",\n    value: function decode(width, height, depth, bytes, colormap) {\n      var pixels = this.decodePixels(bytes, depth === 32);\n      if (depth <= 8) {\n        if (!colormap) {\n          colormap = depth === 1 ? defaultOneBitColorMap : defaultColorMap;\n        }\n        return this.unpackPixels(pixels, width, height, depth, colormap);\n      } else if (depth === 16) {\n        return this.raster16To32(pixels, width, height);\n      } else if (depth === 32) {\n        return pixels;\n      }\n      throw new Error('Unhandled Squeak Image depth.');\n    }\n  }, {\n    key: \"decodePixels\",\n    value: function decodePixels(bytes, withAlpha) {\n      var result; // Already decompressed\n      if (Array.isArray(bytes) || bytes instanceof Uint32Array) {\n        result = new Uint32Array(bytes);\n        if (withAlpha) {\n          for (var _i = 0; _i < result.length; _i++) {\n            if (result[_i] !== 0) {\n              result[_i] = 0xff000000 | result[_i];\n            }\n          }\n        }\n        return result;\n      }\n      var stream = new byte_stream_ByteStream(bytes.buffer, bytes.byteOffset);\n      var pixelsOut = stream.read(VariableIntBE);\n      result = new Uint32Array(pixelsOut);\n      var i = 0;\n      while (i < pixelsOut) {\n        var runLengthAndCode = stream.read(VariableIntBE);\n        var runLength = runLengthAndCode >> 2;\n        var code = runLengthAndCode & 3;\n        var w = void 0;\n        switch (code) {\n          case 0:\n            i += runLength;\n            break;\n          case 1:\n            w = stream.read(Uint8);\n            w = w << 24 | w << 16 | w << 8 | w;\n            if (withAlpha && w !== 0) {\n              w |= 0xff000000;\n            }\n            for (var j = 0; j < runLength; j++) {\n              result[i++] = w;\n            }\n            break;\n          case 2:\n            w = stream.read(Uint32BE);\n            if (withAlpha && w !== 0) {\n              w |= 0xff000000;\n            }\n            for (var _j = 0; _j < runLength; _j++) {\n              result[i++] = w;\n            }\n            break;\n          case 3:\n            for (var _j2 = 0; _j2 < runLength; _j2++) {\n              w = stream.read(Uint32BE);\n              if (withAlpha && w !== 0) {\n                w |= 0xff000000;\n              }\n              result[i++] = w;\n            }\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"unpackPixels\",\n    value: function unpackPixels(words, width, height, depth, colormap) {\n      var result = new Uint32Array(width * height);\n      var mask = (1 << depth) - 1;\n      var pixelsPerWord = 32 / depth;\n      var dst = 0;\n      var src = 0;\n      for (var y = 0; y < height; y++) {\n        var word = void 0;\n        var shift = -1;\n        for (var x = 0; x < width; x++) {\n          if (shift < 0) {\n            shift = depth * (pixelsPerWord - 1);\n            word = words[src++];\n          }\n          result[dst++] = colormap[word >> shift & mask];\n          shift -= depth;\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"raster16To32\",\n    value: function raster16To32(words, width, height) {\n      var result = new Uint32Array(2 * words.length);\n      var shift;\n      var word;\n      var pix;\n      var src = 0;\n      var dst = 0;\n      for (var y = 0; y < height; y++) {\n        shift = -1;\n        for (var x = 0; x < width; x++) {\n          if (shift < 0) {\n            shift = 16;\n            word = words[src++];\n          }\n          pix = word >> shift & 0xffff;\n          if (pix !== 0) {\n            var red = pix >> 7 & 248;\n            var green = pix >> 2 & 248;\n            var blue = pix << 3 & 248;\n            pix = 0xff000000 | red << 16 | green << 8 | blue;\n          }\n          result[dst++] = pix;\n          shift -= 16;\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"buildCustomColormap\",\n    value: function buildCustomColormap(depth, colors, table) {\n      var result = new Uint32Array(1 << depth);\n      for (var i = 0; i < colors.length; i++) {\n        result[i] = table[colors[i].index - 1];\n      }\n      return result;\n    }\n  }]);\n  return SqueakImage;\n}();\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/coders/squeak-sound.js\nfunction squeak_sound_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction squeak_sound_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction squeak_sound_createClass(Constructor, protoProps, staticProps) { if (protoProps) squeak_sound_defineProperties(Constructor.prototype, protoProps); if (staticProps) squeak_sound_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar SQUEAK_SOUND_STEP_SIZE_TABLE = [7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 19, 21, 23, 25, 28, 31, 34, 37, 41, 45, 50, 55, 60, 66, 73, 80, 88, 97, 107, 118, 130, 143, 157, 173, 190, 209, 230, 253, 279, 307, 337, 371, 408, 449, 494, 544, 598, 658, 724, 796, 876, 963, 1060, 1166, 1282, 1411, 1552, 1707, 1878, 2066, 2272, 2499, 2749, 3024, 3327, 3660, 4026, 4428, 4871, 5358, 5894, 6484, 7132, 7845, 8630, 9493, 10442, 11487, 12635, 13899, 15289, 16818, 18500, 20350, 22385, 24623, 27086, 29794, 32767];\nvar SQUEAK_SOUND_INDEX_TABLES = {\n  2: [-1, 2, -1, 2],\n  3: [-1, -1, 2, 4, -1, -1, 2, 4],\n  4: [-1, -1, -1, -1, 2, 4, 6, 8, -1, -1, -1, -1, 2, 4, 6, 8],\n  5: [-1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 4, 6, 8, 10, 13, 16, -1, -1, -1, -1, -1, -1, -1, -1, 1, 2, 4, 6, 8, 10, 13, 16]\n};\nvar squeak_sound_SqueakSound = function () {\n  function SqueakSound(bitsPerSample) {\n    squeak_sound_classCallCheck(this, SqueakSound);\n    this.bitsPerSample = bitsPerSample;\n    this.indexTable = SQUEAK_SOUND_INDEX_TABLES[bitsPerSample];\n    this.signMask = 1 << bitsPerSample - 1;\n    this.valueMask = this.signMask - 1;\n    this.valueHighBit = this.signMask >> 1;\n    this.bitPosition = 0;\n    this.currentByte = 0;\n    this.stream = null;\n    this.end = 0;\n  }\n  squeak_sound_createClass(SqueakSound, [{\n    key: \"decode\",\n    value: function decode(data) {\n      // Reset position information.\n      this.bitPosition = 0;\n      this.currentByte = 0;\n      this.stream = new byte_stream_ByteStream(data.buffer, data.byteOffset);\n      this.end = data.byteOffset + data.length;\n      var size = Math.floor(data.length * 8 / this.bitsPerSample);\n      var result = new Int16Array(size);\n      var sample = 0;\n      var index = 0;\n      for (var i = 0; i < size; i++) {\n        var code = this.nextCode();\n        assert(code >= 0, 'Ran out of bits in Squeak Sound');\n        var step = SQUEAK_SOUND_STEP_SIZE_TABLE[index];\n        var delta = 0;\n        for (var bit = this.valueHighBit; bit > 0; bit = bit >> 1) {\n          if ((code & bit) !== 0) {\n            delta += step;\n          }\n          step = step >> 1;\n        }\n        delta += step;\n        sample += (code & this.signMask) === 0 ? delta : -delta;\n        index += this.indexTable[code];\n        if (index < 0) index = 0;\n        if (index > 88) index = 88;\n        if (sample > 32767) sample = 32767;\n        if (sample < -32768) sample = -32768;\n        result[i] = sample;\n      }\n      return result;\n    }\n  }, {\n    key: \"nextCode\",\n    value: function nextCode() {\n      var remaining = this.bitsPerSample;\n      var shift = remaining - this.bitPosition;\n      var result = shift < 0 ? this.currentByte >> -shift : this.currentByte << shift;\n      while (shift > 0) {\n        remaining -= this.bitPosition;\n        if (this.end - this.stream.position > 0) {\n          this.currentByte = this.stream.read(Uint8);\n          this.bitPosition = 8;\n        } else {\n          this.currentByte = 0;\n          this.bitPosition = 0;\n          return -1;\n        }\n        shift = remaining - this.bitPosition;\n        result += shift < 0 ? this.currentByte >> -shift : this.currentByte << shift;\n      }\n      this.bitPosition -= remaining;\n      this.currentByte = this.currentByte & 0xff >> 8 - this.bitPosition;\n      return result;\n    }\n  }], [{\n    key: \"samples\",\n    value: function samples(bitsPerSample, data) {\n      return data.length * 8 / bitsPerSample;\n    }\n  }]);\n  return SqueakSound;\n}();\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/coders/byte-packets.js\nfunction byte_packets_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { byte_packets_typeof = function _typeof(obj) { return typeof obj; }; } else { byte_packets_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return byte_packets_typeof(obj); }\nfunction byte_packets_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) byte_packets_setPrototypeOf(subClass, superClass); }\nfunction byte_packets_setPrototypeOf(o, p) { byte_packets_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return byte_packets_setPrototypeOf(o, p); }\nfunction byte_packets_createSuper(Derived) { var hasNativeReflectConstruct = byte_packets_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = byte_packets_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = byte_packets_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return byte_packets_possibleConstructorReturn(this, result); }; }\nfunction byte_packets_possibleConstructorReturn(self, call) { if (call && (byte_packets_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return byte_packets_assertThisInitialized(self); }\nfunction byte_packets_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction byte_packets_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\nfunction byte_packets_getPrototypeOf(o) { byte_packets_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return byte_packets_getPrototypeOf(o); }\nfunction byte_packets_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction byte_packets_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction byte_packets_createClass(Constructor, protoProps, staticProps) { if (protoProps) byte_packets_defineProperties(Constructor.prototype, protoProps); if (staticProps) byte_packets_defineProperties(Constructor, staticProps); return Constructor; }\n/**\n * @typedef {function} PacketConstructor\n */\n/**\n * A packet of bytes represented with getter/setter properties for decoding and\n * encoding values mapped to names, located at known offsets.\n *\n * ```js\n * // Defining a subclass:\n * import {Packet} from '../coders/byte-packets';\n * import {Uint8, Uint16LE} from '../coders/byte-primitives';\n *\n * class MyIdentifiedUint16 extends Packet.extend({\n *     binaryType: Uint8,\n *     value: Uint16LE\n * }) {}\n *\n * Packet.initConstructor(MyIdentifiedUint16);\n *\n * // One way to use it:\n * const indentifiedUint16 = new MyIdentifiedUint16(uint8a, position);\n * indentifiedUint16.binaryType = IDENTIFIED_UINT_16;\n * indentifiedUint16.value = value;\n * ```\n */\nvar Packet = function () {\n  /**\n   * @param {Uint8Array=} [uint8a=new Uint8Array(this.size)] - byte array to\n   * encode to and decode from\n   * @param {number=} offset - offset in addition to the member offsets to\n   * encode to and decode from\n   */\n  function Packet() {\n    var uint8a = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Uint8Array(this.size);\n    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    byte_packets_classCallCheck(this, Packet);\n    /**\n     * Byte array to encode to and decode from.\n     * @type {Uint8Array}\n     */\n    this.uint8a = uint8a;\n    /**\n     * Offset in addition to the member offsets to encode to and decode\n     * from.\n     * @type {number}\n     */\n    this.offset = offset;\n  }\n  /**\n   * Check that the decoded values of this Packet match the values in other.\n   * @param {object} other - object to match against\n   * @returns {boolean} true if all keys in other match values in this packet\n   */\n  byte_packets_createClass(Packet, [{\n    key: \"equals\",\n    value: function equals(other) {\n      for (var key in other) {\n        if (this[key] !== other[key]) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }, {\n    key: \"view\",\n    value: function view() {\n      var className = this.constructor.name;\n      var obj = {\n        toString: function toString() {\n          return className;\n        }\n      };\n      for (var key in this.shape) {\n        obj[key] = this[key];\n      }\n      return obj;\n    }\n    /**\n     * Initialize the Packet subclass constructor for easy access to static\n     * members like size.\n     * @param {function} PacketConstructor - constuctor function for the Packet\n     * subclass\n     * @returns {function} initialized constructor\n     */\n  }], [{\n    key: \"initConstructor\",\n    value: function initConstructor(PacketConstructor) {\n      PacketConstructor.size = PacketConstructor.prototype.size;\n      return PacketConstructor;\n    }\n    /**\n     * Extend a subclass of Packet with given BytePrimitive members.\n     * @param {object} shape - shape of the packet defined with BytePrimitives\n     * @returns {function} Packet subclass constructor\n     */\n  }, {\n    key: \"extend\",\n    value: function extend(shape) {\n      var DefinedPacket = function (_Packet) {\n        byte_packets_inherits(DefinedPacket, _Packet);\n        var _super = byte_packets_createSuper(DefinedPacket);\n        function DefinedPacket() {\n          byte_packets_classCallCheck(this, DefinedPacket);\n          return _super.apply(this, arguments);\n        }\n        byte_packets_createClass(DefinedPacket, [{\n          key: \"shape\",\n          get: function get() {\n            return shape;\n          }\n        }]);\n        return DefinedPacket;\n      }(Packet);\n      var position = 0;\n      Object.keys(shape).forEach(function (key) {\n        Object.defineProperty(DefinedPacket.prototype, key, shape[key].asPropertyObject(position));\n        if (shape[key].size === 0) {\n          throw new Error('Packet cannot be defined with variable sized members.');\n        }\n        position += shape[key].size;\n      });\n      DefinedPacket.prototype.size = position;\n      DefinedPacket.size = position;\n      return DefinedPacket;\n    }\n  }]);\n  return Packet;\n}();\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/coders/wav-packets.js\nfunction wav_packets_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { wav_packets_typeof = function _typeof(obj) { return typeof obj; }; } else { wav_packets_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return wav_packets_typeof(obj); }\nfunction wav_packets_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction wav_packets_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) wav_packets_setPrototypeOf(subClass, superClass); }\nfunction wav_packets_setPrototypeOf(o, p) { wav_packets_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return wav_packets_setPrototypeOf(o, p); }\nfunction wav_packets_createSuper(Derived) { var hasNativeReflectConstruct = wav_packets_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = wav_packets_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = wav_packets_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return wav_packets_possibleConstructorReturn(this, result); }; }\nfunction wav_packets_possibleConstructorReturn(self, call) { if (call && (wav_packets_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return wav_packets_assertThisInitialized(self); }\nfunction wav_packets_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction wav_packets_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\nfunction wav_packets_getPrototypeOf(o) { wav_packets_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return wav_packets_getPrototypeOf(o); }\n\nvar WAVESignature = function (_Packet$extend) {\n  wav_packets_inherits(WAVESignature, _Packet$extend);\n  var _super = wav_packets_createSuper(WAVESignature);\n  function WAVESignature() {\n    wav_packets_classCallCheck(this, WAVESignature);\n    return _super.apply(this, arguments);\n  }\n  return WAVESignature;\n}(Packet.extend({\n  riff: new byte_primitives_FixedAsciiString(4),\n  length: Uint32LE,\n  wave: new byte_primitives_FixedAsciiString(4)\n}));\nPacket.initConstructor(WAVESignature);\nvar WAVEChunkStart = function (_Packet$extend2) {\n  wav_packets_inherits(WAVEChunkStart, _Packet$extend2);\n  var _super2 = wav_packets_createSuper(WAVEChunkStart);\n  function WAVEChunkStart() {\n    wav_packets_classCallCheck(this, WAVEChunkStart);\n    return _super2.apply(this, arguments);\n  }\n  return WAVEChunkStart;\n}(Packet.extend({\n  chunkType: new byte_primitives_FixedAsciiString(4),\n  length: Uint32LE\n}));\nPacket.initConstructor(WAVEChunkStart);\nvar WAVEFMTChunkBody = function (_Packet$extend3) {\n  wav_packets_inherits(WAVEFMTChunkBody, _Packet$extend3);\n  var _super3 = wav_packets_createSuper(WAVEFMTChunkBody);\n  function WAVEFMTChunkBody() {\n    wav_packets_classCallCheck(this, WAVEFMTChunkBody);\n    return _super3.apply(this, arguments);\n  }\n  return WAVEFMTChunkBody;\n}(Packet.extend({\n  format: Uint16LE,\n  channels: Uint16LE,\n  sampleRate: Uint32LE,\n  bytesPerSec: Uint32LE,\n  blockAlignment: Uint16LE,\n  bitsPerSample: Uint16LE\n}));\nPacket.initConstructor(WAVEFMTChunkBody);\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/coders/wav-file.js\nfunction wav_file_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction wav_file_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction wav_file_createClass(Constructor, protoProps, staticProps) { if (protoProps) wav_file_defineProperties(Constructor.prototype, protoProps); if (staticProps) wav_file_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar wav_file_WAVFile = function () {\n  function WAVFile() {\n    wav_file_classCallCheck(this, WAVFile);\n  }\n  wav_file_createClass(WAVFile, [{\n    key: \"encode\",\n    value: function encode(intSamples) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          _ref$channels = _ref.channels,\n          channels = _ref$channels === void 0 ? 1 : _ref$channels,\n          _ref$sampleRate = _ref.sampleRate,\n          sampleRate = _ref$sampleRate === void 0 ? 22050 : _ref$sampleRate;\n      var samplesUint8 = new Uint8Array(intSamples.buffer, intSamples.byteOffset, intSamples.byteLength);\n      var size = WAVESignature.size + WAVEChunkStart.size + WAVEFMTChunkBody.size + WAVEChunkStart.size + samplesUint8.length;\n      var stream = new byte_stream_ByteStream(new ArrayBuffer(size));\n      stream.writeStruct(WAVESignature, {\n        riff: 'RIFF',\n        length: size - 8,\n        wave: 'WAVE'\n      });\n      stream.writeStruct(WAVEChunkStart, {\n        chunkType: 'fmt ',\n        length: WAVEFMTChunkBody.size\n      });\n      stream.writeStruct(WAVEFMTChunkBody, {\n        format: 1,\n        channels: channels,\n        sampleRate: sampleRate,\n        bytesPerSec: sampleRate * 2 * channels,\n        blockAlignment: channels * 2,\n        bitsPerSample: 16\n      });\n      stream.writeStruct(WAVEChunkStart, {\n        chunkType: 'data',\n        length: size - stream.position - WAVEChunkStart.size\n      });\n      stream.writeBytes(samplesUint8);\n      return stream.uint8a;\n    }\n  }], [{\n    key: \"encode\",\n    value: function encode(intSamples, options) {\n      return new WAVFile().encode(intSamples, options);\n    }\n  }, {\n    key: \"samples\",\n    value: function samples(bytes) {\n      var headerLength = new WAVEChunkStart(bytes, WAVESignature.size).length;\n      var bodyLength = new WAVEChunkStart(bytes, WAVESignature.size + WAVEChunkStart.size + headerLength).length;\n      return bodyLength / 2;\n    }\n  }]);\n  return WAVFile;\n}();\n// EXTERNAL MODULE: ./node_modules/js-md5/src/md5.js\nvar md5 = __webpack_require__(161);\nvar md5_default = __webpack_require__.n(md5);\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/squeak/types.js\nfunction types_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { types_typeof = function _typeof(obj) { return typeof obj; }; } else { types_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return types_typeof(obj); }\nvar _FIELD_OBJECT_CONTRUC;\nfunction types_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction types_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction types_createClass(Constructor, protoProps, staticProps) { if (protoProps) types_defineProperties(Constructor.prototype, protoProps); if (staticProps) types_defineProperties(Constructor, staticProps); return Constructor; }\nfunction types_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction types_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) types_setPrototypeOf(subClass, superClass); }\nfunction types_setPrototypeOf(o, p) { types_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return types_setPrototypeOf(o, p); }\nfunction types_createSuper(Derived) { var hasNativeReflectConstruct = types_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = types_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = types_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return types_possibleConstructorReturn(this, result); }; }\nfunction types_possibleConstructorReturn(self, call) { if (call && (types_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return types_assertThisInitialized(self); }\nfunction types_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction types_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\nfunction types_getPrototypeOf(o) { types_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return types_getPrototypeOf(o); }\n\n/**\n * @extends FieldObject\n */\nvar PointData = function (_FieldObject$define) {\n  types_inherits(PointData, _FieldObject$define);\n  var _super = types_createSuper(PointData);\n  function PointData() {\n    types_classCallCheck(this, PointData);\n    return _super.apply(this, arguments);\n  }\n  return PointData;\n}(field_object_FieldObject.define({\n  /**\n   * @memberof PointData#\n   * @type {Value}\n   */\n  X: 0,\n  /**\n   * @memberof PointData#\n   * @type {Value}\n   */\n  Y: 1\n}));\nvar RectangleData = function (_FieldObject$define2) {\n  types_inherits(RectangleData, _FieldObject$define2);\n  var _super2 = types_createSuper(RectangleData);\n  function RectangleData() {\n    types_classCallCheck(this, RectangleData);\n    return _super2.apply(this, arguments);\n  }\n  types_createClass(RectangleData, [{\n    key: \"width\",\n    get: function get() {\n      return this.x2 - this.x;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.y2 - this.y;\n    }\n  }]);\n  return RectangleData;\n}(field_object_FieldObject.define({\n  X: 0,\n  Y: 1,\n  X2: 2,\n  Y2: 3\n}));\nvar _bgra2rgbaInPlace = function _bgra2rgbaInPlace(uint8a) {\n  for (var i = 0; i < uint8a.length; i += 4) {\n    var r = uint8a[i + 2];\n    var b = uint8a[i + 0];\n    uint8a[i + 2] = b;\n    uint8a[i + 0] = r;\n  }\n  return uint8a;\n};\n/**\n * @extends FieldObject\n */\nvar types_ImageData = function (_FieldObject$define3) {\n  types_inherits(ImageData, _FieldObject$define3);\n  var _super3 = types_createSuper(ImageData);\n  function ImageData() {\n    types_classCallCheck(this, ImageData);\n    return _super3.apply(this, arguments);\n  }\n  types_createClass(ImageData, [{\n    key: \"decoded\",\n    /**\n     * @type {Uint8Array}\n     */\n    get: function get() {\n      if (!this._decoded) {\n        this._decoded = _bgra2rgbaInPlace(new Uint8Array(new squeak_image_SqueakImage().decode(this.width.value, this.height.value, this.depth.value, this.bytes.value, this.colormap && this.colormap.map(function (color) {\n          return color.valueOf();\n        })).buffer));\n      }\n      return this._decoded;\n    }\n    /**\n     * @type {string}\n     */\n  }, {\n    key: \"extension\",\n    get: function get() {\n      return 'uncompressed';\n    }\n  }]);\n  return ImageData;\n}(field_object_FieldObject.define({\n  /**\n   * @memberof ImageData#\n   * @type {Value}\n   */\n  WIDTH: 0,\n  /**\n   * @memberof ImageData#\n   * @type {Value}\n   */\n  HEIGHT: 1,\n  /**\n   * @memberof ImageData#\n   * @type {Value}\n   */\n  DEPTH: 2,\n  /**\n   * @memberof ImageData#\n   * @type {Value}\n   */\n  BYTES: 4,\n  /**\n   * @memberof ImageData#\n   * @type {Value}\n   */\n  COLORMAP: 5\n}));\nvar StageData = function (_FieldObject$define4) {\n  types_inherits(StageData, _FieldObject$define4);\n  var _super4 = types_createSuper(StageData);\n  function StageData() {\n    types_classCallCheck(this, StageData);\n    return _super4.apply(this, arguments);\n  }\n  types_createClass(StageData, [{\n    key: \"spriteOrderInLibrary\",\n    get: function get() {\n      return this.fields[this.FIELDS.SPRITE_ORDER_IN_LIBRARY] || null;\n    }\n  }, {\n    key: \"tempoBPM\",\n    get: function get() {\n      return this.fields[this.FIELDS.TEMPO_BPM] || 0;\n    }\n  }, {\n    key: \"lists\",\n    get: function get() {\n      return this.fields[this.FIELDS.LISTS] || [];\n    }\n  }]);\n  return StageData;\n}(field_object_FieldObject.define({\n  STAGE_CONTENTS: 2,\n  OBJ_NAME: 6,\n  VARS: 7,\n  BLOCKS_BIN: 8,\n  IS_CLONE: 9,\n  MEDIA: 10,\n  CURRENT_COSTUME: 11,\n  ZOOM: 12,\n  H_PAN: 13,\n  V_PAN: 14,\n  OBSOLETE_SAVED_STATE: 15,\n  SPRITE_ORDER_IN_LIBRARY: 16,\n  VOLUME: 17,\n  TEMPO_BPM: 18,\n  SCENE_STATES: 19,\n  LISTS: 20\n}));\nvar SpriteData = function (_FieldObject$define5) {\n  types_inherits(SpriteData, _FieldObject$define5);\n  var _super5 = types_createSuper(SpriteData);\n  function SpriteData() {\n    types_classCallCheck(this, SpriteData);\n    return _super5.apply(this, arguments);\n  }\n  types_createClass(SpriteData, [{\n    key: \"scratchX\",\n    get: function get() {\n      return this.box.x + this.currentCostume.rotationCenter.x - 240;\n    }\n  }, {\n    key: \"scratchY\",\n    get: function get() {\n      return 180 - (this.box.y + this.currentCostume.rotationCenter.y);\n    }\n  }, {\n    key: \"visible\",\n    get: function get() {\n      return (this.fields[this.FIELDS.VISIBLE] & 1) === 0;\n    }\n  }, {\n    key: \"tempoBPM\",\n    get: function get() {\n      return this.fields[this.FIELDS.TEMPO_BPM] || 0;\n    }\n  }, {\n    key: \"lists\",\n    get: function get() {\n      return this.fields[this.FIELDS.LISTS] || [];\n    }\n  }]);\n  return SpriteData;\n}(field_object_FieldObject.define({\n  BOX: 0,\n  PARENT: 1,\n  COLOR: 3,\n  VISIBLE: 4,\n  OBJ_NAME: 6,\n  VARS: 7,\n  BLOCKS_BIN: 8,\n  IS_CLONE: 9,\n  MEDIA: 10,\n  CURRENT_COSTUME: 11,\n  VISIBILITY: 12,\n  SCALE_POINT: 13,\n  ROTATION_DEGREES: 14,\n  ROTATION_STYLE: 15,\n  VOLUME: 16,\n  TEMPO_BPM: 17,\n  DRAGGABLE: 18,\n  SCENE_STATES: 19,\n  LISTS: 20\n}));\nvar TextDetailsData = function (_FieldObject$define6) {\n  types_inherits(TextDetailsData, _FieldObject$define6);\n  var _super6 = types_createSuper(TextDetailsData);\n  function TextDetailsData() {\n    types_classCallCheck(this, TextDetailsData);\n    return _super6.apply(this, arguments);\n  }\n  return TextDetailsData;\n}(field_object_FieldObject.define({\n  RECTANGLE: 0,\n  FONT: 8,\n  COLOR: 9,\n  LINES: 11\n}));\nvar types_ImageMediaData = function (_FieldObject$define7) {\n  types_inherits(ImageMediaData, _FieldObject$define7);\n  var _super7 = types_createSuper(ImageMediaData);\n  function ImageMediaData() {\n    types_classCallCheck(this, ImageMediaData);\n    return _super7.apply(this, arguments);\n  }\n  types_createClass(ImageMediaData, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"ImageMediaData \\\"\".concat(this.costumeName, \"\\\"\");\n    }\n  }, {\n    key: \"image\",\n    get: function get() {\n      if (this.oldComposite instanceof types_ImageData) {\n        return this.oldComposite;\n      }\n      if (this.baseLayerData.value) {\n        return null;\n      }\n      return this.bitmap;\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      if (this.image === null) {\n        return -1;\n      }\n      return this.image.width;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      if (this.image === null) {\n        return -1;\n      }\n      return this.image.height;\n    }\n  }, {\n    key: \"rawBytes\",\n    get: function get() {\n      if (this.image === null) {\n        return this.baseLayerData.value.slice();\n      }\n      return this.image.bytes.value;\n    }\n  }, {\n    key: \"decoded\",\n    get: function get() {\n      if (this.image === null) {\n        return this.baseLayerData.value.slice();\n      }\n      return this.image.decoded;\n    }\n  }, {\n    key: \"crc\",\n    get: function get() {\n      if (!this._crc) {\n        var crc = new CRC32().update(new Uint8Array(new Uint32Array([this.bitmap.width]).buffer)).update(new Uint8Array(new Uint32Array([this.bitmap.height]).buffer)).update(new Uint8Array(new Uint32Array([this.bitmap.depth]).buffer)).update(this.rawBytes);\n        this._crc = crc.digest;\n      }\n      return this._crc;\n    }\n  }, {\n    key: \"extension\",\n    get: function get() {\n      if (this.oldComposite instanceof types_ImageData) return 'uncompressed';\n      if (this.baseLayerData.value) return 'jpg';\n      return 'uncompressed';\n    }\n  }]);\n  return ImageMediaData;\n}(field_object_FieldObject.define({\n  COSTUME_NAME: 0,\n  BITMAP: 1,\n  ROTATION_CENTER: 2,\n  TEXT_DETAILS: 3,\n  BASE_LAYER_DATA: 4,\n  OLD_COMPOSITE: 5\n}));\nvar UncompressedData = function (_FieldObject$define8) {\n  types_inherits(UncompressedData, _FieldObject$define8);\n  var _super8 = types_createSuper(UncompressedData);\n  function UncompressedData() {\n    types_classCallCheck(this, UncompressedData);\n    return _super8.apply(this, arguments);\n  }\n  return UncompressedData;\n}(field_object_FieldObject.define({\n  DATA: 3,\n  RATE: 4\n}));\nvar reverseBytes16 = function reverseBytes16(input) {\n  var uint8a = new Uint8Array(input);\n  for (var i = 0; i < uint8a.length; i += 2) {\n    uint8a[i] = input[i + 1];\n    uint8a[i + 1] = input[i];\n  }\n  return uint8a;\n};\nvar types_SoundMediaData = function (_FieldObject$define9) {\n  types_inherits(SoundMediaData, _FieldObject$define9);\n  var _super9 = types_createSuper(SoundMediaData);\n  function SoundMediaData() {\n    types_classCallCheck(this, SoundMediaData);\n    return _super9.apply(this, arguments);\n  }\n  types_createClass(SoundMediaData, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"SoundMediaData \\\"\".concat(this.name, \"\\\"\");\n    }\n  }, {\n    key: \"rate\",\n    get: function get() {\n      if (this.uncompressed.data.value.length !== 0) {\n        return this.uncompressed.rate;\n      }\n      return this.fields[this.FIELDS.RATE];\n    }\n  }, {\n    key: \"rawBytes\",\n    get: function get() {\n      if (this.data && this.data.value) {\n        return this.data.value;\n      }\n      return this.uncompressed.data.value;\n    }\n  }, {\n    key: \"decoded\",\n    get: function get() {\n      if (!this._decoded) {\n        if (this.data && this.data.value) {\n          this._decoded = new squeak_sound_SqueakSound(this.bitsPerSample.value).decode(this.data.value);\n        } else {\n          this._decoded = new Int16Array(reverseBytes16(this.uncompressed.data.value.slice()).buffer);\n        }\n      }\n      return this._decoded;\n    }\n  }, {\n    key: \"crc\",\n    get: function get() {\n      if (!this._crc) {\n        this._crc = new CRC32().update(new Uint32Array([this.rate])).update(this.rawBytes).digest;\n      }\n      return this._crc;\n    }\n  }, {\n    key: \"sampleCount\",\n    get: function get() {\n      if (this.data && this.data.value) {\n        return squeak_sound_SqueakSound.samples(this.bitsPerSample.value, this.data.value);\n      }\n      return this.uncompressed.data.value.length / 2;\n    }\n  }, {\n    key: \"extension\",\n    get: function get() {\n      return 'pcm';\n    }\n  }, {\n    key: \"wavEncodedData\",\n    get: function get() {\n      if (!this._wavEncodedData) {\n        this._wavEncodedData = new Uint8Array(wav_file_WAVFile.encode(this.decoded, {\n          sampleRate: this.rate && this.rate.value\n        }));\n      }\n      return this._wavEncodedData;\n    }\n  }, {\n    key: \"md5\",\n    get: function get() {\n      if (!this._md5) {\n        this._md5 = md5_default()(this.wavEncodedData);\n      }\n      return this._md5;\n    }\n  }]);\n  return SoundMediaData;\n}(field_object_FieldObject.define({\n  NAME: 0,\n  UNCOMPRESSED: 1,\n  RATE: 4,\n  BITS_PER_SAMPLE: 5,\n  DATA: 6\n}));\nvar types_ListWatcherData = function (_FieldObject$define10) {\n  types_inherits(ListWatcherData, _FieldObject$define10);\n  var _super10 = types_createSuper(ListWatcherData);\n  function ListWatcherData() {\n    types_classCallCheck(this, ListWatcherData);\n    return _super10.apply(this, arguments);\n  }\n  types_createClass(ListWatcherData, [{\n    key: \"x\",\n    get: function get() {\n      if (fields_valueOf(this.hiddenWhenNull) === null) return 5;\n      return this.box.x + 1;\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      if (fields_valueOf(this.hiddenWhenNull) === null) return 5;\n      return this.box.y + 1;\n    }\n  }, {\n    key: \"width\",\n    get: function get() {\n      return this.box.width - 2;\n    }\n  }, {\n    key: \"height\",\n    get: function get() {\n      return this.box.height - 2;\n    }\n  }]);\n  return ListWatcherData;\n}(field_object_FieldObject.define({\n  BOX: 0,\n  HIDDEN_WHEN_NULL: 1,\n  LIST_NAME: 8,\n  CONTENTS: 9,\n  TARGET: 10\n}));\nvar AlignmentData = function (_FieldObject$define11) {\n  types_inherits(AlignmentData, _FieldObject$define11);\n  var _super11 = types_createSuper(AlignmentData);\n  function AlignmentData() {\n    types_classCallCheck(this, AlignmentData);\n    return _super11.apply(this, arguments);\n  }\n  return AlignmentData;\n}(field_object_FieldObject.define({\n  BOX: 0,\n  PARENT: 1,\n  FRAMES: 2,\n  COLOR: 3,\n  DIRECTION: 8,\n  ALIGNMENT: 9\n}));\nvar MorphData = function (_FieldObject$define12) {\n  types_inherits(MorphData, _FieldObject$define12);\n  var _super12 = types_createSuper(MorphData);\n  function MorphData() {\n    types_classCallCheck(this, MorphData);\n    return _super12.apply(this, arguments);\n  }\n  return MorphData;\n}(field_object_FieldObject.define({\n  BOX: 0,\n  PARENT: 1,\n  COLOR: 3\n}));\nvar StaticStringData = function (_FieldObject$define13) {\n  types_inherits(StaticStringData, _FieldObject$define13);\n  var _super13 = types_createSuper(StaticStringData);\n  function StaticStringData() {\n    types_classCallCheck(this, StaticStringData);\n    return _super13.apply(this, arguments);\n  }\n  return StaticStringData;\n}(field_object_FieldObject.define({\n  BOX: 0,\n  COLOR: 3,\n  VALUE: 8\n}));\nvar UpdatingStringData = function (_FieldObject$define14) {\n  types_inherits(UpdatingStringData, _FieldObject$define14);\n  var _super14 = types_createSuper(UpdatingStringData);\n  function UpdatingStringData() {\n    types_classCallCheck(this, UpdatingStringData);\n    return _super14.apply(this, arguments);\n  }\n  return UpdatingStringData;\n}(field_object_FieldObject.define({\n  BOX: 0,\n  READOUT_FRAME: 1,\n  COLOR: 3,\n  FONT: 6,\n  VALUE: 8,\n  TARGET: 10,\n  CMD: 11,\n  PARAM: 13\n}));\nvar WatcherReadoutFrameData = function (_FieldObject$define15) {\n  types_inherits(WatcherReadoutFrameData, _FieldObject$define15);\n  var _super15 = types_createSuper(WatcherReadoutFrameData);\n  function WatcherReadoutFrameData() {\n    types_classCallCheck(this, WatcherReadoutFrameData);\n    return _super15.apply(this, arguments);\n  }\n  return WatcherReadoutFrameData;\n}(field_object_FieldObject.define({\n  BOX: 0\n}));\nvar WATCHER_MODES = {\n  NORMAL: 1,\n  LARGE: 2,\n  SLIDER: 3,\n  TEXT: 4\n};\nvar types_WatcherData = function (_FieldObject$define16) {\n  types_inherits(WatcherData, _FieldObject$define16);\n  var _super16 = types_createSuper(WatcherData);\n  function WatcherData() {\n    types_classCallCheck(this, WatcherData);\n    return _super16.apply(this, arguments);\n  }\n  types_createClass(WatcherData, [{\n    key: \"x\",\n    get: function get() {\n      return this.box.x;\n    }\n  }, {\n    key: \"y\",\n    get: function get() {\n      return this.box.y;\n    }\n  }, {\n    key: \"mode\",\n    get: function get() {\n      if (fields_valueOf(this.slider) === null) {\n        if (this.readoutFrame.box.height <= 14) {\n          return WATCHER_MODES.NORMAL;\n        }\n        return WATCHER_MODES.LARGE;\n      }\n      return WATCHER_MODES.SLIDER;\n    }\n  }, {\n    key: \"isDiscrete\",\n    get: function get() {\n      return Math.floor(this.sliderMin) === this.sliderMin && Math.floor(this.sliderMax) === this.sliderMax && Math.floor(this.readout.value) === this.readout.value;\n    }\n  }]);\n  return WatcherData;\n}(field_object_FieldObject.define({\n  BOX: 0,\n  TARGET: 1,\n  SHAPE: 2,\n  READOUT: 14,\n  READOUT_FRAME: 15,\n  SLIDER: 16,\n  ALIGNMENT: 17,\n  SLIDER_MIN: 20,\n  SLIDER_MAX: 21\n}));\nvar FIELD_OBJECT_CONTRUCTOR_PROTOS = (_FIELD_OBJECT_CONTRUC = {}, types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.POINT, PointData), types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.RECTANGLE, RectangleData), types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.FORM, types_ImageData), types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.SQUEAK, types_ImageData), types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.SAMPLED_SOUND, UncompressedData), types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.SPRITE, SpriteData), types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.STAGE, StageData), types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.IMAGE_MEDIA, types_ImageMediaData), types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.SOUND_MEDIA, types_SoundMediaData), types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.ALIGNMENT, AlignmentData), types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.MORPH, MorphData), types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.WATCHER_READOUT_FRAME, WatcherReadoutFrameData), types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.STATIC_STRING, StaticStringData), types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.UPDATING_STRING, UpdatingStringData), types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.WATCHER, types_WatcherData), types_defineProperty(_FIELD_OBJECT_CONTRUC, TYPES.LIST_WATCHER, types_ListWatcherData), _FIELD_OBJECT_CONTRUC);\nvar FIELD_OBJECT_CONTRUCTORS = Array.from({\n  length: 256\n}, function (_, i) {\n  return FIELD_OBJECT_CONTRUCTOR_PROTOS[i] || null;\n});\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/squeak/type-iterator.js\nfunction type_iterator_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction type_iterator_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction type_iterator_createClass(Constructor, protoProps, staticProps) { if (protoProps) type_iterator_defineProperties(Constructor.prototype, protoProps); if (staticProps) type_iterator_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar type_iterator_TypeIterator = function () {\n  function TypeIterator(valueIterator) {\n    type_iterator_classCallCheck(this, TypeIterator);\n    this.valueIterator = valueIterator;\n  }\n  type_iterator_createClass(TypeIterator, [{\n    key: Symbol.iterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var nextHeader = this.valueIterator.next();\n      if (nextHeader.done) {\n        return nextHeader;\n      }\n      var header = nextHeader.value;\n      var classId = header.classId;\n      var value = header;\n      if (header instanceof Header) {\n        value = [];\n        for (var i = 0; i < header.size; i++) {\n          value.push(this.next().value);\n        }\n      }\n      if (FIELD_OBJECT_CONTRUCTORS[classId] !== null || header instanceof FieldObjectHeader) {\n        var _constructor = FIELD_OBJECT_CONTRUCTORS[header.classId] || field_object_FieldObject;\n        value = new _constructor({\n          classId: header.classId,\n          version: header.version,\n          fields: value\n        });\n      }\n      return {\n        value: value,\n        done: false\n      };\n    }\n  }]);\n  return TypeIterator;\n}();\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/squeak/reference-fixer.js\nfunction reference_fixer_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction reference_fixer_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction reference_fixer_createClass(Constructor, protoProps, staticProps) { if (protoProps) reference_fixer_defineProperties(Constructor.prototype, protoProps); if (staticProps) reference_fixer_defineProperties(Constructor, staticProps); return Constructor; }\nvar reference_fixer_ReferenceFixer = function () {\n  function ReferenceFixer(table) {\n    reference_fixer_classCallCheck(this, ReferenceFixer);\n    this.table = Array.from(table);\n    this.fixed = this.fix(this.table);\n  }\n  reference_fixer_createClass(ReferenceFixer, [{\n    key: \"fix\",\n    value: function fix() {\n      var fixed = [];\n      for (var i = 0; i < this.table.length; i++) {\n        this.fixItem(this.table[i]);\n        fixed.push(this.table[i]);\n      }\n      return fixed;\n    }\n  }, {\n    key: \"fixItem\",\n    value: function fixItem(item) {\n      if (typeof item.fields !== 'undefined') {\n        item = item.fields;\n      }\n      if (Array.isArray(item)) {\n        for (var i = 0; i < item.length; i++) {\n          item[i] = this.deref(item[i]);\n        }\n      }\n    }\n  }, {\n    key: \"deref\",\n    value: function deref(ref) {\n      if (ref instanceof Reference) {\n        return this.table[ref.index - 1];\n      }\n      return ref;\n    }\n  }]);\n  return ReferenceFixer;\n}();\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/coders/png-packets.js\nfunction png_packets_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { png_packets_typeof = function _typeof(obj) { return typeof obj; }; } else { png_packets_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return png_packets_typeof(obj); }\nfunction png_packets_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction png_packets_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction png_packets_createClass(Constructor, protoProps, staticProps) { if (protoProps) png_packets_defineProperties(Constructor.prototype, protoProps); if (staticProps) png_packets_defineProperties(Constructor, staticProps); return Constructor; }\nfunction png_packets_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) png_packets_setPrototypeOf(subClass, superClass); }\nfunction png_packets_setPrototypeOf(o, p) { png_packets_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return png_packets_setPrototypeOf(o, p); }\nfunction png_packets_createSuper(Derived) { var hasNativeReflectConstruct = png_packets_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = png_packets_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = png_packets_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return png_packets_possibleConstructorReturn(this, result); }; }\nfunction png_packets_possibleConstructorReturn(self, call) { if (call && (png_packets_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return png_packets_assertThisInitialized(self); }\nfunction png_packets_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction png_packets_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\nfunction png_packets_getPrototypeOf(o) { png_packets_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return png_packets_getPrototypeOf(o); }\n\nvar png_packets_PNGSignature = function (_Packet$extend) {\n  png_packets_inherits(PNGSignature, _Packet$extend);\n  var _super = png_packets_createSuper(PNGSignature);\n  function PNGSignature() {\n    png_packets_classCallCheck(this, PNGSignature);\n    return _super.apply(this, arguments);\n  }\n  png_packets_createClass(PNGSignature, null, [{\n    key: \"validate\",\n    value: function validate() {\n      assert(this.equals({\n        support8Bit: 0x89,\n        png: 'PNG',\n        dosLineEnding: '\\r\\n',\n        dosEndOfFile: '\\x1a',\n        unixLineEnding: '\\n'\n      }), 'PNGSignature does not match the expected values');\n    }\n  }]);\n  return PNGSignature;\n}(Packet.extend({\n  support8Bit: Uint8,\n  png: new byte_primitives_FixedAsciiString(3),\n  dosLineEnding: new byte_primitives_FixedAsciiString(2),\n  dosEndOfFile: new byte_primitives_FixedAsciiString(1),\n  unixLineEnding: new byte_primitives_FixedAsciiString(1)\n}));\nPacket.initConstructor(png_packets_PNGSignature);\nvar PNGChunkStart = function (_Packet$extend2) {\n  png_packets_inherits(PNGChunkStart, _Packet$extend2);\n  var _super2 = png_packets_createSuper(PNGChunkStart);\n  function PNGChunkStart() {\n    png_packets_classCallCheck(this, PNGChunkStart);\n    return _super2.apply(this, arguments);\n  }\n  return PNGChunkStart;\n}(Packet.extend({\n  length: Uint32BE,\n  chunkType: new byte_primitives_FixedAsciiString(4)\n}));\nPacket.initConstructor(PNGChunkStart);\nvar PNGChunkEnd = function (_Packet$extend3) {\n  png_packets_inherits(PNGChunkEnd, _Packet$extend3);\n  var _super3 = png_packets_createSuper(PNGChunkEnd);\n  function PNGChunkEnd() {\n    png_packets_classCallCheck(this, PNGChunkEnd);\n    return _super3.apply(this, arguments);\n  }\n  return PNGChunkEnd;\n}(Packet.extend({\n  checksum: Uint32BE\n}));\nPacket.initConstructor(PNGChunkEnd);\nvar PNGIHDRChunkBody = function (_Packet$extend4) {\n  png_packets_inherits(PNGIHDRChunkBody, _Packet$extend4);\n  var _super4 = png_packets_createSuper(PNGIHDRChunkBody);\n  function PNGIHDRChunkBody() {\n    png_packets_classCallCheck(this, PNGIHDRChunkBody);\n    return _super4.apply(this, arguments);\n  }\n  return PNGIHDRChunkBody;\n}(Packet.extend({\n  width: Uint32BE,\n  height: Uint32BE,\n  bitDepth: Uint8,\n  colorType: Uint8,\n  compressionMethod: Uint8,\n  filterMethod: Uint8,\n  interlaceMethod: Uint8\n}));\nPacket.initConstructor(PNGIHDRChunkBody);\nvar PNGFilterMethodByte = function (_Packet$extend5) {\n  png_packets_inherits(PNGFilterMethodByte, _Packet$extend5);\n  var _super5 = png_packets_createSuper(PNGFilterMethodByte);\n  function PNGFilterMethodByte() {\n    png_packets_classCallCheck(this, PNGFilterMethodByte);\n    return _super5.apply(this, arguments);\n  }\n  return PNGFilterMethodByte;\n}(Packet.extend({\n  method: Uint8\n}));\nPacket.initConstructor(PNGFilterMethodByte);\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/coders/adler32.js\nfunction adler32_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction adler32_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction adler32_createClass(Constructor, protoProps, staticProps) { if (protoProps) adler32_defineProperties(Constructor.prototype, protoProps); if (staticProps) adler32_defineProperties(Constructor, staticProps); return Constructor; }\nvar Adler32 = function () {\n  function Adler32() {\n    adler32_classCallCheck(this, Adler32);\n    this.adler = 1;\n  }\n  adler32_createClass(Adler32, [{\n    key: \"update\",\n    value: function update(uint8a, position, length) {\n      var a = this.adler & 0xffff;\n      var b = this.adler >>> 16;\n      for (var i = 0; i < length; i++) {\n        a = (a + uint8a[position + i]) % 65521;\n        b = (b + a) % 65521;\n      }\n      this.adler = b << 16 | a;\n      return this;\n    }\n  }, {\n    key: \"digest\",\n    get: function get() {\n      return this.adler;\n    }\n  }]);\n  return Adler32;\n}();\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/coders/deflate-packets.js\nfunction deflate_packets_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { deflate_packets_typeof = function _typeof(obj) { return typeof obj; }; } else { deflate_packets_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return deflate_packets_typeof(obj); }\nfunction deflate_packets_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction deflate_packets_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) deflate_packets_setPrototypeOf(subClass, superClass); }\nfunction deflate_packets_setPrototypeOf(o, p) { deflate_packets_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return deflate_packets_setPrototypeOf(o, p); }\nfunction deflate_packets_createSuper(Derived) { var hasNativeReflectConstruct = deflate_packets_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = deflate_packets_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = deflate_packets_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return deflate_packets_possibleConstructorReturn(this, result); }; }\nfunction deflate_packets_possibleConstructorReturn(self, call) { if (call && (deflate_packets_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return deflate_packets_assertThisInitialized(self); }\nfunction deflate_packets_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction deflate_packets_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\nfunction deflate_packets_getPrototypeOf(o) { deflate_packets_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return deflate_packets_getPrototypeOf(o); }\nvar DEFLATE_BLOCK_SIZE_MAX = 0xffff;\nvar DeflateHeader = function (_Packet$extend) {\n  deflate_packets_inherits(DeflateHeader, _Packet$extend);\n  var _super = deflate_packets_createSuper(DeflateHeader);\n  function DeflateHeader() {\n    deflate_packets_classCallCheck(this, DeflateHeader);\n    return _super.apply(this, arguments);\n  }\n  return DeflateHeader;\n}(Packet.extend({\n  cmf: Uint8,\n  flag: Uint8\n}));\nPacket.initConstructor(DeflateHeader);\nvar DeflateChunkStart = function (_Packet$extend2) {\n  deflate_packets_inherits(DeflateChunkStart, _Packet$extend2);\n  var _super2 = deflate_packets_createSuper(DeflateChunkStart);\n  function DeflateChunkStart() {\n    deflate_packets_classCallCheck(this, DeflateChunkStart);\n    return _super2.apply(this, arguments);\n  }\n  return DeflateChunkStart;\n}(Packet.extend({\n  lastPacket: Uint8,\n  length: Uint16LE,\n  lengthCheck: Uint16LE\n}));\nPacket.initConstructor(DeflateChunkStart);\nvar DeflateEnd = function (_Packet$extend3) {\n  deflate_packets_inherits(DeflateEnd, _Packet$extend3);\n  var _super3 = deflate_packets_createSuper(DeflateEnd);\n  function DeflateEnd() {\n    deflate_packets_classCallCheck(this, DeflateEnd);\n    return _super3.apply(this, arguments);\n  }\n  return DeflateEnd;\n}(Packet.extend({\n  checksum: Uint32LE\n}));\nPacket.initConstructor(DeflateEnd);\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/coders/proxy-stream.js\nfunction proxy_stream_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction proxy_stream_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction proxy_stream_createClass(Constructor, protoProps, staticProps) { if (protoProps) proxy_stream_defineProperties(Constructor.prototype, protoProps); if (staticProps) proxy_stream_defineProperties(Constructor, staticProps); return Constructor; }\nvar ProxyStream = function () {\n  function ProxyStream(stream) {\n    proxy_stream_classCallCheck(this, ProxyStream);\n    this.stream = stream;\n  }\n  proxy_stream_createClass(ProxyStream, [{\n    key: \"writeStruct\",\n    value: function writeStruct(StructType, data) {\n      return this.stream.writeStruct(StructType, data);\n    }\n  }, {\n    key: \"writeBytes\",\n    value: function writeBytes(bytes) {\n      var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : bytes.length;\n      return this.stream.writeBytes(bytes, start, end);\n    }\n  }, {\n    key: \"uint8a\",\n    get: function get() {\n      return this.stream.uint8a;\n    },\n    set: function set(value) {\n      this.stream.uint8a = value;\n      return this.stream.uint8a;\n    }\n  }, {\n    key: \"position\",\n    get: function get() {\n      return this.stream.position;\n    },\n    set: function set(value) {\n      this.stream.position = value;\n      return this.stream.position;\n    }\n  }]);\n  return ProxyStream;\n}();\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/coders/deflate-stream.js\nfunction deflate_stream_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { deflate_stream_typeof = function _typeof(obj) { return typeof obj; }; } else { deflate_stream_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return deflate_stream_typeof(obj); }\nfunction deflate_stream_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction deflate_stream_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction deflate_stream_createClass(Constructor, protoProps, staticProps) { if (protoProps) deflate_stream_defineProperties(Constructor.prototype, protoProps); if (staticProps) deflate_stream_defineProperties(Constructor, staticProps); return Constructor; }\nfunction deflate_stream_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) deflate_stream_setPrototypeOf(subClass, superClass); }\nfunction deflate_stream_setPrototypeOf(o, p) { deflate_stream_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return deflate_stream_setPrototypeOf(o, p); }\nfunction deflate_stream_createSuper(Derived) { var hasNativeReflectConstruct = deflate_stream_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = deflate_stream_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = deflate_stream_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return deflate_stream_possibleConstructorReturn(this, result); }; }\nfunction deflate_stream_possibleConstructorReturn(self, call) { if (call && (deflate_stream_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return deflate_stream_assertThisInitialized(self); }\nfunction deflate_stream_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction deflate_stream_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\nfunction deflate_stream_getPrototypeOf(o) { deflate_stream_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return deflate_stream_getPrototypeOf(o); }\n\nvar deflate_stream_DeflateStream = function (_ProxyStream) {\n  deflate_stream_inherits(DeflateStream, _ProxyStream);\n  var _super = deflate_stream_createSuper(DeflateStream);\n  function DeflateStream(stream) {\n    var _this;\n    deflate_stream_classCallCheck(this, DeflateStream);\n    _this = _super.call(this, stream);\n    _this.stream.writeStruct(DeflateHeader, {\n      cmf: 8,\n      flag: 29\n    });\n    _this.adler = new Adler32();\n    _this.chunk = _this.stream.writeStruct(DeflateChunkStart, {\n      lastPacket: 0,\n      length: 0,\n      lengthCheck: 0 ^ 0xffff\n    });\n    return _this;\n  }\n  deflate_stream_createClass(DeflateStream, [{\n    key: \"writeStruct\",\n    value: function writeStruct(StructType, data) {\n      this.writeBytes(Object.assign(new StructType(), data).uint8a);\n    }\n  }, {\n    key: \"writeBytes\",\n    value: function writeBytes(bytes) {\n      var start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : bytes.length;\n      var chunkStart = start;\n      while (end - chunkStart > 0) {\n        if (this._deflateIndex === DEFLATE_BLOCK_SIZE_MAX) {\n          this.chunk = this.stream.writeStruct(DeflateChunkStart, {\n            lastPacket: 0,\n            length: 0,\n            lengthCheck: 0 ^ 0xffff\n          });\n        }\n        var chunkLength = Math.min(end - chunkStart, DEFLATE_BLOCK_SIZE_MAX - this._deflateIndex);\n        this.stream.writeBytes(bytes, chunkStart, chunkStart + chunkLength);\n        this._deflateIndex += chunkLength;\n        chunkStart += chunkLength;\n      }\n      this.adler.update(bytes, start, end - start);\n    }\n  }, {\n    key: \"finish\",\n    value: function finish() {\n      this.chunk.lastPacket = 1;\n      this.stream.writeStruct(DeflateEnd, {\n        checksum: this.adler.digest\n      });\n    }\n  }, {\n    key: \"_deflateIndex\",\n    get: function get() {\n      return this.chunk.length;\n    },\n    set: function set(value) {\n      this.chunk.length = value;\n      this.chunk.lengthCheck = value ^ 0xffff;\n      return this.chunk.length;\n    }\n  }], [{\n    key: \"estimateSize\",\n    value: function estimateSize(bodySize) {\n      var packets = Math.ceil(bodySize / DEFLATE_BLOCK_SIZE_MAX);\n      return DeflateHeader.size + packets * DeflateChunkStart.size + DeflateEnd.size + bodySize;\n    }\n  }]);\n  return DeflateStream;\n}(ProxyStream);\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/coders/png-chunk-stream.js\nfunction png_chunk_stream_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { png_chunk_stream_typeof = function _typeof(obj) { return typeof obj; }; } else { png_chunk_stream_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return png_chunk_stream_typeof(obj); }\nfunction png_chunk_stream_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction png_chunk_stream_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction png_chunk_stream_createClass(Constructor, protoProps, staticProps) { if (protoProps) png_chunk_stream_defineProperties(Constructor.prototype, protoProps); if (staticProps) png_chunk_stream_defineProperties(Constructor, staticProps); return Constructor; }\nfunction png_chunk_stream_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) png_chunk_stream_setPrototypeOf(subClass, superClass); }\nfunction png_chunk_stream_setPrototypeOf(o, p) { png_chunk_stream_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return png_chunk_stream_setPrototypeOf(o, p); }\nfunction png_chunk_stream_createSuper(Derived) { var hasNativeReflectConstruct = png_chunk_stream_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = png_chunk_stream_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = png_chunk_stream_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return png_chunk_stream_possibleConstructorReturn(this, result); }; }\nfunction png_chunk_stream_possibleConstructorReturn(self, call) { if (call && (png_chunk_stream_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return png_chunk_stream_assertThisInitialized(self); }\nfunction png_chunk_stream_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction png_chunk_stream_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\nfunction png_chunk_stream_getPrototypeOf(o) { png_chunk_stream_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return png_chunk_stream_getPrototypeOf(o); }\n\nvar png_chunk_stream_PNGChunkStream = function (_ProxyStream) {\n  png_chunk_stream_inherits(PNGChunkStream, _ProxyStream);\n  var _super = png_chunk_stream_createSuper(PNGChunkStream);\n  function PNGChunkStream(stream) {\n    var _this;\n    var chunkType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'IHDR';\n    png_chunk_stream_classCallCheck(this, PNGChunkStream);\n    _this = _super.call(this, stream);\n    _this.start = _this.stream.writeStruct(PNGChunkStart, {\n      length: 0,\n      chunkType: chunkType\n    });\n    _this.crc = new CRC32();\n    return _this;\n  }\n  png_chunk_stream_createClass(PNGChunkStream, [{\n    key: \"finish\",\n    value: function finish() {\n      var crcStart = this.start.offset + this.start.size;\n      var length = this.position - crcStart;\n      this.start.length = length;\n      this.crc.update(this.stream.uint8a, crcStart - Uint32BE.size, length + Uint32BE.size);\n      this.stream.writeStruct(PNGChunkEnd, {\n        checksum: this.crc.digest\n      });\n    }\n  }], [{\n    key: \"size\",\n    value: function size(bodySize) {\n      return PNGChunkStart.size + bodySize + PNGChunkEnd.size;\n    }\n  }]);\n  return PNGChunkStream;\n}(ProxyStream);\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/coders/png-file.js\nfunction png_file_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction png_file_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction png_file_createClass(Constructor, protoProps, staticProps) { if (protoProps) png_file_defineProperties(Constructor.prototype, protoProps); if (staticProps) png_file_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar png_file_PNGFile = function () {\n  function PNGFile() {\n    png_file_classCallCheck(this, PNGFile);\n  }\n  png_file_createClass(PNGFile, [{\n    key: \"encode\",\n    value: function encode(width, height, pixelsUint8) {\n      var rowSize = width * 4 + PNGFilterMethodByte.size;\n      var bodySize = rowSize * height;\n      var size = png_packets_PNGSignature.size + // IHDR\n      png_chunk_stream_PNGChunkStream.size(PNGIHDRChunkBody.size) + // IDAT\n      png_chunk_stream_PNGChunkStream.size(deflate_stream_DeflateStream.estimateSize(bodySize)) + // IEND\n      png_chunk_stream_PNGChunkStream.size(0);\n      var stream = new byte_stream_ByteStream(new ArrayBuffer(size));\n      stream.writeStruct(png_packets_PNGSignature, {\n        support8Bit: 0x89,\n        png: 'PNG',\n        dosLineEnding: '\\r\\n',\n        dosEndOfFile: '\\x1a',\n        unixLineEnding: '\\n'\n      });\n      var pngIhdr = new png_chunk_stream_PNGChunkStream(stream, 'IHDR');\n      pngIhdr.writeStruct(PNGIHDRChunkBody, {\n        width: width,\n        height: height,\n        bitDepth: 8,\n        colorType: 6,\n        compressionMethod: 0,\n        filterMethod: 0,\n        interlaceMethod: 0\n      });\n      pngIhdr.finish();\n      var pngIdat = new png_chunk_stream_PNGChunkStream(stream, 'IDAT');\n      var deflate = new deflate_stream_DeflateStream(pngIdat);\n      var pixelsIndex = 0;\n      while (pixelsIndex < pixelsUint8.length) {\n        deflate.writeStruct(PNGFilterMethodByte, {\n          method: 0\n        });\n        var partialLength = Math.min(pixelsUint8.length - pixelsIndex, rowSize - PNGFilterMethodByte.size);\n        deflate.writeBytes(pixelsUint8, pixelsIndex, pixelsIndex + partialLength);\n        pixelsIndex += partialLength;\n      }\n      deflate.finish();\n      pngIdat.finish();\n      var pngIend = new png_chunk_stream_PNGChunkStream(stream, 'IEND');\n      pngIend.finish();\n      return stream.buffer;\n    }\n  }], [{\n    key: \"encode\",\n    value: function encode(width, height, pixels) {\n      return new PNGFile().encode(width, height, pixels);\n    }\n  }]);\n  return PNGFile;\n}();\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/to-sb2/fake-zip.js\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = fake_zip_unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction fake_zip_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return fake_zip_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return fake_zip_arrayLikeToArray(o, minLen); }\nfunction fake_zip_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction fake_zip_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction fake_zip_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction fake_zip_createClass(Constructor, protoProps, staticProps) { if (protoProps) fake_zip_defineProperties(Constructor.prototype, protoProps); if (staticProps) fake_zip_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar fake_zip_FakeZipFile = function () {\n  function FakeZipFile(file) {\n    fake_zip_classCallCheck(this, FakeZipFile);\n    this.file = file;\n  }\n  fake_zip_createClass(FakeZipFile, [{\n    key: \"async\",\n    value: function async(outputType) {\n      assert(outputType === 'uint8array', 'SB1FakeZipFile only supports uint8array');\n      return Promise.resolve(this.file.bytes);\n    }\n  }]);\n  return FakeZipFile;\n}();\nvar FakeZip = function () {\n  function FakeZip(files) {\n    fake_zip_classCallCheck(this, FakeZip);\n    this.files = files;\n  }\n  fake_zip_createClass(FakeZip, [{\n    key: \"file\",\n    value: function file(_file) {\n      if (_file in this.files) {\n        return new fake_zip_FakeZipFile(this.files[_file]);\n      }\n    }\n  }]);\n  return FakeZip;\n}();\nvar fake_zip_toSb2ImageExtension = function toSb2ImageExtension(imageMedia) {\n  if (imageMedia.extension === 'uncompressed') {\n    return 'png';\n  }\n  return 'jpg';\n};\nvar fake_zip_toSb2ImageMedia = function toSb2ImageMedia(imageMedia) {\n  if (imageMedia.extension === 'uncompressed') {\n    return new Uint8Array(png_file_PNGFile.encode(imageMedia.width, imageMedia.height, imageMedia.decoded));\n  }\n  return imageMedia.decoded;\n};\nvar toSb2SoundMedia = function toSb2SoundMedia(soundMedia) {\n  return soundMedia.wavEncodedData;\n};\nvar toSb2FakeZipApi = function toSb2FakeZipApi(_ref) {\n  var images = _ref.images,\n      sounds = _ref.sounds;\n  var files = {};\n  var index = 0;\n  var _iterator = _createForOfIteratorHelper(images),\n      _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var image = _step.value;\n      files[\"\".concat(index++, \".\").concat(fake_zip_toSb2ImageExtension(image))] = {\n        bytes: fake_zip_toSb2ImageMedia(image)\n      };\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  index = 0;\n  var _iterator2 = _createForOfIteratorHelper(sounds),\n      _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var sound = _step2.value;\n      files[\"\".concat(index++, \".wav\")] = {\n        bytes: toSb2SoundMedia(sound)\n      };\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return new FakeZip(files);\n};\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/to-sb2/json-generator.js\nfunction json_generator_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { json_generator_typeof = function _typeof(obj) { return typeof obj; }; } else { json_generator_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return json_generator_typeof(obj); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || json_generator_unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return json_generator_arrayLikeToArray(arr); }\nfunction json_generator_slicedToArray(arr, i) { return json_generator_arrayWithHoles(arr) || json_generator_iterableToArrayLimit(arr, i) || json_generator_unsupportedIterableToArray(arr, i) || json_generator_nonIterableRest(); }\nfunction json_generator_nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction json_generator_unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return json_generator_arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return json_generator_arrayLikeToArray(o, minLen); }\nfunction json_generator_arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction json_generator_iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction json_generator_arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/* eslint no-use-before-define:1 */\n // https://github.com/LLK/scratch-flash/blob/cb5f42f039ef633710faf9c63b69e8368b280372/src/blocks/BlockIO.as#L292-L308\nvar json_generator_fixMouseEdgeRef = function fixMouseEdgeRef(block) {\n  var oldVal = String(block[block.length - 1]);\n  var last = block.length - 1;\n  if (oldVal === 'mouse') {\n    block[last] = '_mouse_';\n  } else if (oldVal === 'edge') {\n    block[last] = '_edge_';\n  } else if (block[block.length - 1] instanceof StageData) {\n    block[last] = '_stage_';\n  }\n  return block;\n};\nvar sb1SpecMap = {\n  // https://github.com/LLK/scratch-flash/blob/cb5f42f039ef633710faf9c63b69e8368b280372/src/blocks/BlockIO.as#L197-L199\n  'getParam': function getParam(_ref) {\n    var _ref2 = json_generator_slicedToArray(_ref, 4),\n        a = _ref2[0],\n        b = _ref2[1],\n        c = _ref2[2],\n        d = _ref2[3];\n    return [a, b, c, d || 'r'];\n  },\n  // https://github.com/LLK/scratch-flash/blob/cb5f42f039ef633710faf9c63b69e8368b280372/src/blocks/BlockIO.as#L200-L212\n  'changeVariable': function changeVariable(block) {\n    return [block[2], block[1], block[3]];\n  },\n  // https://github.com/LLK/scratch-flash/blob/cb5f42f039ef633710faf9c63b69e8368b280372/src/blocks/BlockIO.as#L213-L219\n  'EventHatMorph': function EventHatMorph(block) {\n    if (String(block[1]) === 'Scratch-StartClicked') {\n      return ['whenGreenFlag'];\n    }\n    return ['whenIReceive', block[1]];\n  },\n  // https://github.com/LLK/scratch-flash/blob/cb5f42f039ef633710faf9c63b69e8368b280372/src/blocks/BlockIO.as#L220-L222\n  'MouseClickEventHatMorph': function MouseClickEventHatMorph() {\n    return ['whenClicked'];\n  },\n  // https://github.com/LLK/scratch-flash/blob/cb5f42f039ef633710faf9c63b69e8368b280372/src/blocks/BlockIO.as#L223-L226\n  'KeyEventHatMorph': function KeyEventHatMorph(block) {\n    return ['whenKeyPressed', block[1]];\n  },\n  // https://github.com/LLK/scratch-flash/blob/cb5f42f039ef633710faf9c63b69e8368b280372/src/blocks/BlockIO.as#L227-L235\n  'stopScripts': function stopScripts(block) {\n    if (String(block[1]) === 'other scripts') {\n      return [block[0], 'other scripts in sprite'];\n    }\n    return block;\n  },\n  // https://github.com/LLK/scratch-flash/blob/cb5f42f039ef633710faf9c63b69e8368b280372/src/blocks/BlockIO.as#L249-L253\n  'abs': function abs(block) {\n    return ['computeFunction:of:', 'abs', block[1]];\n  },\n  // https://github.com/LLK/scratch-flash/blob/cb5f42f039ef633710faf9c63b69e8368b280372/src/blocks/BlockIO.as#L254-L258\n  'sqrt': function sqrt(block) {\n    return ['computeFunction:of:', 'sqrt', block[1]];\n  },\n  // https://github.com/LLK/scratch-flash/blob/cb5f42f039ef633710faf9c63b69e8368b280372/src/blocks/BlockIO.as#L137\n  '\\\\\\\\': function _(block) {\n    return ['%'].concat(_toConsumableArray(block.slice(1)));\n  },\n  // https://github.com/LLK/scratch-flash/blob/cb5f42f039ef633710faf9c63b69e8368b280372/src/blocks/BlockIO.as#L259-L262\n  'doReturn': function doReturn() {\n    return ['stopScripts', 'this script'];\n  },\n  // https://github.com/LLK/scratch-flash/blob/cb5f42f039ef633710faf9c63b69e8368b280372/src/blocks/BlockIO.as#L263-L266\n  'stopAll': function stopAll() {\n    return ['stopScripts', 'all'];\n  },\n  // https://github.com/LLK/scratch-flash/blob/cb5f42f039ef633710faf9c63b69e8368b280372/src/blocks/BlockIO.as#L267-L270\n  'showBackground:': function showBackground(block) {\n    return ['startScene', block[1]];\n  },\n  // https://github.com/LLK/scratch-flash/blob/cb5f42f039ef633710faf9c63b69e8368b280372/src/blocks/BlockIO.as#L271-L273\n  'nextBackground': function nextBackground() {\n    return ['nextScene'];\n  },\n  // https://github.com/LLK/scratch-flash/blob/cb5f42f039ef633710faf9c63b69e8368b280372/src/blocks/BlockIO.as#L274-L282\n  'doForeverIf': function doForeverIf(block) {\n    return ['doForever', [['doIf', block[1], block[2]]]];\n  },\n  'getAttribute:of:': json_generator_fixMouseEdgeRef,\n  'gotoSpriteOrMouse:': json_generator_fixMouseEdgeRef,\n  'distanceTo:': json_generator_fixMouseEdgeRef,\n  'pointTowards:': json_generator_fixMouseEdgeRef,\n  'touching:': json_generator_fixMouseEdgeRef\n};\nvar json_generator_valueOf = function valueOf(obj) {\n  if (json_generator_typeof(obj) === 'object' && obj) return obj.valueOf();\n  return obj;\n};\nvar json_generator_toSb2Json = function toSb2Json(root) {\n  var info = root.info,\n      stageData = root.stageData,\n      images = root.images,\n      sounds = root.sounds;\n  var pairs = function pairs(array) {\n    var _pairs = [];\n    for (var i = 0; i < array.length; i += 2) {\n      _pairs.push([array[i], array[i + 1]]);\n    }\n    return _pairs;\n  };\n  var toSb2JsonVariable = function toSb2JsonVariable(_ref3) {\n    var _ref4 = json_generator_slicedToArray(_ref3, 2),\n        name = _ref4[0],\n        value = _ref4[1];\n    return {\n      name: name,\n      value: value,\n      isPersistent: false\n    };\n  };\n  var toSb2JsonList = function toSb2JsonList(_ref5) {\n    var _ref6 = json_generator_slicedToArray(_ref5, 2),\n        _ref6$ = _ref6[1],\n        listName = _ref6$.listName,\n        contents = _ref6$.contents,\n        x = _ref6$.x,\n        y = _ref6$.y,\n        width = _ref6$.width,\n        height = _ref6$.height,\n        hiddenWhenNull = _ref6$.hiddenWhenNull;\n    return {\n      listName: listName,\n      contents: contents,\n      isPersistent: false,\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      visible: json_generator_valueOf(hiddenWhenNull) !== null\n    };\n  }; // TODO: Implement toSb2JsonWatcher\n  // const toSb2JsonWatcher = watcher => {\n  //\n  // };\n  // TODO: Implement toSb2JsonListWatcher\n  // const toSb2JsonListWatcher = listWatcher => {\n  //\n  // };\n  var toSb2JsonSound = function toSb2JsonSound(soundMediaData) {\n    var soundID = sounds.findIndex(function (sound) {\n      return sound.crc === soundMediaData.crc;\n    });\n    return {\n      soundName: soundMediaData.name,\n      soundID: soundID,\n      md5: \"\".concat(soundMediaData.md5, \".wav\"),\n      sampleCount: soundMediaData.sampleCount,\n      rate: soundMediaData.rate,\n      format: ''\n    };\n  };\n  var toSb2ImageExtension = function toSb2ImageExtension(imageMedia) {\n    if (imageMedia.extension === 'uncompressed') {\n      return 'png';\n    }\n    return 'jpg';\n  };\n  var toSb2JsonCostume = function toSb2JsonCostume(imageMediaData) {\n    var baseLayerID = images.findIndex(function (image) {\n      return image.crc === imageMediaData.crc;\n    });\n    return {\n      costumeName: imageMediaData.costumeName,\n      baseLayerID: baseLayerID,\n      baseLayerMD5: \"\".concat(md5_default()(imageMediaData.rawBytes), \".\").concat(toSb2ImageExtension(imageMediaData)),\n      bitmapResolution: 1,\n      rotationCenterX: imageMediaData.rotationCenter.x,\n      rotationCenterY: imageMediaData.rotationCenter.y\n    };\n  };\n  var toSb2JsonBlock = function toSb2JsonBlock(blockData) {\n    var output = blockData.map(toSb2JsonBlockArg);\n    var spec = sb1SpecMap[output[0]];\n    if (spec) {\n      output = spec(output);\n    }\n    return output;\n  };\n  var toSb2JsonStack = function toSb2JsonStack(stackData) {\n    return stackData.map(toSb2JsonBlock);\n  };\n  var toSb2JsonBlockArg = function toSb2JsonBlockArg(argData) {\n    if (argData instanceof SpriteData) {\n      return argData.objName;\n    } else if (Array.isArray(argData)) {\n      if (argData.length === 0 || Array.isArray(argData[0])) {\n        return toSb2JsonStack(argData);\n      }\n      return toSb2JsonBlock(argData);\n    }\n    return argData;\n  };\n  var toSb2JsonScript = function toSb2JsonScript(scriptData) {\n    return [scriptData[0].x, scriptData[0].y, toSb2JsonStack(scriptData[1])];\n  };\n  var toSb2JsonSprite = function toSb2JsonSprite(spriteData) {\n    var rawCostumes = spriteData.media.filter(function (data) {\n      return data instanceof types_ImageMediaData;\n    });\n    var rawSounds = spriteData.media.filter(function (data) {\n      return data instanceof types_SoundMediaData;\n    });\n    return {\n      objName: spriteData.objName,\n      variables: pairs(spriteData.vars).map(toSb2JsonVariable),\n      lists: pairs(spriteData.lists).map(toSb2JsonList),\n      scripts: spriteData.blocksBin.map(toSb2JsonScript),\n      costumes: rawCostumes.map(toSb2JsonCostume),\n      currentCostumeIndex: rawCostumes.findIndex(function (image) {\n        return image.crc === spriteData.currentCostume.crc;\n      }),\n      sounds: rawSounds.map(toSb2JsonSound),\n      scratchX: spriteData.scratchX,\n      scratchY: spriteData.scratchY,\n      scale: spriteData.scalePoint.x,\n      direction: Math.round(spriteData.rotationDegrees * 1e6) / 1e6 - 270,\n      rotationStyle: spriteData.rotationStyle,\n      isDraggable: spriteData.draggable,\n      indexInLibrary: stageData.spriteOrderInLibrary.indexOf(spriteData),\n      visible: spriteData.visible,\n      spriteInfo: {}\n    };\n  };\n  var toSb2JsonChild = function toSb2JsonChild(child) {\n    if (child instanceof SpriteData) {\n      return toSb2JsonSprite(child);\n    }\n    return null;\n  };\n  var toSb2JsonStage = function toSb2JsonStage(_stageData) {\n    var rawCostumes = _stageData.media.filter(function (data) {\n      return data instanceof types_ImageMediaData;\n    });\n    var rawSounds = _stageData.media.filter(function (data) {\n      return data instanceof types_SoundMediaData;\n    });\n    return {\n      objName: _stageData.objName,\n      variables: pairs(_stageData.vars).map(toSb2JsonVariable),\n      lists: pairs(_stageData.lists).map(toSb2JsonList),\n      scripts: _stageData.blocksBin.map(toSb2JsonScript),\n      costumes: rawCostumes.map(toSb2JsonCostume),\n      currentCostumeIndex: rawCostumes.findIndex(function (image) {\n        return image.crc === _stageData.currentCostume.crc;\n      }),\n      sounds: rawSounds.map(toSb2JsonSound),\n      // TODO: Where does this come from? Is it always the same for SB1?\n      penLayerMD5: '5c81a336fab8be57adc039a8a2b33ca9.png',\n      penLayerID: 0,\n      tempoBPM: _stageData.tempoBPM,\n      videoAlpha: 0.5,\n      children: _stageData.stageContents.map(toSb2JsonChild).filter(Boolean).reverse()\n    };\n  };\n  var toSb2JsonInfo = function toSb2JsonInfo(_info) {\n    var obj = {};\n    for (var i = 0; i < _info.length; i += 2) {\n      if (String(_info[i]) === 'thumbnail') continue;\n      obj[String(_info[i])] = String(_info[i + 1]);\n    }\n    return obj;\n  };\n  return JSON.parse(JSON.stringify(Object.assign(toSb2JsonStage(stageData), {\n    info: toSb2JsonInfo(info)\n  })));\n};\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/sb1-file-packets.js\nfunction sb1_file_packets_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { sb1_file_packets_typeof = function _typeof(obj) { return typeof obj; }; } else { sb1_file_packets_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return sb1_file_packets_typeof(obj); }\nfunction sb1_file_packets_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction sb1_file_packets_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction sb1_file_packets_createClass(Constructor, protoProps, staticProps) { if (protoProps) sb1_file_packets_defineProperties(Constructor.prototype, protoProps); if (staticProps) sb1_file_packets_defineProperties(Constructor, staticProps); return Constructor; }\nfunction sb1_file_packets_inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) sb1_file_packets_setPrototypeOf(subClass, superClass); }\nfunction sb1_file_packets_setPrototypeOf(o, p) { sb1_file_packets_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return sb1_file_packets_setPrototypeOf(o, p); }\nfunction sb1_file_packets_createSuper(Derived) { var hasNativeReflectConstruct = sb1_file_packets_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = sb1_file_packets_getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = sb1_file_packets_getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return sb1_file_packets_possibleConstructorReturn(this, result); }; }\nfunction sb1_file_packets_possibleConstructorReturn(self, call) { if (call && (sb1_file_packets_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return sb1_file_packets_assertThisInitialized(self); }\nfunction sb1_file_packets_assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction sb1_file_packets_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\nfunction sb1_file_packets_getPrototypeOf(o) { sb1_file_packets_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return sb1_file_packets_getPrototypeOf(o); }\n\n/**\n * @augments Packet\n */\nvar sb1_file_packets_SB1Signature = function (_Packet$extend) {\n  sb1_file_packets_inherits(SB1Signature, _Packet$extend);\n  var _super = sb1_file_packets_createSuper(SB1Signature);\n  function SB1Signature() {\n    sb1_file_packets_classCallCheck(this, SB1Signature);\n    return _super.apply(this, arguments);\n  }\n  sb1_file_packets_createClass(SB1Signature, [{\n    key: \"validate\",\n    /**\n     * Is this a valid SB1Signature?\n     * @method\n     * @throws {AssertionError} Throws if it is not valid.\n     */\n    value: function validate() {\n      assert.validate(this.equals({\n        version: 'ScratchV01'\n      }) || this.equals({\n        version: 'ScratchV02'\n      }), 'Invalid Scratch file signature.');\n    }\n  }]);\n  return SB1Signature;\n}(Packet.extend({\n  /**\n   * 10 byte ascii string equaling `'ScratchV01'` or `'ScratchV02'`.\n   * @type {string}\n   * @memberof SB1Signature#\n   */\n  version: new byte_primitives_FixedAsciiString(10),\n  /**\n   * Number of bytes in the info block.\n   * @type {number}\n   * @memberof SB1Signature#\n   */\n  infoByteLength: Uint32BE\n}));\nPacket.initConstructor(sb1_file_packets_SB1Signature);\nvar sb1_file_packets_SB1Header = function (_Packet$extend2) {\n  sb1_file_packets_inherits(SB1Header, _Packet$extend2);\n  var _super2 = sb1_file_packets_createSuper(SB1Header);\n  function SB1Header() {\n    sb1_file_packets_classCallCheck(this, SB1Header);\n    return _super2.apply(this, arguments);\n  }\n  sb1_file_packets_createClass(SB1Header, [{\n    key: \"validate\",\n    value: function validate() {\n      assert.validate(this.equals({\n        ObjS: 'ObjS',\n        ObjSValue: 1,\n        Stch: 'Stch',\n        StchValue: 1\n      }), 'Invalid Scratch file info packet header.');\n    }\n  }]);\n  return SB1Header;\n}(Packet.extend({\n  ObjS: new byte_primitives_FixedAsciiString(4),\n  ObjSValue: Uint8,\n  Stch: new byte_primitives_FixedAsciiString(4),\n  StchValue: Uint8,\n  numObjects: Uint32BE\n}));\nPacket.initConstructor(sb1_file_packets_SB1Header);\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/src/sb1-file.js\nfunction sb1_file_classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction sb1_file_defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction sb1_file_createClass(Constructor, protoProps, staticProps) { if (protoProps) sb1_file_defineProperties(Constructor.prototype, protoProps); if (staticProps) sb1_file_defineProperties(Constructor, staticProps); return Constructor; }\n\nvar sb1_file_SB1File = function () {\n  function SB1File(buffer) {\n    sb1_file_classCallCheck(this, SB1File);\n    this.buffer = buffer;\n    this.stream = new byte_stream_ByteStream(buffer);\n    this.signature = this.stream.readStruct(sb1_file_packets_SB1Signature);\n    this.signature.validate();\n    this.infoHeader = this.stream.readStruct(sb1_file_packets_SB1Header);\n    this.infoHeader.validate();\n    this.stream.position += this.signature.infoByteLength - sb1_file_packets_SB1Header.size;\n    this.dataHeader = this.stream.readStruct(sb1_file_packets_SB1Header);\n    this.dataHeader.validate();\n  }\n  sb1_file_createClass(SB1File, [{\n    key: \"view\",\n    value: function view() {\n      return {\n        signature: this.signature,\n        infoHeader: this.infoHeader,\n        dataHeader: this.dataHeader,\n        toString: function toString() {\n          return 'SB1File';\n        }\n      };\n    }\n  }, {\n    key: \"infoRaw\",\n    value: function infoRaw() {\n      return new ByteTakeIterator(new field_iterator_FieldIterator(this.buffer, this.infoHeader.offset + sb1_file_packets_SB1Header.size), this.signature.infoByteLength + sb1_file_packets_SB1Signature.size);\n    }\n  }, {\n    key: \"infoTable\",\n    value: function infoTable() {\n      return new type_iterator_TypeIterator(this.infoRaw());\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      if (!this._info) {\n        this._info = new reference_fixer_ReferenceFixer(this.infoTable()).table[0];\n      }\n      return this._info;\n    }\n  }, {\n    key: \"dataRaw\",\n    value: function dataRaw() {\n      return new ByteTakeIterator(new field_iterator_FieldIterator(this.buffer, this.dataHeader.offset + sb1_file_packets_SB1Header.size), this.stream.uint8a.length);\n    }\n  }, {\n    key: \"dataTable\",\n    value: function dataTable() {\n      return new type_iterator_TypeIterator(this.dataRaw());\n    }\n  }, {\n    key: \"dataFixed\",\n    value: function dataFixed() {\n      if (!this._data) {\n        this._data = new reference_fixer_ReferenceFixer(this.dataTable()).table;\n      }\n      return this._data;\n    }\n  }, {\n    key: \"data\",\n    value: function data() {\n      return this.dataFixed()[0];\n    }\n  }, {\n    key: \"images\",\n    value: function images() {\n      var unique = new Set();\n      return this.dataFixed().filter(function (obj) {\n        if (obj instanceof types_ImageMediaData) {\n          if (unique.has(obj.crc)) return false;\n          unique.add(obj.crc);\n          return true;\n        }\n        return false;\n      });\n    }\n  }, {\n    key: \"sounds\",\n    value: function sounds() {\n      var unique = new Set();\n      return this.dataFixed().filter(function (obj) {\n        if (obj instanceof types_SoundMediaData) {\n          if (unique.has(obj.crc)) return false;\n          unique.add(obj.crc);\n          return true;\n        }\n        return false;\n      });\n    }\n  }, {\n    key: \"json\",\n    get: function get() {\n      return json_generator_toSb2Json({\n        info: this.info(),\n        stageData: this.data(),\n        images: this.images(),\n        sounds: this.sounds()\n      });\n    }\n  }, {\n    key: \"zip\",\n    get: function get() {\n      return toSb2FakeZipApi({\n        // Use of this `zip` getter assumes that `json` will be used to\n        // fetch the json and not have it read from the produced \"fake\" zip.\n        images: this.images(),\n        sounds: this.sounds()\n      });\n    }\n  }]);\n  return SB1File;\n}();\n// CONCATENATED MODULE: ./node_modules/scratch-sb1-converter/index.js\n\n })