/* 1275 */\n (function(module, exports) {\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\nvar CanvasMeasurementProvider = function () {\n  /**\n   * @param {CanvasRenderingContext2D} ctx - provides a canvas rendering context\n   * with 'font' set to the text style of the text to be wrapped.\n   */\n  function CanvasMeasurementProvider(ctx) {\n    _classCallCheck(this, CanvasMeasurementProvider);\n    this._ctx = ctx;\n    this._cache = {};\n  } // We don't need to set up or tear down anything here. Should these be removed altogether?\n  /**\n   * Called by the TextWrapper before a batch of zero or more calls to measureText().\n   */\n  _createClass(CanvasMeasurementProvider, [{\n    key: \"beginMeasurementSession\",\n    value: function beginMeasurementSession() {}\n    /**\n     * Called by the TextWrapper after a batch of zero or more calls to measureText().\n     */\n  }, {\n    key: \"endMeasurementSession\",\n    value: function endMeasurementSession() {}\n    /**\n     * Measure a whole string as one unit.\n     * @param {string} text - the text to measure.\n     * @returns {number} - the length of the string.\n     */\n  }, {\n    key: \"measureText\",\n    value: function measureText(text) {\n      if (!this._cache[text]) {\n        this._cache[text] = this._ctx.measureText(text).width;\n      }\n      return this._cache[text];\n    }\n  }]);\n  return CanvasMeasurementProvider;\n}();\nmodule.exports = CanvasMeasurementProvider;\n })