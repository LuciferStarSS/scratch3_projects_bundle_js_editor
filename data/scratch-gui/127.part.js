/* 127 */\n (function(module, __webpack_exports__, __webpack_require__) {\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return reducer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return initialState; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return activateColorPicker; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return deactivateColorPicker; });\n/* unused harmony export setCallback */\nvar ACTIVATE_COLOR_PICKER = 'scratch-gui/color-picker/ACTIVATE_COLOR_PICKER';\nvar DEACTIVATE_COLOR_PICKER = 'scratch-gui/color-picker/DEACTIVATE_COLOR_PICKER';\nvar SET_CALLBACK = 'scratch-gui/color-picker/SET_CALLBACK';\nvar initialState = {\n  active: false,\n  callback: function callback() {\n    throw new Error('Color picker callback not initialized');\n  }\n};\nvar reducer = function reducer(state, action) {\n  if (typeof state === 'undefined') state = initialState;\n  switch (action.type) {\n    case ACTIVATE_COLOR_PICKER:\n      return Object.assign({}, state, {\n        active: true,\n        callback: action.callback\n      });\n    case DEACTIVATE_COLOR_PICKER:\n      // Can be called without a string to deactivate without setting color\n      // i.e. when clicking on the modal background\n      if (typeof action.color === 'string') {\n        state.callback(action.color);\n      }\n      return Object.assign({}, state, {\n        active: false\n      });\n    case SET_CALLBACK:\n      return Object.assign({}, state, {\n        callback: action.callback\n      });\n    default:\n      return state;\n  }\n};\nvar activateColorPicker = function activateColorPicker(callback) {\n  return {\n    type: ACTIVATE_COLOR_PICKER,\n    callback: callback\n  };\n};\nvar deactivateColorPicker = function deactivateColorPicker(color) {\n  return {\n    type: DEACTIVATE_COLOR_PICKER,\n    color: color\n  };\n};\nvar setCallback = function setCallback(callback) {\n  return {\n    type: SET_CALLBACK,\n    callback: callback\n  };\n};\n })