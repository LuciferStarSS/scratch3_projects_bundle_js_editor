/* 1101 */\n (function(module, exports, __webpack_require__) {\n(function(module) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n/**\n * Copyright (c) 2019 Vernier Software. All rights reserved.\n * This code may only be used under the BSD 3-Clause license found at\n * https://raw.githubusercontent.com/VernierST/godirect-js/master/LICENSE\n */\n!function (e, t) {\n  \"object\" == ( false ? undefined : _typeof(exports)) && \"undefined\" != typeof module ? module.exports = t() :  true ? !(__WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;\n}(this, function () {\n  \"use strict\";\n  function e(e, t, n, r, i, a, o) {\n    try {\n      var s = e[a](o),\n          u = s.value;\n    } catch (e) {\n      return void n(e);\n    }\n    s.done ? t(u) : Promise.resolve(u).then(r, i);\n  }\n  function t(t) {\n    return function () {\n      var n = this,\n          r = arguments;\n      return new Promise(function (i, a) {\n        var o = t.apply(n, r);\n        function s(t) {\n          e(o, i, a, s, u, \"next\", t);\n        }\n        function u(t) {\n          e(o, i, a, s, u, \"throw\", t);\n        }\n        s(void 0);\n      });\n    };\n  }\n  function n(e, t) {\n    if (!(e instanceof t)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function r(e, t) {\n    for (var n = 0; n < t.length; n++) {\n      var r = t[n];\n      r.enumerable = r.enumerable || !1, r.configurable = !0, \"value\" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);\n    }\n  }\n  function i(e, t, n) {\n    return t && r(e.prototype, t), n && r(e, n), e;\n  }\n  function a(e, t) {\n    if (\"function\" != typeof t && null !== t) throw new TypeError(\"Super expression must either be null or a function\");\n    e.prototype = Object.create(t && t.prototype, {\n      constructor: {\n        value: e,\n        writable: !0,\n        configurable: !0\n      }\n    }), t && s(e, t);\n  }\n  function o(e) {\n    return (o = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {\n      return e.__proto__ || Object.getPrototypeOf(e);\n    })(e);\n  }\n  function s(e, t) {\n    return (s = Object.setPrototypeOf || function (e, t) {\n      return e.__proto__ = t, e;\n    })(e, t);\n  }\n  function u(e, t) {\n    return !t || \"object\" != _typeof(t) && \"function\" != typeof t ? function (e) {\n      if (void 0 === e) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      return e;\n    }(e) : t;\n  }\n  !function (e) {\n    var t,\n        n = Object.prototype,\n        r = n.hasOwnProperty,\n        i = \"function\" == typeof Symbol ? Symbol : {},\n        a = i.iterator || \"@@iterator\",\n        o = i.asyncIterator || \"@@asyncIterator\",\n        s = i.toStringTag || \"@@toStringTag\",\n        u = \"object\" == ( false ? undefined : _typeof(module)),\n        c = e.regeneratorRuntime;\n    if (c) u && (module.exports = c);else {\n      (c = e.regeneratorRuntime = u ? module.exports : {}).wrap = b;\n      var f = \"suspendedStart\",\n          h = \"suspendedYield\",\n          l = \"executing\",\n          p = \"completed\",\n          d = {},\n          m = {};\n      m[a] = function () {\n        return this;\n      };\n      var v = Object.getPrototypeOf,\n          g = v && v(v(C([])));\n      g && g !== n && r.call(g, a) && (m = g);\n      var y = x.prototype = _.prototype = Object.create(m);\n      k.prototype = y.constructor = x, x.constructor = k, x[s] = k.displayName = \"GeneratorFunction\", c.isGeneratorFunction = function (e) {\n        var t = \"function\" == typeof e && e.constructor;\n        return !!t && (t === k || \"GeneratorFunction\" === (t.displayName || t.name));\n      }, c.mark = function (e) {\n        return Object.setPrototypeOf ? Object.setPrototypeOf(e, x) : (e.__proto__ = x, s in e || (e[s] = \"GeneratorFunction\")), e.prototype = Object.create(y), e;\n      }, c.awrap = function (e) {\n        return {\n          __await: e\n        };\n      }, E(S.prototype), S.prototype[o] = function () {\n        return this;\n      }, c.AsyncIterator = S, c.async = function (e, t, n, r) {\n        var i = new S(b(e, t, n, r));\n        return c.isGeneratorFunction(t) ? i : i.next().then(function (e) {\n          return e.done ? e.value : i.next();\n        });\n      }, E(y), y[s] = \"Generator\", y[a] = function () {\n        return this;\n      }, y.toString = function () {\n        return \"[object Generator]\";\n      }, c.keys = function (e) {\n        var t = [];\n        for (var n in e) {\n          t.push(n);\n        }\n        return t.reverse(), function n() {\n          for (; t.length;) {\n            var r = t.pop();\n            if (r in e) return n.value = r, n.done = !1, n;\n          }\n          return n.done = !0, n;\n        };\n      }, c.values = C, A.prototype = {\n        constructor: A,\n        reset: function reset(e) {\n          if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(M), !e) for (var n in this) {\n            \"t\" === n.charAt(0) && r.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = t);\n          }\n        },\n        stop: function stop() {\n          this.done = !0;\n          var e = this.tryEntries[0].completion;\n          if (\"throw\" === e.type) throw e.arg;\n          return this.rval;\n        },\n        dispatchException: function dispatchException(e) {\n          if (this.done) throw e;\n          var n = this;\n          function i(r, i) {\n            return s.type = \"throw\", s.arg = e, n.next = r, i && (n.method = \"next\", n.arg = t), !!i;\n          }\n          for (var a = this.tryEntries.length - 1; a >= 0; --a) {\n            var o = this.tryEntries[a],\n                s = o.completion;\n            if (\"root\" === o.tryLoc) return i(\"end\");\n            if (o.tryLoc <= this.prev) {\n              var u = r.call(o, \"catchLoc\"),\n                  c = r.call(o, \"finallyLoc\");\n              if (u && c) {\n                if (this.prev < o.catchLoc) return i(o.catchLoc, !0);\n                if (this.prev < o.finallyLoc) return i(o.finallyLoc);\n              } else if (u) {\n                if (this.prev < o.catchLoc) return i(o.catchLoc, !0);\n              } else {\n                if (!c) throw new Error(\"try statement without catch or finally\");\n                if (this.prev < o.finallyLoc) return i(o.finallyLoc);\n              }\n            }\n          }\n        },\n        abrupt: function abrupt(e, t) {\n          for (var n = this.tryEntries.length - 1; n >= 0; --n) {\n            var i = this.tryEntries[n];\n            if (i.tryLoc <= this.prev && r.call(i, \"finallyLoc\") && this.prev < i.finallyLoc) {\n              var a = i;\n              break;\n            }\n          }\n          a && (\"break\" === e || \"continue\" === e) && a.tryLoc <= t && t <= a.finallyLoc && (a = null);\n          var o = a ? a.completion : {};\n          return o.type = e, o.arg = t, a ? (this.method = \"next\", this.next = a.finallyLoc, d) : this.complete(o);\n        },\n        complete: function complete(e, t) {\n          if (\"throw\" === e.type) throw e.arg;\n          return \"break\" === e.type || \"continue\" === e.type ? this.next = e.arg : \"return\" === e.type ? (this.rval = this.arg = e.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === e.type && t && (this.next = t), d;\n        },\n        finish: function finish(e) {\n          for (var t = this.tryEntries.length - 1; t >= 0; --t) {\n            var n = this.tryEntries[t];\n            if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), M(n), d;\n          }\n        },\n        catch: function _catch(e) {\n          for (var t = this.tryEntries.length - 1; t >= 0; --t) {\n            var n = this.tryEntries[t];\n            if (n.tryLoc === e) {\n              var r = n.completion;\n              if (\"throw\" === r.type) {\n                var i = r.arg;\n                M(n);\n              }\n              return i;\n            }\n          }\n          throw new Error(\"illegal catch attempt\");\n        },\n        delegateYield: function delegateYield(e, n, r) {\n          return this.delegate = {\n            iterator: C(e),\n            resultName: n,\n            nextLoc: r\n          }, \"next\" === this.method && (this.arg = t), d;\n        }\n      };\n    }\n    function b(e, t, n, r) {\n      var i = t && t.prototype instanceof _ ? t : _,\n          a = Object.create(i.prototype),\n          o = new A(r || []);\n      return a._invoke = function (e, t, n) {\n        var r = f;\n        return function (i, a) {\n          if (r === l) throw new Error(\"Generator is already running\");\n          if (r === p) {\n            if (\"throw\" === i) throw a;\n            return L();\n          }\n          for (n.method = i, n.arg = a;;) {\n            var o = n.delegate;\n            if (o) {\n              var s = R(o, n);\n              if (s) {\n                if (s === d) continue;\n                return s;\n              }\n            }\n            if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n              if (r === f) throw r = p, n.arg;\n              n.dispatchException(n.arg);\n            } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n            r = l;\n            var u = w(e, t, n);\n            if (\"normal\" === u.type) {\n              if (r = n.done ? p : h, u.arg === d) continue;\n              return {\n                value: u.arg,\n                done: n.done\n              };\n            }\n            \"throw\" === u.type && (r = p, n.method = \"throw\", n.arg = u.arg);\n          }\n        };\n      }(e, n, o), a;\n    }\n    function w(e, t, n) {\n      try {\n        return {\n          type: \"normal\",\n          arg: e.call(t, n)\n        };\n      } catch (e) {\n        return {\n          type: \"throw\",\n          arg: e\n        };\n      }\n    }\n    function _() {}\n    function k() {}\n    function x() {}\n    function E(e) {\n      [\"next\", \"throw\", \"return\"].forEach(function (t) {\n        e[t] = function (e) {\n          return this._invoke(t, e);\n        };\n      });\n    }\n    function S(e) {\n      var t;\n      this._invoke = function (n, i) {\n        function a() {\n          return new Promise(function (t, a) {\n            !function t(n, i, a, o) {\n              var s = w(e[n], e, i);\n              if (\"throw\" !== s.type) {\n                var u = s.arg,\n                    c = u.value;\n                return c && \"object\" == _typeof(c) && r.call(c, \"__await\") ? Promise.resolve(c.__await).then(function (e) {\n                  t(\"next\", e, a, o);\n                }, function (e) {\n                  t(\"throw\", e, a, o);\n                }) : Promise.resolve(c).then(function (e) {\n                  u.value = e, a(u);\n                }, function (e) {\n                  return t(\"throw\", e, a, o);\n                });\n              }\n              o(s.arg);\n            }(n, i, t, a);\n          });\n        }\n        return t = t ? t.then(a, a) : a();\n      };\n    }\n    function R(e, n) {\n      var r = e.iterator[n.method];\n      if (r === t) {\n        if (n.delegate = null, \"throw\" === n.method) {\n          if (e.iterator.return && (n.method = \"return\", n.arg = t, R(e, n), \"throw\" === n.method)) return d;\n          n.method = \"throw\", n.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n        }\n        return d;\n      }\n      var i = w(r, e.iterator, n.arg);\n      if (\"throw\" === i.type) return n.method = \"throw\", n.arg = i.arg, n.delegate = null, d;\n      var a = i.arg;\n      return a ? a.done ? (n[e.resultName] = a.value, n.next = e.nextLoc, \"return\" !== n.method && (n.method = \"next\", n.arg = t), n.delegate = null, d) : a : (n.method = \"throw\", n.arg = new TypeError(\"iterator result is not an object\"), n.delegate = null, d);\n    }\n    function U(e) {\n      var t = {\n        tryLoc: e[0]\n      };\n      1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t);\n    }\n    function M(e) {\n      var t = e.completion || {};\n      t.type = \"normal\", delete t.arg, e.completion = t;\n    }\n    function A(e) {\n      this.tryEntries = [{\n        tryLoc: \"root\"\n      }], e.forEach(U, this), this.reset(!0);\n    }\n    function C(e) {\n      if (e) {\n        var n = e[a];\n        if (n) return n.call(e);\n        if (\"function\" == typeof e.next) return e;\n        if (!isNaN(e.length)) {\n          var i = -1,\n              o = function n() {\n            for (; ++i < e.length;) {\n              if (r.call(e, i)) return n.value = e[i], n.done = !1, n;\n            }\n            return n.value = t, n.done = !0, n;\n          };\n          return o.next = o;\n        }\n      }\n      return {\n        next: L\n      };\n    }\n    function L() {\n      return {\n        value: t,\n        done: !0\n      };\n    }\n  }(function () {\n    return this || \"object\" == (typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) && self;\n  }() || Function(\"return this\")());\n  var c = new Uint8Array([88, 0, 0, 0]),\n      f = new Uint8Array([26, 165, 74, 6, 73, 7, 72, 8, 71, 9, 70, 10, 69, 11, 68, 12, 67, 13, 66, 14, 65]),\n      h = new Uint8Array([24, 255, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),\n      l = new Uint8Array([25, 255, 0, 255, 255, 255, 255]),\n      p = new Uint8Array([27, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0]),\n      d = {\n    HEADER: c,\n    INIT: f,\n    DISCONNECT: new Uint8Array([84]),\n    START_MEASUREMENTS: h,\n    STOP_MEASUREMENTS: l,\n    SET_MEASUREMENT_PERIOD: p,\n    GET_INFO: new Uint8Array([85]),\n    GET_STATUS: new Uint8Array([16]),\n    GET_SENSOR_IDS: new Uint8Array([81]),\n    GET_SENSOR_INFO: new Uint8Array([80, 0]),\n    GET_DEFAULT_SENSORS_MASK: new Uint8Array([86])\n  },\n      m = 6,\n      v = 7,\n      g = 10,\n      y = 8,\n      b = 9,\n      w = 11,\n      _ = 12,\n      k = 13,\n      x = 14,\n      E = 32,\n      S = function S(e) {\n    return 0 !== e;\n  },\n      R = function () {\n    function e() {\n      n(this, e), this._listenerMap = new Map();\n    }\n    return i(e, [{\n      key: \"on\",\n      value: function value(e, t) {\n        this._listenerMap.has(e) || this._listenerMap.set(e, []), this._listenerMap.get(e).push(t);\n      }\n    }, {\n      key: \"off\",\n      value: function value(e, t) {\n        var n = this._listenerMap.get(e);\n        if (n && n.length) {\n          var r = n.reduce(function (e, n, r) {\n            return \"function\" == typeof n && n === t ? e = r : e;\n          }, -1);\n          if (r > -1) return n.splice(r, 1), this._listenerMap.set(e, n), !0;\n        }\n        return !1;\n      }\n    }, {\n      key: \"unbind\",\n      value: function value() {\n        this._listenerMap.clear();\n      }\n    }, {\n      key: \"emit\",\n      value: function value(e) {\n        for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) {\n          n[r - 1] = arguments[r];\n        }\n        var i = this._listenerMap.get(e);\n        return !(!i || !i.length) && (i.forEach(function (e) {\n          e.apply(void 0, n);\n        }), !0);\n      }\n    }]), e;\n  }(),\n      U = function U() {},\n      M = function M() {};\n  function A(e) {\n    return Array.from(new Uint8Array(e)).map(function (e) {\n      return e.toString(16).padStart(2, \"0\");\n    }).join(\" \");\n  }\n  var C,\n      L = function e() {\n    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n    n(this, e), this.type = t.type, this.mode = t.mode, this.minValue = t.minValue, this.maxValue = t.maxValue, this.uncertainty = t.uncertainty, this.minPeriod = t.minPeriod, this.maxPeriod = t.maxPeriod, this.typicalPeriod = t.typicalPeriod, this.granularity = t.granularity;\n  },\n      P = function e() {\n    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};\n    n(this, e), this.number = t.number, this.name = t.name, this.unit = t.unit, this.id = t.id, this.mutalExclusionMask = t.mutalExclusionMask, this.measurementInfo = t.measurementInfo;\n  },\n      T = function (e) {\n    function t(e) {\n      var r;\n      return n(this, t), (r = u(this, o(t).call(this))).number = e.number, r.name = e.name, r.unit = e.unit, r.specs = e, r.enabled = !1, r.values = [], r.value = null, r;\n    }\n    return a(t, R), i(t, [{\n      key: \"clear\",\n      value: function value() {\n        this.value = null, this.values = [];\n      }\n    }, {\n      key: \"setValue\",\n      value: function value(e, t) {\n        this.value = e, t && this.values.push(this.value), this.emit(\"value-changed\", this);\n      }\n    }, {\n      key: \"setEnabled\",\n      value: function value(e) {\n        this.enabled !== e && (this.enabled = e, this.emit(\"state-changed\", this));\n      }\n    }]), t;\n  }(),\n      N = function (e) {\n    function r(e) {\n      var t;\n      if (n(this, r), t = u(this, o(r).call(this)), \"undefined\" == typeof TextDecoder) {\n        var i = __webpack_require__(160);\n        C = i.TextDecoder;\n      } else C = TextDecoder;\n      return t.device = e, t.sensors = [], t.opened = !1, t.rollingCounter = 0, t.collecting = !1, t.measurementPeriod = 10, t.response = null, t.remainingResponseLength = 0, t.defaultSensorsMask = 0, t.keepValues = !0, t.minMeasurementPeriod = 10, t.serialNumber = \"\", t.orderCode = \"\", t.name = \"\", t;\n    }\n    return a(r, R), i(r, [{\n      key: \"getBatteryLevel\",\n      value: function () {\n        var e = t(regeneratorRuntime.mark(function e() {\n          var t;\n          return regeneratorRuntime.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  return e.next = 2, this._getStatus();\n                case 2:\n                  return t = e.sent, e.abrupt(\"return\", t.battery);\n                case 4:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"getChargingState\",\n      value: function () {\n        var e = t(regeneratorRuntime.mark(function e() {\n          var t;\n          return regeneratorRuntime.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  return e.next = 2, this._getStatus();\n                case 2:\n                  return t = e.sent, e.abrupt(\"return\", t.chargingStatus);\n                case 4:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"open\",\n      value: function () {\n        var e = t(regeneratorRuntime.mark(function e() {\n          var t,\n              n = arguments;\n          return regeneratorRuntime.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  return t = n.length > 0 && void 0 !== n[0] && n[0], e.prev = 1, e.next = 4, this._connect();\n                case 4:\n                  return e.next = 6, this._init();\n                case 6:\n                  return e.next = 8, this._getStatus();\n                case 8:\n                  return e.next = 10, this._getDeviceInfo();\n                case 10:\n                  return e.next = 12, this._getDefaultSensorsMask();\n                case 12:\n                  return e.next = 14, this._getAvailableSensors();\n                case 14:\n                  this._onOpened(), t && this.start(), e.next = 21;\n                  break;\n                case 18:\n                  e.prev = 18, e.t0 = e.catch(1), console.error(e.t0);\n                case 21:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this, [[1, 18]]);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"close\",\n      value: function () {\n        var e = t(regeneratorRuntime.mark(function e() {\n          return regeneratorRuntime.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  return e.next = 2, this._stopMeasurements();\n                case 2:\n                  return e.next = 4, this._sendCommand(d.DISCONNECT);\n                case 4:\n                  return e.abrupt(\"return\", this._disconnect());\n                case 5:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"enableDefaultSensors\",\n      value: function value() {\n        for (var e = 1, t = 0; t < 32; ++t) {\n          if ((this.defaultSensorsMask & e) === e) {\n            var n = this.getSensor(t);\n            n && n.setEnabled(!0);\n          }\n          e <<= 1;\n        }\n      }\n    }, {\n      key: \"start\",\n      value: function value() {\n        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,\n            t = this.sensors.filter(function (e) {\n          return e.enabled;\n        });\n        0 === t.length && (this.enableDefaultSensors(), t = this.sensors.filter(function (e) {\n          return e.enabled;\n        })), t.forEach(function (e) {\n          return e.clear();\n        }), e && (this.measurementPeriod = e), this._startMeasurements();\n      }\n    }, {\n      key: \"stop\",\n      value: function value() {\n        this._stopMeasurements();\n      }\n    }, {\n      key: \"getSensor\",\n      value: function value(e) {\n        return this.sensors.find(function (t) {\n          return t.number === e;\n        });\n      }\n    }, {\n      key: \"_connect\",\n      value: function () {\n        var e = t(regeneratorRuntime.mark(function e() {\n          var t = this;\n          return regeneratorRuntime.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  return e.abrupt(\"return\", this.device.setup({\n                    onClosed: function onClosed() {\n                      return t._onClosed();\n                    },\n                    onResponse: function onResponse(e) {\n                      return t._handleResponse(e);\n                    }\n                  }));\n                case 1:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"_disconnect\",\n      value: function () {\n        var e = t(regeneratorRuntime.mark(function e() {\n          return regeneratorRuntime.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  return e.abrupt(\"return\", this.device.close());\n                case 1:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"_init\",\n      value: function value() {\n        return this.collecting = !1, this.rollingCounter = 255, this.writeQueue = [], this._sendCommand(d.INIT);\n      }\n    }, {\n      key: \"_handleResponse\",\n      value: function value(e) {\n        if (U(\"command notified: \".concat(A(e.buffer))), this.remainingResponseLegnth > 0) {\n          if (this.remainingResponseLegnth -= e.buffer.byteLength, this.response = new DataView((t = this.response.buffer, n = e.buffer.slice(0), (r = new Uint8Array(t.byteLength + n.byteLength)).set(new Uint8Array(t), 0), r.set(new Uint8Array(n), t.byteLength), r.buffer)), this.remainingResponseLegnth > 0) return;\n        } else this.response = e;\n        var t,\n            n,\n            r,\n            i = this.response.getUint8(1);\n        if (i > this.response.buffer.byteLength) this.remainingResponseLegnth = i - this.response.buffer.byteLength;else switch (U(\"handle command: \".concat(A(this.response.buffer))), this.response.getUint8(0)) {\n          case E:\n            this._processMeasurements(this.response);\n            break;\n          default:\n            var a = this.response.getUint8(4),\n                o = this.response.getUint8(5),\n                s = new DataView(this.response.buffer, 6);\n            this._resolveWriteCommand(a, o, s), this.remainingResponseLegnth = 0, this.response = null;\n        }\n      }\n    }, {\n      key: \"_getSensorsWithMask\",\n      value: function value(e) {\n        for (var t = [], n = 1, r = 0; r < 32; ++r) {\n          if ((e & n) === n) {\n            var i = this.getSensor(r);\n            i && (t.push(i), U(\"available: [\".concat(e, \"] \").concat(t[t.length - 1].number)));\n          }\n          n <<= 1;\n        }\n        return t;\n      }\n    }, {\n      key: \"_processMeasurements\",\n      value: function value(e) {\n        var t = [],\n            n = !0,\n            r = 0,\n            i = 0,\n            a = e.getUint8(4);\n        switch (a) {\n          case m:\n            t = this._getSensorsWithMask(e.getUint16(5, !0)), r = e.getUint8(7, !0), i = 9;\n            break;\n          case v:\n            t = this._getSensorsWithMask(e.getUint32(5, !0)), r = e.getUint8(9, !0), i = 11;\n            break;\n          case g:\n          case y:\n            t[0] = this.getSensor(e.getUint8(6)), r = e.getUint8(7, !0), i = 8;\n            break;\n          case w:\n          case b:\n            t[0] = this.getSensor(e.getUint8(6)), r = e.getUint8(7, !0), i = 8, n = !1;\n            break;\n          case _:\n          case k:\n          case x:\n            U(\"Purposely Ignoring packet type: \".concat(a));\n            break;\n          default:\n            U(\"Unknown packet type: \".concat(a));\n        }\n        for (var o = 0; o < r; ++o) {\n          for (var s = 0; s < t.length; ++s) {\n            n ? t[s].setValue(e.getFloat32(i, !0), this.keepValues) : t[s].setValue(e.getInt32(i, !0), this.keepValues), i += 4;\n          }\n        }\n      }\n    }, {\n      key: \"_resolveWriteCommand\",\n      value: function value(e, t, n) {\n        var r = this.writeQueue.find(function (n) {\n          return n.command === e && n.rollingCounter === t;\n        });\n        r && (r.resolve(n), this.writeQueue = this.writeQueue.filter(function (e) {\n          return e !== r;\n        }));\n      }\n    }, {\n      key: \"_onOpened\",\n      value: function value() {\n        U(\"opened\"), this.opened = !0, this.emit(\"device-opened\");\n      }\n    }, {\n      key: \"_onClosed\",\n      value: function value() {\n        U(\"closed\"), this.opened = !1, this.emit(\"device-closed\");\n      }\n    }, {\n      key: \"_decRollingCounter\",\n      value: function value() {\n        return this.rollingCounter -= 1, this.rollingCounter;\n      }\n    }, {\n      key: \"_calculateChecksum\",\n      value: function value(e) {\n        for (var t = e[1], n = -1 * e[3], r = 0; r < t; ++r) {\n          n += e[r], n &= 255;\n        }\n        return n < 0 || n > 255 ? (U(\"Checksum failed!\"), 0) : n;\n      }\n    }, {\n      key: \"_sendCommand\",\n      value: function value(e) {\n        var t = new Uint8Array(d.HEADER.byteLength + e.byteLength);\n        return t.set(new Uint8Array(d.HEADER), 0), t.set(new Uint8Array(e), d.HEADER.byteLength), t[1] = t.length, t[2] = this._decRollingCounter(), t[3] = this._calculateChecksum(t), this._queueWriteCommand(t, 0, t.length);\n      }\n    }, {\n      key: \"_writeCommand\",\n      value: function () {\n        var e = t(regeneratorRuntime.mark(function e(t, n, r) {\n          var i;\n          return regeneratorRuntime.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  if (!(r > 0)) {\n                    e.next = 12;\n                    break;\n                  }\n                  return e.prev = 1, r > 20 ? (i = t.subarray(n, n + 20), r -= 20, n += 20) : (i = t.subarray(n, n + r), r = 0), e.next = 5, this.device.writeCommand(i);\n                case 5:\n                  e.next = 10;\n                  break;\n                case 7:\n                  e.prev = 7, e.t0 = e.catch(1), U(\"Write Failure: \".concat(e.t0));\n                case 10:\n                  e.next = 0;\n                  break;\n                case 12:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this, [[1, 7]]);\n        }));\n        return function (t, n, r) {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"_queueWriteCommand\",\n      value: function value(e, t, n) {\n        var r = this;\n        U(\"command queued: \".concat(A(e)));\n        var i = new Promise(function (t, n) {\n          r.writeQueue.push({\n            command: e[4],\n            rollingCounter: e[2],\n            resolve: t,\n            reject: n\n          }), setTimeout(function () {\n            r.writeQueue = r.writeQueue.filter(function (t) {\n              return t.command === e[4] && t.rollingCounter !== e[2];\n            }), n(new Error(\"write command timed out after 5s. Command: \".concat(e[4].toString(16), \" Rolling Counter: \").concat(e[2].toString(16))));\n          }, 1e4);\n        });\n        return this._writeCommand(e, t, n), i;\n      }\n    }, {\n      key: \"_getStatus\",\n      value: function () {\n        var e = t(regeneratorRuntime.mark(function e() {\n          var t, n;\n          return regeneratorRuntime.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  return e.next = 2, this._sendCommand(d.GET_STATUS);\n                case 2:\n                  return t = e.sent, n = {\n                    masterFirmwareVersion: \"\".concat(t.getUint8(2), \".\").concat(t.getUint8(3)),\n                    bleFirmwareVersion: \"\".concat(t.getUint8(6), \".\").concat(t.getUint8(9)),\n                    battery: t.getUint8(10),\n                    chargingStatus: \"\".concat(t.getUint8(11))\n                  }, e.abrupt(\"return\", n);\n                case 5:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"_getAvailableSensors\",\n      value: function () {\n        var e = t(regeneratorRuntime.mark(function e() {\n          var t,\n              n,\n              r = this;\n          return regeneratorRuntime.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  return e.next = 2, this._sendCommand(d.GET_SENSOR_IDS).then(function (e) {\n                    r.availableSensors = e.getUint32(0, !0), U(\"Get Available Sensors Returned \".concat(r.availableSensors));\n                  });\n                case 2:\n                  t = 1, n = 0;\n                case 4:\n                  if (!(n < 31)) {\n                    e.next = 12;\n                    break;\n                  }\n                  if ((this.availableSensors & t) !== t) {\n                    e.next = 8;\n                    break;\n                  }\n                  return e.next = 8, this._getSensorInfo(n);\n                case 8:\n                  t <<= 1;\n                case 9:\n                  ++n, e.next = 4;\n                  break;\n                case 12:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"_getDefaultSensorsMask\",\n      value: function value() {\n        var e = this;\n        return this._sendCommand(d.GET_DEFAULT_SENSORS_MASK).then(function (t) {\n          e.defaultSensorsMask = t.getUint32(0, !0), U(\"Default Sensors:\"), M(e);\n        });\n      }\n    }, {\n      key: \"_getDeviceInfo\",\n      value: function value() {\n        var e = this;\n        return this._sendCommand(d.GET_INFO).then(function (t) {\n          var n = new C(\"utf-8\");\n          e.orderCode = n.decode(new Uint8Array(t.buffer, 6, 16).filter(S)), e.serialNumber = n.decode(new Uint8Array(t.buffer, 22, 16).filter(S)), e.name = n.decode(new Uint8Array(t.buffer, 38, 32).filter(S)), U(\"Device Info:\"), M(e);\n        });\n      }\n    }, {\n      key: \"_getSensorInfo\",\n      value: function () {\n        var e = t(regeneratorRuntime.mark(function e(t) {\n          var n,\n              r = this;\n          return regeneratorRuntime.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  return (n = new Uint8Array(d.GET_SENSOR_INFO))[1] = t, e.abrupt(\"return\", this._sendCommand(n).then(function (e) {\n                    var t = e.getUint32(2, !0);\n                    if (t > 0) {\n                      var n = new C(\"utf-8\"),\n                          i = new L({\n                        type: e.getUint8(6),\n                        mode: e.getUint8(7),\n                        minValue: e.getFloat64(108, !0),\n                        maxValue: e.getFloat64(116, !0),\n                        uncertainty: e.getFloat64(100, !0),\n                        minPeriod: e.getUint32(124, !0) / 1e3,\n                        maxPeriod: ((e.getUint32(132, !0) << 32) + e.getUint32(128, !0)) / 1e3,\n                        typicalPeriod: e.getUint32(136, !0) / 1e3,\n                        granularity: e.getUint32(140, !0) / 1e3\n                      }),\n                          a = new P({\n                        number: e.getUint8(0),\n                        name: n.decode(new Uint8Array(e.buffer, 14, 60).filter(S)),\n                        unit: n.decode(new Uint8Array(e.buffer, 74, 32).filter(S)),\n                        mutalExclusiveMask: e.getUint32(144, !0),\n                        measurementInfo: i,\n                        sensorId: t\n                      }),\n                          o = new T(a);\n                      U(\"Get Sensor Info Returned\"), M(o), r.sensors.push(o), o.on(\"state-changed\", function () {\n                        U(\"Sensor Restart: \".concat(o.number)), o.enabled && (r.measurementPeriod = o.specs.measurementInfo.typicalPeriod, r.sensors.forEach(function (e) {\n                          if (o.number !== e.number && e.enabled) {\n                            var t = 1 << e.number;\n                            (t & o.specs.mutalExclusiveMask) === t ? e.enabled = !1 : e.specs.measurementInfo.typicalPeriod > r.measurementPeriod && (r.measurementPeriod = e.specs.measurementInfo.typicalPeriod);\n                          }\n                        })), r._restartMeasurements();\n                      });\n                    }\n                  }));\n                case 3:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function (t) {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"_restartMeasurements\",\n      value: function () {\n        var e = t(regeneratorRuntime.mark(function e() {\n          var t;\n          return regeneratorRuntime.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  if (t = this.collecting, !this.collecting) {\n                    e.next = 10;\n                    break;\n                  }\n                  return e.prev = 2, e.next = 5, this._stopMeasurements();\n                case 5:\n                  e.next = 10;\n                  break;\n                case 7:\n                  e.prev = 7, e.t0 = e.catch(2), console.error(e.t0);\n                case 10:\n                  if (this.collecting || !t) {\n                    e.next = 19;\n                    break;\n                  }\n                  return e.prev = 11, e.next = 14, this._startMeasurements();\n                case 14:\n                  e.next = 19;\n                  break;\n                case 16:\n                  e.prev = 16, e.t1 = e.catch(11), console.error(e.t1);\n                case 19:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this, [[2, 7], [11, 16]]);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"_setMeasurementPeriod\",\n      value: function value(e) {\n        var t = new Uint8Array(d.SET_MEASUREMENT_PERIOD),\n            n = 1e3 * this.minMeasurementPeriod;\n        return e < n && (e = n), U(\"MeasurementPeriod: \".concat(e)), t[3] = e >> 0 & 255, t[4] = e >> 8 & 255, t[5] = e >> 16 & 255, t[6] = e >> 24 & 255, this._sendCommand(t);\n      }\n    }, {\n      key: \"_getEnabledChannelMask\",\n      value: function value() {\n        var e = 0;\n        return this.sensors.filter(function (e) {\n          return e.enabled;\n        }).forEach(function (t) {\n          e += 1 << t.number;\n        }), e;\n      }\n    }, {\n      key: \"_startMeasurements\",\n      value: function value() {\n        var e = this;\n        return this._setMeasurementPeriod(1e3 * this.measurementPeriod).then(function () {\n          var t = e._getEnabledChannelMask();\n          U(\"ChannelMask: \".concat(t));\n          var n = new Uint8Array(d.START_MEASUREMENTS);\n          return n[3] = t >> 0 & 255, n[4] = t >> 8 & 255, n[5] = t >> 16 & 255, n[6] = t >> 24 & 255, e._sendCommand(n).then(function (t) {\n            0 === t.getUint8(0) && (e.collecting = !0, e.emit(\"measurements-started\"));\n          });\n        });\n      }\n    }, {\n      key: \"_stopMeasurements\",\n      value: function value() {\n        var e = this;\n        return this._sendCommand(d.STOP_MEASUREMENTS).then(function (t) {\n          0 === t.getUint8(0) && (e.collecting = !1, e.emit(\"measurements-stopped\"));\n        });\n      }\n    }]), r;\n  }(),\n      O = function () {\n    function e(t) {\n      n(this, e), this.webBluetoothNativeDevice = t, this.deviceCommand = null, this.deviceResponse = null;\n    }\n    return i(e, [{\n      key: \"writeCommand\",\n      value: function () {\n        var e = t(regeneratorRuntime.mark(function e(t) {\n          return regeneratorRuntime.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  return e.abrupt(\"return\", this.deviceCommand.writeValue(t));\n                case 1:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function (t) {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"setup\",\n      value: function () {\n        var e = t(regeneratorRuntime.mark(function e(t) {\n          var n,\n              r,\n              i,\n              a,\n              o = this;\n          return regeneratorRuntime.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  return n = t.onClosed, r = t.onResponse, this.webBluetoothNativeDevice.addEventListener(\"gattserverdisconnected\", n), e.prev = 2, e.next = 5, this.webBluetoothNativeDevice.gatt.connect();\n                case 5:\n                  return i = e.sent, e.next = 8, i.getPrimaryService(\"d91714ef-28b9-4f91-ba16-f0d9a604f112\");\n                case 8:\n                  return a = e.sent, e.next = 11, a.getCharacteristics();\n                case 11:\n                  e.sent.forEach(function (e) {\n                    switch (e.uuid) {\n                      case \"f4bf14a6-c7d5-4b6d-8aa8-df1a7c83adcb\":\n                        o.deviceCommand = e;\n                        break;\n                      case \"b41e6675-a329-40e0-aa01-44d2f444babe\":\n                        o.deviceResponse = e, o.deviceResponse.addEventListener(\"characteristicvaluechanged\", function (e) {\n                          var t = e.target.value;\n                          r(t);\n                        }), o.deviceResponse.startNotifications();\n                        break;\n                      default:\n                        U(\"No case found for \".concat(e.uuid));\n                    }\n                  }), e.next = 18;\n                  break;\n                case 15:\n                  e.prev = 15, e.t0 = e.catch(2), console.error(e.t0);\n                case 18:\n                  if (this.deviceCommand && this.deviceResponse) {\n                    e.next = 20;\n                    break;\n                  }\n                  throw new Error(\"Expected command and response characteristics not found.\");\n                case 20:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this, [[2, 15]]);\n        }));\n        return function (t) {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"close\",\n      value: function () {\n        var e = t(regeneratorRuntime.mark(function e() {\n          return regeneratorRuntime.wrap(function (e) {\n            for (;;) {\n              switch (e.prev = e.next) {\n                case 0:\n                  return e.abrupt(\"return\", this.webBluetoothNativeDevice.gatt.disconnect());\n                case 1:\n                case \"end\":\n                  return e.stop();\n              }\n            }\n          }, e, this);\n        }));\n        return function () {\n          return e.apply(this, arguments);\n        };\n      }()\n    }, {\n      key: \"godirectAdapter\",\n      get: function get() {\n        return !0;\n      }\n    }]), e;\n  }(),\n      D = {\n    createDevice: function () {\n      var e = t(regeneratorRuntime.mark(function e(t) {\n        var n,\n            r,\n            i,\n            a,\n            o,\n            s,\n            u,\n            c = arguments;\n        return regeneratorRuntime.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (n = c.length > 1 && void 0 !== c[1] ? c[1] : {}, r = n.open, i = void 0 === r || r, a = n.startMeasurements, o = void 0 === a || a, (s = t).godirectAdapter || (s = new O(t)), u = new N(s), !i) {\n                  e.next = 14;\n                  break;\n                }\n                return e.prev = 5, e.next = 8, u.open(o);\n              case 8:\n                e.next = 14;\n                break;\n              case 10:\n                throw e.prev = 10, e.t0 = e.catch(5), console.error(e.t0), e.t0;\n              case 14:\n                return e.abrupt(\"return\", u);\n              case 15:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this, [[5, 10]]);\n      }));\n      return function (t) {\n        return e.apply(this, arguments);\n      };\n    }(),\n    selectDevice: function () {\n      var e = t(regeneratorRuntime.mark(function e() {\n        var t;\n        return regeneratorRuntime.wrap(function (e) {\n          for (;;) {\n            switch (e.prev = e.next) {\n              case 0:\n                if (navigator.bluetooth) {\n                  e.next = 2;\n                  break;\n                }\n                return e.abrupt(\"return\", Promise.reject(new Error(\"No Web Bluetooth support.\")));\n              case 2:\n                return e.next = 4, navigator.bluetooth.requestDevice({\n                  filters: [{\n                    namePrefix: \"GDX\"\n                  }],\n                  optionalServices: [\"d91714ef-28b9-4f91-ba16-f0d9a604f112\"]\n                });\n              case 4:\n                return t = e.sent, e.abrupt(\"return\", D.createDevice(t));\n              case 6:\n              case \"end\":\n                return e.stop();\n            }\n          }\n        }, e, this);\n      }));\n      return function () {\n        return e.apply(this, arguments);\n      };\n    }()\n  };\n  return D;\n});\n}.call(this, __webpack_require__(222)(module)))\n })