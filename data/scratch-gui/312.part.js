/* 312 */\n (function(module, exports) {\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n/* Adapted from\n * Paper.js - The Swiss Army Knife of Vector Graphics Scripting.\n * http://paperjs.org/\n *\n * Copyright (c) 2011 - 2016, Juerg Lehni & Jonathan Puckey\n * http://scratchdisk.com/ & http://jonathanpuckey.com/\n *\n * Distributed under the MIT license. See LICENSE file for details.\n *\n * All rights reserved.\n */\n/**\n * @name SvgElement\n * @namespace\n * @private\n */\nvar SvgElement = function () {\n  function SvgElement() {\n    _classCallCheck(this, SvgElement);\n  }\n  _createClass(SvgElement, null, [{\n    key: \"attributeNamespace\",\n    // Mapping of attribute names to required namespaces:\n    value: function attributeNamespace() {\n      return {\n        'href': SvgElement.xlink,\n        'xlink': SvgElement.xmlns,\n        // Only the xmlns attribute needs the trailing slash. See #984\n        'xmlns': \"\".concat(SvgElement.xmlns, \"/\"),\n        // IE needs the xmlns namespace when setting 'xmlns:xlink'. See #984\n        'xmlns:xlink': \"\".concat(SvgElement.xmlns, \"/\")\n      };\n    }\n  }, {\n    key: \"create\",\n    value: function create(tag, attributes, formatter) {\n      return SvgElement.set(document.createElementNS(SvgElement.svg, tag), attributes, formatter);\n    }\n  }, {\n    key: \"get\",\n    value: function get(node, name) {\n      var namespace = SvgElement.attributeNamespace[name];\n      var value = namespace ? node.getAttributeNS(namespace, name) : node.getAttribute(name);\n      return value === 'null' ? null : value;\n    }\n  }, {\n    key: \"set\",\n    value: function set(node, attributes, formatter) {\n      for (var name in attributes) {\n        var value = attributes[name];\n        var namespace = SvgElement.attributeNamespace[name];\n        if (typeof value === 'number' && formatter) {\n          value = formatter.number(value);\n        }\n        if (namespace) {\n          node.setAttributeNS(namespace, name, value);\n        } else {\n          node.setAttribute(name, value);\n        }\n      }\n      return node;\n    }\n  }, {\n    key: \"svg\",\n    // SVG related namespaces\n    get: function get() {\n      return 'http://www.w3.org/2000/svg';\n    }\n  }, {\n    key: \"xmlns\",\n    get: function get() {\n      return 'http://www.w3.org/2000/xmlns';\n    }\n  }, {\n    key: \"xlink\",\n    get: function get() {\n      return 'http://www.w3.org/1999/xlink';\n    }\n  }]);\n  return SvgElement;\n}();\nmodule.exports = SvgElement;\n })