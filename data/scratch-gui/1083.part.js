/* 1083 */\n (function(module, exports) {\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\nvar MouseWheel = function () {\n  function MouseWheel(runtime) {\n    _classCallCheck(this, MouseWheel);\n    /**\n     * Reference to the owning Runtime.\n     * @type{!Runtime}\n     */\n    this.runtime = runtime;\n  }\n  /**\n   * Mouse wheel DOM event handler.\n   * @param  {object} data Data from DOM event.\n   */\n  _createClass(MouseWheel, [{\n    key: \"postData\",\n    value: function postData(data) {\n      var matchFields = {};\n      if (data.deltaY < 0) {\n        matchFields.KEY_OPTION = 'up arrow';\n      } else if (data.deltaY > 0) {\n        matchFields.KEY_OPTION = 'down arrow';\n      } else {\n        return;\n      }\n      this.runtime.startHats('event_whenkeypressed', matchFields);\n    }\n  }]);\n  return MouseWheel;\n}();\nmodule.exports = MouseWheel;\n })