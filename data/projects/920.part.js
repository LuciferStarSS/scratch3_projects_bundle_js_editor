/* 920 */
 (function(module, exports, __webpack_require__) {
"use strict";
eval("\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar bindAll = __webpack_require__(9);\nvar PropTypes = __webpack_require__(1);\nvar React = __webpack_require__(0);\nvar FormattedMessage = __webpack_require__(4).FormattedMessage;\nvar injectIntl = __webpack_require__(4).injectIntl;\nvar intlShape = __webpack_require__(4).intlShape;\nvar Modal = __webpack_require__(25);\nvar ModalInnerContent = __webpack_require__(452);\nvar Button = __webpack_require__(15);\nvar Progression = __webpack_require__(186);\nvar FlexRow = __webpack_require__(12);\nvar MuteStep = __webpack_require__(921);\nvar classNames = __webpack_require__(5);\n__webpack_require__(830);\nvar MuteModal = function (_React$Component) {\n    _inherits(MuteModal, _React$Component);\n    function MuteModal(props) {\n        _classCallCheck(this, MuteModal);\n        var _this = _possibleConstructorReturn(this, (MuteModal.__proto__ || Object.getPrototypeOf(MuteModal)).call(this, props));\n        bindAll(_this, ['handleNext', 'handlePrevious']);\n        _this.numSteps = 2;\n        if (_this.props.showWarning) {\n            _this.numSteps++;\n        }\n        _this.state = {\n            step: 0\n        };\n        return _this;\n    }\n    _createClass(MuteModal, [{\n        key: 'handleNext',\n        value: function handleNext() {\n            this.setState({\n                step: this.state.step + 1\n            });\n        }\n    }, {\n        key: 'handlePrevious',\n        value: function handlePrevious() {\n            // This shouldn't get called when we're on the first step, but\n            // the Math.max is here as a safeguard so state doesn't go negative.\n            this.setState({\n                step: Math.max(0, this.state.step - 1)\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return React.createElement(\n                Modal,\n                {\n                    isOpen: true,\n                    useStandardSizes: true,\n                    className: 'modal-mute',\n                    showCloseButton: false,\n                    onRequestClose: this.props.onRequestClose\n                },\n                React.createElement('div', { className: 'mute-modal-header modal-header' }),\n                React.createElement(\n                    ModalInnerContent,\n                    { className: 'mute-inner-content' },\n                    React.createElement(\n                        Progression,\n                        { step: this.state.step },\n                        React.createElement(\n                            MuteStep,\n                            {\n                                bottomImg: '/svgs/commenting/comment_feedback.svg',\n                                bottomImgClass: 'bottom-img',\n                                header: this.props.intl.formatMessage({ id: this.props.muteModalMessages.muteStepHeader })\n                            },\n                            this.props.muteModalMessages.muteStepContent.map(function (message) {\n                                return React.createElement(\n                                    'p',\n                                    { key: message },\n                                    React.createElement(FormattedMessage, { id: message })\n                                );\n                            })\n                        ),\n                        React.createElement(\n                            MuteStep,\n                            {\n                                header: this.props.intl.formatMessage({ id: 'comments.muted.duration' }, { inDuration: this.props.timeMuted }),\n                                sideImg: '/svgs/commenting/mute_time.svg',\n                                sideImgClass: 'side-img'\n                            },\n                            React.createElement(\n                                'p',\n                                null,\n                                React.createElement(FormattedMessage, { id: 'comments.muted.commentingPaused' })\n                            ),\n                            React.createElement(\n                                'p',\n                                null,\n                                React.createElement(FormattedMessage, {\n                                    id: 'comments.muted.moreInfoGuidelines',\n                                    values: { CommunityGuidelinesLink: React.createElement(\n                                            'a',\n                                            { href: '/community_guidelines' },\n                                            React.createElement(FormattedMessage, { id: 'report.CommunityGuidelinesLinkText' })\n                                        ) }\n                                })\n                            )\n                        ),\n                        this.props.showWarning ? React.createElement(\n                            MuteStep,\n                            {\n                                bottomImg: '/svgs/commenting/warning.svg',\n                                bottomImgClass: 'bottom-img',\n                                header: this.props.intl.formatMessage({ id: 'comments.muted.warningBlocked' })\n                            },\n                            React.createElement(\n                                'p',\n                                null,\n                                React.createElement(FormattedMessage, {\n                                    id: 'comments.muted.warningCareful',\n                                    values: { CommunityGuidelinesLink: React.createElement(\n                                            'a',\n                                            { href: '/community_guidelines' },\n                                            React.createElement(FormattedMessage, { id: 'report.CommunityGuidelinesLinkText' })\n                                        ) }\n                                })\n                            )\n                        ) : null\n                    ),\n                    React.createElement(FlexRow, { className: classNames('nav-divider') }),\n                    React.createElement(\n                        FlexRow,\n                        { className: classNames('mute-nav') },\n                        this.state.step > 0 ? React.createElement(\n                            Button,\n                            {\n                                className: classNames('back-button'),\n                                onClick: this.handlePrevious\n                            },\n                            React.createElement(\n                                'div',\n                                { className: 'action-button-text' },\n                                React.createElement(FormattedMessage, { id: 'general.back' })\n                            )\n                        ) : null,\n                        this.state.step >= this.numSteps - 1 ? React.createElement(\n                            Button,\n                            {\n                                className: classNames('close-button'),\n                                onClick: this.props.onRequestClose\n                            },\n                            React.createElement(\n                                'div',\n                                { className: 'action-button-text' },\n                                React.createElement(FormattedMessage, { id: 'general.close' })\n                            )\n                        ) : React.createElement(\n                            Button,\n                            {\n                                className: classNames('next-button'),\n                                onClick: this.handleNext\n                            },\n                            React.createElement(\n                                'div',\n                                { className: 'action-button-text' },\n                                React.createElement(FormattedMessage, { id: 'general.next' })\n                            )\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return MuteModal;\n}(React.Component);\nMuteModal.propTypes = {\n    intl: intlShape,\n    muteModalMessages: PropTypes.shape({\n        commentType: PropTypes.string,\n        muteStepHeader: PropTypes.string,\n        muteStepContent: PropTypes.array\n    }),\n    onRequestClose: PropTypes.func,\n    showWarning: PropTypes.bool,\n    timeMuted: PropTypes.string\n};\nmodule.exports = injectIntl(MuteModal);\n// ./src/components/modal/mute/modal.jsx\n// module id = 920\n// module chunks = 0\n//# sourceURL=scratch:///./src/components/modal/mute/modal.jsx?");
 })