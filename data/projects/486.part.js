/* 486 */
 (function(module, exports, __webpack_require__) {
"use strict";
eval("\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\nvar _formik = __webpack_require__(167);\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\nvar PropTypes = __webpack_require__(1);\nvar React = __webpack_require__(0);\nvar ValidationMessage = __webpack_require__(189);\n__webpack_require__(735);\n__webpack_require__(61);\n__webpack_require__(734);\nvar FormikSelect = function FormikSelect(_ref) {\n    var className = _ref.className,\n        error = _ref.error,\n        options = _ref.options,\n        validationClassName = _ref.validationClassName,\n        props = _objectWithoutProperties(_ref, ['className', 'error', 'options', 'validationClassName']);\n    var optionsList = options.map(function (item, index) {\n        return React.createElement(\n            'option',\n            {\n                disabled: item.disabled,\n                key: index,\n                value: item.value\n            },\n            item.label\n        );\n    });\n    return React.createElement(\n        'div',\n        { className: 'select row-with-tooltip' },\n        React.createElement(\n            _formik.Field,\n            _extends({\n                className: className,\n                component: 'select'\n            }, props),\n            optionsList\n        ),\n        error && React.createElement(ValidationMessage, {\n            className: validationClassName,\n            message: error,\n            mode: 'error'\n        })\n    );\n};\nFormikSelect.propTypes = {\n    className: PropTypes.string,\n    error: PropTypes.string,\n    options: PropTypes.arrayOf(PropTypes.shape({\n        disabled: PropTypes.bool,\n        label: PropTypes.string.isRequired,\n        value: PropTypes.string.isRequired\n    })).isRequired,\n    validationClassName: PropTypes.string,\n    // selected value\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\nmodule.exports = FormikSelect;\n// ./src/components/formik-forms/formik-select.jsx\n// module id = 486\n// module chunks = 0 1\n//# sourceURL=scratch:///./src/components/formik-forms/formik-select.jsx?");
 })