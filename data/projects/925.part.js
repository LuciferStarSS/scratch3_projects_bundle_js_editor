/* 925 */
 (function(module, exports, __webpack_require__) {
"use strict";
eval("\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar bindAll = __webpack_require__(9);\nvar PropTypes = __webpack_require__(1);\nvar React = __webpack_require__(0);\nvar SocialModalPresentation = __webpack_require__(926);\nvar clipboardCopy = __webpack_require__(1024);\nvar social = __webpack_require__(938);\nvar SocialModal = function (_React$Component) {\n    _inherits(SocialModal, _React$Component);\n    function SocialModal(props) {\n        _classCallCheck(this, SocialModal);\n        var _this = _possibleConstructorReturn(this, (SocialModal.__proto__ || Object.getPrototypeOf(SocialModal)).call(this, props));\n        _this.embedTextarea = {};\n        _this.embedCopyTimeoutId = null;\n        _this.linkCopyTimeoutId = null;\n        _this.linkTextarea = {};\n        _this.showCopyResultTimeout = 2000;\n        _this.state = {\n            showEmbedResult: false,\n            showLinkResult: false\n        };\n        bindAll(_this, ['handleCopyEmbed', 'handleCopyProjectLink', 'hideEmbedResult', 'hideLinkResult', 'setEmbedTextarea', 'setLinkTextarea']);\n        return _this;\n    }\n    _createClass(SocialModal, [{\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            this.clearEmbedCopyResultTimeout();\n            this.clearLinkCopyResultTimeout();\n        }\n    }, {\n        key: 'handleCopyEmbed',\n        value: function handleCopyEmbed() {\n            var _this2 = this;\n            if (this.embedTextarea) {\n                this.embedTextarea.select();\n                clipboardCopy(this.embedTextarea.value);\n                if (this.state.showEmbedResult === false && this.embedCopyTimeoutId === null) {\n                    this.setState({ showEmbedResult: true }, function () {\n                        _this2.embedCopyTimeoutId = setTimeout(_this2.hideEmbedResult, _this2.showCopyResultTimeout);\n                    });\n                }\n            }\n        }\n    }, {\n        key: 'handleCopyProjectLink',\n        value: function handleCopyProjectLink() {\n            var _this3 = this;\n            if (this.linkTextarea) {\n                this.linkTextarea.select();\n                clipboardCopy(this.linkTextarea.value);\n                if (this.state.showLinkResult === false && this.linkCopyTimeoutId === null) {\n                    this.setState({ showLinkResult: true }, function () {\n                        _this3.linkCopyTimeoutId = setTimeout(_this3.hideLinkResult, _this3.showCopyResultTimeout);\n                    });\n                }\n            }\n        }\n    }, {\n        key: 'hideEmbedResult',\n        value: function hideEmbedResult() {\n            this.setState({ showEmbedResult: false });\n            this.embedCopyTimeoutId = null;\n        }\n    }, {\n        key: 'hideLinkResult',\n        value: function hideLinkResult() {\n            this.setState({ showLinkResult: false });\n            this.linkCopyTimeoutId = null;\n        }\n    }, {\n        key: 'setEmbedTextarea',\n        value: function setEmbedTextarea(textarea) {\n            this.embedTextarea = textarea;\n            return textarea;\n        }\n    }, {\n        key: 'setLinkTextarea',\n        value: function setLinkTextarea(textarea) {\n            this.linkTextarea = textarea;\n            return textarea;\n        }\n    }, {\n        key: 'clearEmbedCopyResultTimeout',\n        value: function clearEmbedCopyResultTimeout() {\n            if (this.embedCopyTimeoutId !== null) {\n                clearTimeout(this.embedCopyTimeoutId);\n                this.embedCopyTimeoutId = null;\n            }\n        }\n    }, {\n        key: 'clearLinkCopyResultTimeout',\n        value: function clearLinkCopyResultTimeout() {\n            if (this.linkCopyTimeoutId !== null) {\n                clearTimeout(this.linkCopyTimeoutId);\n                this.linkCopyTimeoutId = null;\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var projectId = this.props.projectId;\n            return React.createElement(SocialModalPresentation, {\n                embedHtml: social.embedHtml(projectId),\n                isOpen: this.props.isOpen,\n                projectUrl: social.projectUrl(projectId),\n                setEmbedTextarea: this.setEmbedTextarea,\n                setLinkTextarea: this.setLinkTextarea,\n                showEmbedResult: this.state.showEmbedResult,\n                showLinkResult: this.state.showLinkResult,\n                onCopyEmbed: this.handleCopyEmbed,\n                onCopyProjectLink: this.handleCopyProjectLink,\n                onRequestClose: this.props.onRequestClose\n            });\n        }\n    }]);\n    return SocialModal;\n}(React.Component);\nSocialModal.propTypes = {\n    isOpen: PropTypes.bool,\n    onRequestClose: PropTypes.func,\n    projectId: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n};\nmodule.exports = SocialModal;\n// ./src/components/modal/social/container.jsx\n// module id = 925\n// module chunks = 0\n//# sourceURL=scratch:///./src/components/modal/social/container.jsx?");
 })