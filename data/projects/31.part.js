/* 31 */
 (function(module, exports, __webpack_require__) {
"use strict";
eval("\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar bindAll = __webpack_require__(9);\nvar classNames = __webpack_require__(5);\nvar onClickOutside = __webpack_require__(57).default;\nvar PropTypes = __webpack_require__(1);\nvar React = __webpack_require__(0);\n__webpack_require__(121);\nvar Dropdown = function (_React$Component) {\n    _inherits(Dropdown, _React$Component);\n    function Dropdown(props) {\n        _classCallCheck(this, Dropdown);\n        var _this = _possibleConstructorReturn(this, (Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call(this, props));\n        bindAll(_this, ['handleClickOutside']);\n        return _this;\n    }\n    _createClass(Dropdown, [{\n        key: 'handleClickOutside',\n        value: function handleClickOutside() {\n            if (this.props.isOpen) {\n                this.props.onRequestClose();\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            return React.createElement(\n                this.props.as,\n                {\n                    className: classNames('dropdown', this.props.className, {\n                        open: this.props.isOpen\n                    })\n                },\n                this.props.children\n            );\n        }\n    }]);\n    return Dropdown;\n}(React.Component);\nDropdown.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    isOpen: PropTypes.bool,\n    onRequestClose: PropTypes.func.isRequired\n};\nDropdown.defaultProps = {\n    as: 'div',\n    isOpen: false\n};\nmodule.exports = onClickOutside(Dropdown);\n// ./src/components/dropdown/dropdown.jsx\n// module id = 31\n// module chunks = 0 1 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39\n//# sourceURL=scratch:///./src/components/dropdown/dropdown.jsx?");
 })