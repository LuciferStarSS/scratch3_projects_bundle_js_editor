/* 922 */
 (function(module, exports, __webpack_require__) {
"use strict";
eval("\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar bindAll = __webpack_require__(9);\nvar PropTypes = __webpack_require__(1);\nvar React = __webpack_require__(0);\nvar FormattedMessage = __webpack_require__(4).FormattedMessage;\nvar classNames = __webpack_require__(5);\nvar Form = __webpack_require__(22);\nvar Button = __webpack_require__(15);\nvar Spinner = __webpack_require__(38);\nvar FlexRow = __webpack_require__(12);\n__webpack_require__(35);\n/**\n * Step to be used in a form progression. Provides wrapping form element,\n * renders children input elements, then provides a next button row\n * that responds to form validation and submission spinner.\n */\nvar FormStep = function (_React$Component) {\n    _inherits(FormStep, _React$Component);\n    function FormStep(props) {\n        _classCallCheck(this, FormStep);\n        var _this = _possibleConstructorReturn(this, (FormStep.__proto__ || Object.getPrototypeOf(FormStep)).call(this, props));\n        _this.state = {\n            valid: false\n        };\n        bindAll(_this, ['handleValid', 'handleInvalid']);\n        return _this;\n    }\n    _createClass(FormStep, [{\n        key: 'handleValid',\n        value: function handleValid() {\n            this.setState({ valid: true });\n        }\n    }, {\n        key: 'handleInvalid',\n        value: function handleInvalid() {\n            this.setState({ valid: false });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _props = this.props,\n                onNext = _props.onNext,\n                children = _props.children,\n                isWaiting = _props.isWaiting,\n                nextLabel = _props.nextLabel;\n            // Submit button is enabled if form isn't already submitting, and either the form passes validation,\n            // or the submitEnabled prop is true. This lets submitEnabled prop override validation.\n            var submitEnabled = (this.props.submitEnabled || this.state.valid) && !isWaiting;\n            var submitDisabledParam = submitEnabled ? {} : { disabled: 'disabled' };\n            return React.createElement(\n                Form,\n                {\n                    onInvalid: this.handleInvalid,\n                    onValid: this.handleValid,\n                    onValidSubmit: onNext\n                },\n                children,\n                React.createElement(\n                    FlexRow,\n                    { className: classNames('action-buttons', 'action-buttons-no-inset') },\n                    React.createElement(\n                        Button,\n                        _extends({\n                            className: classNames('action-button', 'submit-button', { disabled: !submitEnabled })\n                        }, submitDisabledParam, {\n                            key: 'submitButton',\n                            type: 'submit'\n                        }),\n                        isWaiting ? React.createElement(\n                            'div',\n                            { className: 'action-button-text' },\n                            React.createElement(Spinner, null),\n                            React.createElement(FormattedMessage, { id: 'report.sending' })\n                        ) : React.createElement(\n                            'div',\n                            { className: 'action-button-text' },\n                            React.createElement(FormattedMessage, nextLabel)\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return FormStep;\n}(React.Component);\nFormStep.propTypes = {\n    children: PropTypes.node.isRequired,\n    isWaiting: PropTypes.bool,\n    nextLabel: PropTypes.shape({ id: PropTypes.string.isRequired }).isRequired,\n    onNext: PropTypes.func.isRequired,\n    submitEnabled: PropTypes.bool\n};\nFormStep.defaultProps = {\n    isWaiting: false,\n    submitEnabled: false\n};\nmodule.exports = FormStep;\n// ./src/components/modal/report/form-step.jsx\n// module id = 922\n// module chunks = 0\n//# sourceURL=scratch:///./src/components/modal/report/form-step.jsx?");
 })