/* 237 */
 (function(module, exports, __webpack_require__) {
"use strict";
eval("\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\nmodule.exports = {};\n// only used to determine the subdivisions/states/provinces within a given country\nvar isoCountryRawData = module.exports.data = __webpack_require__(242).data;\n// sorted array of countries and their data.\n// This is our main, static country list. Each item is an object with at least:\n// code: two-character iso-3166 country code, used to provide country to other libraries\n// name: the version of the country name that we use in our data everywhere, for consistency\n// display (optional): a different version of the country name to display to users,\n// if different from \"name\"\nvar countryInfo = module.exports.countryInfo = [{\n    name: 'Afghanistan',\n    code: 'af'\n}, {\n    name: 'Aland Islands',\n    display: 'Åland Islands',\n    code: 'ax'\n}, {\n    name: 'Albania',\n    code: 'al'\n}, {\n    name: 'Algeria',\n    code: 'dz'\n}, {\n    name: 'American Samoa',\n    code: 'as'\n}, {\n    name: 'Andorra',\n    code: 'ad'\n}, {\n    name: 'Angola',\n    code: 'ao'\n}, {\n    name: 'Anguilla',\n    code: 'ai'\n}, {\n    name: 'Antarctica',\n    code: 'aq'\n}, {\n    name: 'Antigua and Barbuda',\n    code: 'ag'\n}, {\n    name: 'Argentina',\n    code: 'ar'\n}, {\n    name: 'Armenia',\n    code: 'am'\n}, {\n    name: 'Aruba',\n    code: 'aw'\n}, {\n    name: 'Australia',\n    code: 'au'\n}, {\n    name: 'Austria',\n    code: 'at'\n}, {\n    name: 'Azerbaijan',\n    code: 'az'\n}, {\n    name: 'Bahamas',\n    code: 'bs'\n}, {\n    name: 'Bahrain',\n    code: 'bh'\n}, {\n    name: 'Bangladesh',\n    code: 'bd'\n}, {\n    name: 'Barbados',\n    code: 'bb'\n}, {\n    name: 'Belarus',\n    code: 'by'\n}, {\n    name: 'Belgium',\n    code: 'be'\n}, {\n    name: 'Belize',\n    code: 'bz'\n}, {\n    name: 'Benin',\n    code: 'bj'\n}, {\n    name: 'Bermuda',\n    code: 'bm'\n}, {\n    name: 'Bhutan',\n    code: 'bt'\n}, {\n    name: 'Bolivia',\n    code: 'bo'\n}, {\n    name: 'Bonaire, Sint Eustatius and Saba',\n    code: 'bq'\n}, {\n    name: 'Bosnia and Herzegovina',\n    code: 'ba'\n}, {\n    name: 'Botswana',\n    code: 'bw'\n}, {\n    name: 'Bouvet Island',\n    code: 'bv'\n}, {\n    name: 'Brazil',\n    code: 'br'\n}, {\n    name: 'British Indian Ocean Territory',\n    code: 'io'\n}, {\n    name: 'Brunei',\n    display: 'Brunei Darussalami',\n    code: 'bn'\n}, {\n    name: 'Bulgaria',\n    code: 'bg'\n}, {\n    name: 'Burkina Faso',\n    code: 'bf'\n}, {\n    name: 'Burundi',\n    code: 'bi'\n}, {\n    name: 'Cambodia',\n    code: 'kh'\n}, {\n    name: 'Cameroon',\n    code: 'cm'\n}, {\n    name: 'Canada',\n    code: 'ca'\n}, {\n    name: 'Cape Verde',\n    code: 'cv'\n}, {\n    name: 'Cayman Islands',\n    code: 'ky'\n}, {\n    name: 'Central African Republic',\n    code: 'cf'\n}, {\n    name: 'Chad',\n    code: 'td'\n}, {\n    name: 'Chile',\n    code: 'cl'\n}, {\n    name: 'China',\n    code: 'cn'\n}, {\n    name: 'Christmas Island',\n    code: 'cx'\n}, {\n    name: 'Cocos (Keeling) Islands',\n    code: 'cc'\n}, {\n    name: 'Colombia',\n    code: 'co'\n}, {\n    name: 'Comoros',\n    code: 'km'\n}, {\n    name: 'Congo',\n    code: 'cg'\n}, {\n    name: 'Congo, The Democratic Republic of the',\n    code: 'cd'\n}, {\n    name: 'Cook Islands',\n    code: 'ck'\n}, {\n    name: 'Costa Rica',\n    code: 'cr'\n}, {\n    name: 'Cote d\\'Ivoire',\n    display: 'Côte d\\'Ivoire',\n    code: 'ci'\n}, {\n    name: 'Croatia',\n    code: 'hr'\n}, {\n    name: 'Cuba',\n    code: 'cu'\n}, {\n    name: 'Curacao',\n    display: 'Curaçao',\n    code: 'cw'\n}, {\n    name: 'Cyprus',\n    code: 'cy'\n}, {\n    name: 'Czech Republic',\n    code: 'cz'\n}, {\n    name: 'Denmark',\n    code: 'dk'\n}, {\n    name: 'Djibouti',\n    code: 'dj'\n}, {\n    name: 'Dominica',\n    code: 'dm'\n}, {\n    name: 'Dominican Republic',\n    code: 'do'\n}, {\n    name: 'Ecuador',\n    code: 'ec'\n}, {\n    name: 'Egypt',\n    code: 'eg'\n}, {\n    name: 'El Salvador',\n    code: 'sv'\n}, {\n    name: 'Equatorial Guinea',\n    code: 'gq'\n}, {\n    name: 'Eritrea',\n    code: 'er'\n}, {\n    name: 'Estonia',\n    code: 'ee'\n}, {\n    name: 'Swaziland',\n    display: 'Eswatini',\n    code: 'sz'\n}, {\n    name: 'Ethiopia',\n    code: 'et'\n}, {\n    name: 'Falkland Islands (Malvinas)',\n    code: 'fk'\n}, {\n    name: 'Faroe Islands',\n    code: 'fo'\n}, {\n    name: 'Fiji',\n    code: 'fj'\n}, {\n    name: 'Finland',\n    code: 'fi'\n}, {\n    name: 'France',\n    code: 'fr'\n}, {\n    name: 'French Guiana',\n    code: 'gf'\n}, {\n    name: 'French Polynesia',\n    code: 'pf'\n}, {\n    name: 'French Southern Territories',\n    code: 'tf'\n}, {\n    name: 'Gabon',\n    code: 'ga'\n}, {\n    name: 'Gambia',\n    code: 'gm'\n}, {\n    name: 'Georgia',\n    code: 'ge'\n}, {\n    name: 'Germany',\n    code: 'de'\n}, {\n    name: 'Ghana',\n    code: 'gh'\n}, {\n    name: 'Gibraltar',\n    code: 'gi'\n}, {\n    name: 'Greece',\n    code: 'gr'\n}, {\n    name: 'Greenland',\n    code: 'gl'\n}, {\n    name: 'Grenada',\n    code: 'gd'\n}, {\n    name: 'Guadeloupe',\n    code: 'gp'\n}, {\n    name: 'Guam',\n    code: 'gu'\n}, {\n    name: 'Guatemala',\n    code: 'gt'\n}, {\n    name: 'Guernsey',\n    code: 'gg'\n}, {\n    name: 'Guinea',\n    code: 'gn'\n}, {\n    name: 'Guinea-Bissau',\n    code: 'gw'\n}, {\n    name: 'Guyana',\n    code: 'gy'\n}, {\n    name: 'Haiti',\n    code: 'ht'\n}, {\n    name: 'Heard Island and McDonald Islands',\n    code: 'hm'\n}, {\n    name: 'Honduras',\n    code: 'hn'\n}, {\n    name: 'Hong Kong',\n    code: 'hk'\n}, {\n    name: 'Hungary',\n    code: 'hu'\n}, {\n    name: 'Iceland',\n    code: 'is'\n}, {\n    name: 'India',\n    code: 'in'\n}, {\n    name: 'Indonesia',\n    code: 'id'\n}, {\n    name: 'Iran',\n    code: 'ir'\n}, {\n    name: 'Iraq',\n    code: 'iq'\n}, {\n    name: 'Ireland',\n    code: 'ie'\n}, {\n    name: 'Isle of Man',\n    code: 'im'\n}, {\n    name: 'Israel',\n    code: 'il'\n}, {\n    name: 'Italy',\n    code: 'it'\n}, {\n    name: 'Jamaica',\n    code: 'jm'\n}, {\n    name: 'Japan',\n    code: 'jp'\n}, {\n    name: 'Jersey',\n    code: 'je'\n}, {\n    name: 'Jordan',\n    code: 'jo'\n}, {\n    name: 'Kazakhstan',\n    code: 'kz'\n}, {\n    name: 'Kenya',\n    code: 'ke'\n}, {\n    name: 'Kiribati',\n    code: 'ki'\n}, {\n    name: 'North Korea',\n    display: 'Korea, Democratic People\\'s Republic of',\n    code: 'kp'\n}, {\n    name: 'South Korea',\n    display: 'Korea, Republic of',\n    code: 'kr'\n}, {\n    name: 'Kosovo',\n    code: 'xk'\n}, {\n    name: 'Kuwait',\n    code: 'kw'\n}, {\n    name: 'Kyrgyzstan',\n    code: 'kg'\n}, {\n    name: 'Laos',\n    code: 'la'\n}, {\n    name: 'Latvia',\n    code: 'lv'\n}, {\n    name: 'Lebanon',\n    code: 'lb'\n}, {\n    name: 'Lesotho',\n    code: 'ls'\n}, {\n    name: 'Liberia',\n    code: 'lr'\n}, {\n    name: 'Libya',\n    code: 'ly'\n}, {\n    name: 'Liechtenstein',\n    code: 'li'\n}, {\n    name: 'Lithuania',\n    code: 'lt'\n}, {\n    name: 'Luxembourg',\n    code: 'lu'\n}, {\n    name: 'Macao',\n    code: 'mo'\n}, {\n    name: 'Madagascar',\n    code: 'mg'\n}, {\n    name: 'Malawi',\n    code: 'mw'\n}, {\n    name: 'Malaysia',\n    code: 'my'\n}, {\n    name: 'Maldives',\n    code: 'mv'\n}, {\n    name: 'Mali',\n    code: 'ml'\n}, {\n    name: 'Malta',\n    code: 'mt'\n}, {\n    name: 'Marshall Islands',\n    code: 'mh'\n}, {\n    name: 'Martinique',\n    code: 'mq'\n}, {\n    name: 'Mauritania',\n    code: 'mr'\n}, {\n    name: 'Mauritius',\n    code: 'mu'\n}, {\n    name: 'Mayotte',\n    code: 'yt'\n}, {\n    name: 'Mexico',\n    code: 'mx'\n}, {\n    name: 'Micronesia, Federated States of',\n    code: 'fm'\n}, {\n    name: 'Moldova',\n    code: 'md'\n}, {\n    name: 'Monaco',\n    code: 'mc'\n}, {\n    name: 'Mongolia',\n    code: 'mn'\n}, {\n    name: 'Montenegro',\n    code: 'me'\n}, {\n    name: 'Montserrat',\n    code: 'ms'\n}, {\n    name: 'Morocco',\n    code: 'ma'\n}, {\n    name: 'Mozambique',\n    code: 'mz'\n}, {\n    name: 'Myanmar',\n    code: 'mm'\n}, {\n    name: 'Namibia',\n    code: 'na'\n}, {\n    name: 'Nauru',\n    code: 'nr'\n}, {\n    name: 'Nepal',\n    code: 'np'\n}, {\n    name: 'Netherlands',\n    code: 'nl'\n}, {\n    name: 'Netherlands Antilles',\n    code: 'an'\n}, {\n    name: 'New Caledonia',\n    code: 'nc'\n}, {\n    name: 'New Zealand',\n    code: 'nz'\n}, {\n    name: 'Nicaragua',\n    code: 'ni'\n}, {\n    name: 'Niger',\n    code: 'ne'\n}, {\n    name: 'Nigeria',\n    code: 'ng'\n}, {\n    name: 'Niue',\n    code: 'nu'\n}, {\n    name: 'Norfolk Island',\n    code: 'nf'\n}, {\n    name: 'Macedonia, The Former Yugoslav Republic of',\n    display: 'North Macedonia',\n    code: 'mk'\n}, {\n    name: 'Northern Mariana Islands',\n    code: 'mp'\n}, {\n    name: 'Norway',\n    code: 'no'\n}, {\n    name: 'Oman',\n    code: 'om'\n}, {\n    name: 'Pakistan',\n    code: 'pk'\n}, {\n    name: 'Palau',\n    code: 'pw'\n}, {\n    name: 'Palestine, State of',\n    code: 'ps'\n}, {\n    name: 'Panama',\n    code: 'pa'\n}, {\n    name: 'Papua New Guinea',\n    code: 'pg'\n}, {\n    name: 'Paraguay',\n    code: 'py'\n}, {\n    name: 'Peru',\n    code: 'pe'\n}, {\n    name: 'Philippines',\n    code: 'ph'\n}, {\n    name: 'Pitcairn',\n    code: 'pn'\n}, {\n    name: 'Poland',\n    code: 'pl'\n}, {\n    name: 'Portugal',\n    code: 'pt'\n}, {\n    name: 'Puerto Rico',\n    code: 'pr'\n}, {\n    name: 'Qatar',\n    code: 'qa'\n}, {\n    name: 'Reunion',\n    code: 're'\n}, {\n    name: 'Romania',\n    code: 'ro'\n}, {\n    name: 'Russia',\n    code: 'ru'\n}, {\n    name: 'Rwanda',\n    code: 'rw'\n}, {\n    name: 'Saint Barthelemy',\n    display: 'Saint Barthélemy',\n    code: 'bl'\n}, {\n    name: 'Saint Helena',\n    display: 'Saint Helena, Ascension and Tristan Da Cunha',\n    code: 'sh'\n}, {\n    name: 'Saint Kitts and Nevis',\n    code: 'kn'\n}, {\n    name: 'Saint Lucia',\n    code: 'lc'\n}, {\n    name: 'Saint Martin',\n    code: 'mf'\n}, {\n    name: 'Saint Pierre and Miquelon',\n    code: 'pm'\n}, {\n    name: 'Saint Vincent and the Grenadines',\n    code: 'vc'\n}, {\n    name: 'Samoa',\n    code: 'ws'\n}, {\n    name: 'San Marino',\n    code: 'sm'\n}, {\n    name: 'Sao Tome and Principe',\n    code: 'st'\n}, {\n    name: 'Saudi Arabia',\n    code: 'sa'\n}, {\n    name: 'Senegal',\n    code: 'sn'\n}, {\n    name: 'Serbia',\n    code: 'rs'\n}, {\n    name: 'Seychelles',\n    code: 'sc'\n}, {\n    name: 'Sierra Leone',\n    code: 'sl'\n}, {\n    name: 'Singapore',\n    code: 'sg'\n}, {\n    name: 'Sint Maarten',\n    code: 'sx'\n}, {\n    name: 'Slovakia',\n    code: 'sk'\n}, {\n    name: 'Slovenia',\n    code: 'si'\n}, {\n    name: 'Solomon Islands',\n    code: 'sb'\n}, {\n    name: 'Somalia',\n    code: 'so'\n}, {\n    name: 'South Africa',\n    code: 'za'\n}, {\n    name: 'South Georgia and the South Sandwich Islands',\n    code: 'gs'\n}, {\n    name: 'South Sudan',\n    code: 'ss'\n}, {\n    name: 'Spain',\n    code: 'es'\n}, {\n    name: 'Sri Lanka',\n    code: 'lk'\n}, {\n    name: 'Sudan',\n    code: 'sd'\n}, {\n    name: 'Suriname',\n    code: 'sr'\n}, {\n    name: 'Svalbard and Jan Mayen',\n    code: 'sj'\n}, {\n    name: 'Sweden',\n    code: 'se'\n}, {\n    name: 'Switzerland',\n    code: 'ch'\n}, {\n    name: 'Syria',\n    code: 'sy'\n}, {\n    name: 'Taiwan',\n    code: 'tw'\n}, {\n    name: 'Tajikistan',\n    code: 'tj'\n}, {\n    name: 'Tanzania',\n    code: 'tz'\n}, {\n    name: 'Thailand',\n    code: 'th'\n}, {\n    name: 'Timor-Leste',\n    code: 'tl'\n}, {\n    name: 'Togo',\n    code: 'tg'\n}, {\n    name: 'Tokelau',\n    code: 'tk'\n}, {\n    name: 'Tonga',\n    code: 'to'\n}, {\n    name: 'Trinidad and Tobago',\n    code: 'tt'\n}, {\n    name: 'Tunisia',\n    code: 'tn'\n}, {\n    name: 'Turkey',\n    code: 'tr'\n}, {\n    name: 'Turkmenistan',\n    code: 'tm'\n}, {\n    name: 'Turks and Caicos Islands',\n    code: 'tc'\n}, {\n    name: 'Tuvalu',\n    code: 'tv'\n}, {\n    name: 'Uganda',\n    code: 'ug'\n}, {\n    name: 'Ukraine',\n    code: 'ua'\n}, {\n    name: 'United Arab Emirates',\n    code: 'ae'\n}, {\n    name: 'United Kingdom',\n    code: 'gb'\n}, {\n    name: 'United States',\n    display: 'United States of America',\n    code: 'us'\n}, {\n    name: 'United States Minor Outlying Islands',\n    code: 'um'\n}, {\n    name: 'Uruguay',\n    code: 'uy'\n}, {\n    name: 'Uzbekistan',\n    code: 'uz'\n}, {\n    name: 'Vanuatu',\n    code: 'vu'\n}, {\n    name: 'Vatican City',\n    code: 'va'\n}, {\n    name: 'Venezuela',\n    code: 've'\n}, {\n    name: 'Vietnam',\n    code: 'vn'\n}, {\n    name: 'Virgin Islands, British',\n    code: 'vg'\n}, {\n    name: 'Virgin Islands, U.S.',\n    code: 'vi'\n}, {\n    name: 'Wallis and Futuna',\n    code: 'wf'\n}, {\n    name: 'Western Sahara',\n    code: 'eh'\n}, {\n    name: 'Yemen',\n    code: 'ye'\n}, {\n    name: 'Zambia',\n    code: 'zm'\n}, {\n    name: 'Zimbabwe',\n    code: 'zw'\n}];\nvar countryOptions = module.exports.countryOptions = function (startingCountryInfo, valueField) {\n    return startingCountryInfo.map(function (thisCountryInfo) {\n        return {\n            value: thisCountryInfo[valueField],\n            label: thisCountryInfo.display ? thisCountryInfo.display : thisCountryInfo.name\n        };\n    });\n};\nmodule.exports.lookupCountryByCode = function (countryCode) {\n    return countryInfo.find(function (country) {\n        return country.code === countryCode;\n    });\n};\nmodule.exports.lookupCountryByName = function (countryName) {\n    return countryInfo.find(function (country) {\n        return country.name === countryName;\n    });\n};\n/**\n * Function dupeCommonCountries():\n * takes startingCountryInfo, and duplicates any number of its country labels\n * at the beginning of the array.\n * E.g., to have \"Germany\" and \"Italy\" at the top of the list, use:\n *     dupeCommonCountries(['de', 'it')\n * @param {array} startingCountryInfo array of country objects\n *     like [{value: 'ca', label: 'Canada'}, ...]\n * @param {array} commonCountryCodes array of country codes we should duplicate\n * @returns {array} revised array of country objects, with duplicates inserted at beginning\n */\nvar dupeCommonCountries = module.exports.dupeCommonCountries = function (startingCountryInfo, commonCountryCodes) {\n    var commonCountriesInfo = commonCountryCodes.map(function (commonCountryCode) {\n        return startingCountryInfo.find(function (country) {\n            return country.code === commonCountryCode.toLowerCase();\n        });\n    });\n    return [].concat(_toConsumableArray(commonCountriesInfo), _toConsumableArray(startingCountryInfo));\n};\n/*\n * registrationCountryNameOptions is the result of taking the standard countryInfo,\n * setting a 'value' key and a 'label' key both to the country data's 'name' value,\n * but using the 'display' value for 'label' instead of 'name' if 'display' exists;\n * then duplicating 'United States of America' and 'United Kingdom' at the top of the list.\n * The result is an array like:\n * [\n *    {value: 'United States', label: 'United States of America'},\n *    {value: 'United Kingdom', label: 'United Kingdom'},\n *    {value: 'Afghanistan', label: 'Afghanistan'},\n *    ...\n *    {value: 'United Arab Emirates', label: 'United Arab Emirates'},\n *    {value: 'United States', label: 'United States of America'},\n *    {value: 'United Kingdom', label: 'United Kingdom'},\n *    {value: 'Uzbekistan', label: 'Uzbekistan'},\n *    ...\n *    {value: 'Zimbabwe', label: 'Zimbabwe'}\n * ]\n */\nmodule.exports.registrationCountryNameOptions = countryOptions(dupeCommonCountries(countryInfo, ['us', 'gb']), 'name');\n// use country code for value, instead of country name:\nmodule.exports.registrationCountryCodeOptions = countryOptions(dupeCommonCountries(countryInfo, ['us', 'gb']), 'code');\n/* subdivisionOptions uses iso-3166 data to produce an array like:\n * [\n *    {'ad':\n *       [\n *          {'value': 'ad-07', 'label': 'Andorra la Vella', 'type': 'Parish'},\n *          {'value': 'ad-02', 'label': 'Canillo', 'type': 'Parish'},\n *          ...\n *       ]\n *    },\n *    ...\n *    {'zw':\n *       [\n *          {'value': 'zw-bu', 'label': 'Bulawayo', 'type': 'Province'},\n *          {'value': 'zw-ma', 'label': 'Manicaland', 'type': 'Province'},\n *          ...\n *       ]\n *    },\n *    ...\n * ]\n */\nmodule.exports.subdivisionOptions = Object.keys(isoCountryRawData).reduce(function (subByCountry, code) {\n    subByCountry[code.toLowerCase()] = Object.keys(isoCountryRawData[code].sub).map(function (subCode) {\n        return {\n            value: subCode.toLowerCase(),\n            label: isoCountryRawData[code].sub[subCode].name,\n            type: isoCountryRawData[code].sub[subCode].type\n        };\n    }).sort(function (a, b) {\n        if (a.label < b.label) {\n            return -1;\n        }\n        return 1;\n    });\n    return subByCountry;\n}, {});\n// ./src/lib/country-data.js\n// module id = 237\n// module chunks = 0 1 2 3 4 5 6\n//# sourceURL=scratch:///./src/lib/country-data.js?");
 })