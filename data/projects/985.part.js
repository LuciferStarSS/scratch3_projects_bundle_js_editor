/* 985 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar injectIntl = __webpack_require__(4).injectIntl;\nvar PropTypes = __webpack_require__(1);\nvar React = __webpack_require__(0);\nvar FormattedMessage = __webpack_require__(4).FormattedMessage;\n\n// Allow embedding html in banner messages coming from the server\nvar embedCensorMessage = function embedCensorMessage(message) {\n    return (\n        // eslint-disable-next-line react/no-danger\n        React.createElement('span', { dangerouslySetInnerHTML: { __html: message } })\n    );\n};\n\nvar communityGuidelinesLink = React.createElement(\n    'a',\n    { href: '/community_guidelines/' },\n    React.createElement(FormattedMessage, { id: 'project.communityGuidelines' })\n);\n\nvar CensoredMessage = function CensoredMessage(_ref) {\n    var censoredByCommunity = _ref.censoredByCommunity,\n        messageHTML = _ref.messageHTML,\n        reshareable = _ref.reshareable;\n    return React.createElement(\n        React.Fragment,\n        null,\n        messageHTML ? embedCensorMessage(messageHTML) : censoredByCommunity ? React.createElement(\n            React.Fragment,\n            null,\n            React.createElement(FormattedMessage, { id: 'project.communityCensoredMessage' }),\n            React.createElement('br', null),\n            React.createElement('br', null),\n            React.createElement(FormattedMessage, {\n                id: 'project.willReviewCensoredMessage',\n                values: { communityGuidelinesLink: communityGuidelinesLink }\n            })\n        ) :\n        // if message is blank or missing, use default\n        React.createElement(\n            React.Fragment,\n            null,\n            React.createElement(FormattedMessage, { id: 'project.defaultCensoredMessage' }),\n            React.createElement('br', null),\n            React.createElement('br', null),\n            reshareable ? React.createElement(FormattedMessage, {\n                id: 'project.tempCensoredMessage',\n                values: { communityGuidelinesLink: communityGuidelinesLink }\n            }) : React.createElement(FormattedMessage, { id: 'project.permCensoredMessage' })\n        )\n    );\n};\n\nCensoredMessage.propTypes = {\n    censoredByCommunity: PropTypes.bool,\n    messageHTML: PropTypes.string,\n    reshareable: PropTypes.bool\n};\n\nmodule.exports = injectIntl(CensoredMessage);\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/preview/censored-message.jsx\n// module id = 985\n// module chunks = 0\n\n//# sourceURL=scratch:///./src/views/preview/censored-message.jsx?");

/***/ })