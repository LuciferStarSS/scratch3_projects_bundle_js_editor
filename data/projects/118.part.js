/* 118 */
 (function(module, exports, __webpack_require__) {
"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = scopeTab;\nvar _tabbable = __webpack_require__(33);\nvar _tabbable2 = _interopRequireDefault(_tabbable);\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction scopeTab(node, event) {\n  var tabbable = (0, _tabbable2.default)(node);\n  if (!tabbable.length) {\n    // Do nothing, since there are no elements that can receive focus.\n    event.preventDefault();\n    return;\n  }\n  var shiftKey = event.shiftKey;\n  var head = tabbable[0];\n  var tail = tabbable[tabbable.length - 1];\n  // proceed with default browser behavior on tab.\n  // Focus on last element on shift + tab.\n  if (node === document.activeElement) {\n    if (!shiftKey) return;\n    target = tail;\n  }\n  var target;\n  if (tail === document.activeElement && !shiftKey) {\n    target = head;\n  }\n  if (head === document.activeElement && shiftKey) {\n    target = tail;\n  }\n  if (target) {\n    event.preventDefault();\n    target.focus();\n    return;\n  }\n  // Safari radio issue.\n  //\n  // Safari does not move the focus to the radio button,\n  // so we need to force it to really walk through all elements.\n  //\n  // This is very error prone, since we are trying to guess\n  // if it is a safari browser from the first occurence between\n  // chrome or safari.\n  //\n  // The chrome user agent contains the first ocurrence\n  // as the 'chrome/version' and later the 'safari/version'.\n  var checkSafari = /(\\bChrome\\b|\\bSafari\\b)\\//.exec(navigator.userAgent);\n  var isSafariDesktop = checkSafari != null && checkSafari[1] != \"Chrome\" && /\\biPod\\b|\\biPad\\b/g.exec(navigator.userAgent) == null;\n  // If we are not in safari desktop, let the browser control\n  // the focus\n  if (!isSafariDesktop) return;\n  var x = tabbable.indexOf(document.activeElement);\n  if (x > -1) {\n    x += shiftKey ? -1 : 1;\n  }\n  // If the tabbable element does not exist,\n  // focus head/tail based on shiftKey\n  if (typeof tabbable[x] === \"undefined\") {\n    event.preventDefault();\n    target = shiftKey ? tail : head;\n    target.focus();\n    return;\n  }\n  event.preventDefault();\n  tabbable[x].focus();\n}\nmodule.exports = exports[\"default\"];\n// ./~/react-modal/lib/helpers/scopeTab.js\n// module id = 118\n// module chunks = 0 1 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39\n//# sourceURL=scratch:///./~/react-modal/lib/helpers/scopeTab.js?");
 })