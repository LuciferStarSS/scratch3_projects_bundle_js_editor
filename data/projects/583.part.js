/* 583 */
 (function(module, exports, __webpack_require__) {
"use strict";
eval("\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\nvar _formik = __webpack_require__(167);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\nvar bindAll = __webpack_require__(9);\nvar classNames = __webpack_require__(5);\nvar React = __webpack_require__(0);\nvar PropTypes = __webpack_require__(1);\nvar _require = __webpack_require__(4),\n    injectIntl = _require.injectIntl,\n    intlShape = _require.intlShape;\nvar FormattedMessage = __webpack_require__(4).FormattedMessage;\nvar FormikRadioButton = __webpack_require__(579);\nvar JoinFlowStep = __webpack_require__(190);\nvar InfoButton = __webpack_require__(451);\n__webpack_require__(197);\nvar GenderOption = function GenderOption(_ref) {\n    var id = _ref.id,\n        label = _ref.label,\n        onSetFieldValue = _ref.onSetFieldValue,\n        selectedValue = _ref.selectedValue,\n        value = _ref.value,\n        props = _objectWithoutProperties(_ref, ['id', 'label', 'onSetFieldValue', 'selectedValue', 'value']);\n    return React.createElement(\n        'div',\n        {\n            className: classNames('col-sm-9', 'row', 'row-inline', 'gender-radio-row', { 'gender-radio-row-selected': selectedValue === value })\n            /* eslint-disable react/jsx-no-bind */\n            , onClick: function onClick() {\n                return onSetFieldValue('gender', value, false);\n            }\n            /* eslint-enable react/jsx-no-bind */\n        },\n        React.createElement(FormikRadioButton, _extends({\n            className: classNames('join-flow-radio'),\n            id: id,\n            label: label,\n            name: 'gender',\n            value: value\n        }, props))\n    );\n};\nGenderOption.propTypes = {\n    id: PropTypes.string,\n    label: PropTypes.string,\n    onSetFieldValue: PropTypes.func,\n    selectedValue: PropTypes.string,\n    value: PropTypes.string\n};\nvar GenderStep = function (_React$Component) {\n    _inherits(GenderStep, _React$Component);\n    function GenderStep(props) {\n        _classCallCheck(this, GenderStep);\n        var _this = _possibleConstructorReturn(this, (GenderStep.__proto__ || Object.getPrototypeOf(GenderStep)).call(this, props));\n        bindAll(_this, ['handleSetCustomRef', 'handleValidSubmit']);\n        return _this;\n    }\n    _createClass(GenderStep, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            if (this.props.sendAnalytics) {\n                this.props.sendAnalytics('join-gender');\n            }\n        }\n    }, {\n        key: 'handleSetCustomRef',\n        value: function handleSetCustomRef(customInputRef) {\n            this.customInput = customInputRef;\n        }\n    }, {\n        key: 'handleValidSubmit',\n        value: function handleValidSubmit(formData, formikBag) {\n            formikBag.setSubmitting(false);\n            // handle defaults:\n            // when gender is specifically made blank, use \"(blank)\"\n            if (!formData.gender || formData.gender === '') {\n                formData.gender = '(blank)';\n            }\n            // when user clicks Next without making any selection, use \"(skipped)\"\n            if (formData.gender === 'null') {\n                formData.gender = '(skipped)';\n            }\n            delete formData.custom;\n            this.props.onNextStep(formData);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n            return React.createElement(\n                _formik.Formik,\n                {\n                    initialValues: {\n                        gender: 'null',\n                        custom: ''\n                    },\n                    onSubmit: this.handleValidSubmit\n                },\n                function (props) {\n                    var handleSubmit = props.handleSubmit,\n                        isSubmitting = props.isSubmitting,\n                        setFieldValue = props.setFieldValue,\n                        setValues = props.setValues,\n                        values = props.values;\n                    return React.createElement(\n                        JoinFlowStep,\n                        {\n                            description: _this2.props.intl.formatMessage({ id: 'registration.genderStepDescription' }),\n                            descriptionClassName: 'join-flow-gender-description',\n                            innerClassName: 'join-flow-inner-gender-step',\n                            title: _this2.props.intl.formatMessage({ id: 'registration.genderStepTitle' }),\n                            waiting: isSubmitting,\n                            onSubmit: handleSubmit\n                        },\n                        React.createElement(GenderOption, {\n                            id: 'GenderRadioOptionFemale',\n                            label: _this2.props.intl.formatMessage({ id: 'general.female' }),\n                            selectedValue: values.gender,\n                            value: 'female',\n                            onSetFieldValue: setFieldValue\n                        }),\n                        React.createElement(GenderOption, {\n                            id: 'GenderRadioOptionMale',\n                            label: _this2.props.intl.formatMessage({ id: 'general.male' }),\n                            selectedValue: values.gender,\n                            value: 'male',\n                            onSetFieldValue: setFieldValue\n                        }),\n                        React.createElement(GenderOption, {\n                            label: _this2.props.intl.formatMessage({ id: 'general.nonBinary' }),\n                            selectedValue: values.gender,\n                            value: 'non-binary',\n                            onSetFieldValue: setFieldValue\n                        }),\n                        React.createElement(\n                            'div',\n                            {\n                                className: classNames('col-sm-9', 'row', 'row-inline', 'gender-radio-row', { 'gender-radio-row-selected': values.gender === values.custom })\n                                /* eslint-disable react/jsx-no-bind */\n                                , onClick: function onClick() {\n                                    setFieldValue('gender', values.custom, false);\n                                    if (_this2.customInput) _this2.customInput.focus();\n                                }\n                                /* eslint-enable react/jsx-no-bind */\n                            },\n                            React.createElement(FormikRadioButton, {\n                                isCustomInput: true,\n                                className: classNames('join-flow-radio'),\n                                id: 'GenderRadioOptionCustom',\n                                label: _this2.props.intl.formatMessage({ id: 'registration.genderOptionAnother' }),\n                                name: 'gender',\n                                value: values.custom\n                                /* eslint-disable react/jsx-no-bind */\n                                , onSetCustom: function onSetCustom(newCustomVal) {\n                                    return setValues({\n                                        gender: newCustomVal.substring(0, 25),\n                                        custom: newCustomVal.substring(0, 25)\n                                    });\n                                },\n                                onSetCustomRef: _this2.handleSetCustomRef\n                                /* eslint-enable react/jsx-no-bind */\n                            })\n                        ),\n                        React.createElement(GenderOption, {\n                            id: 'GenderRadioOptionPreferNot',\n                            label: _this2.props.intl.formatMessage({ id: 'registration.genderOptionPreferNotToSay' }),\n                            selectedValue: values.gender,\n                            value: '(Prefer not to say)',\n                            onSetFieldValue: setFieldValue\n                        }),\n                        React.createElement(\n                            'div',\n                            { className: 'join-flow-privacy-message join-flow-gender-privacy' },\n                            React.createElement(FormattedMessage, { id: 'registration.private' }),\n                            React.createElement(InfoButton, {\n                                message: _this2.props.intl.formatMessage({ id: 'registration.genderStepInfo' })\n                            })\n                        )\n                    );\n                }\n            );\n        }\n    }]);\n    return GenderStep;\n}(React.Component);\nGenderStep.propTypes = {\n    intl: intlShape,\n    onNextStep: PropTypes.func,\n    sendAnalytics: PropTypes.func.isRequired\n};\nmodule.exports = injectIntl(GenderStep);\n// ./src/components/join-flow/gender-step.jsx\n// module id = 583\n// module chunks = 0 1\n//# sourceURL=scratch:///./src/components/join-flow/gender-step.jsx?");
 })