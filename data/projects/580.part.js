/* 580 */
 (function(module, exports, __webpack_require__) {
"use strict";
eval("\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\nvar _formik = __webpack_require__(167);\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\nvar bindAll = __webpack_require__(9);\nvar classNames = __webpack_require__(5);\nvar React = __webpack_require__(0);\nvar PropTypes = __webpack_require__(1);\nvar _require = __webpack_require__(4),\n    injectIntl = _require.injectIntl,\n    intlShape = _require.intlShape;\nvar FormattedMessage = __webpack_require__(4).FormattedMessage;\nvar FormikSelect = __webpack_require__(486);\nvar JoinFlowStep = __webpack_require__(190);\nvar InfoButton = __webpack_require__(451);\n__webpack_require__(197);\nvar getBirthMonthOptions = function getBirthMonthOptions(intl) {\n    return [{ value: 'null', label: intl.formatMessage({ id: 'general.month' }), disabled: true }, { value: '1', label: intl.formatMessage({ id: 'general.monthJanuary' }) }, { value: '2', label: intl.formatMessage({ id: 'general.monthFebruary' }) }, { value: '3', label: intl.formatMessage({ id: 'general.monthMarch' }) }, { value: '4', label: intl.formatMessage({ id: 'general.monthApril' }) }, { value: '5', label: intl.formatMessage({ id: 'general.monthMay' }) }, { value: '6', label: intl.formatMessage({ id: 'general.monthJune' }) }, { value: '7', label: intl.formatMessage({ id: 'general.monthJuly' }) }, { value: '8', label: intl.formatMessage({ id: 'general.monthAugust' }) }, { value: '9', label: intl.formatMessage({ id: 'general.monthSeptember' }) }, { value: '10', label: intl.formatMessage({ id: 'general.monthOctober' }) }, { value: '11', label: intl.formatMessage({ id: 'general.monthNovember' }) }, { value: '12', label: intl.formatMessage({ id: 'general.monthDecember' }) }];\n};\nvar getBirthYearOptions = function getBirthYearOptions(intl) {\n    var curYearRaw = new Date().getYear();\n    var curYear = curYearRaw + 1900;\n    // including both 1900 and current year, there are (curYearRaw + 1) options.\n    var numYearOptions = curYearRaw + 1;\n    var birthYearOptions = Array(numYearOptions).fill().map(function (defaultVal, i) {\n        return { value: String(curYear - i), label: String(curYear - i) };\n    });\n    birthYearOptions.unshift({ // set placeholder as first option\n        disabled: true,\n        value: 'null',\n        label: intl.formatMessage({ id: 'general.year' })\n    });\n    return birthYearOptions;\n};\nvar BirthDateStep = function (_React$Component) {\n    _inherits(BirthDateStep, _React$Component);\n    function BirthDateStep(props) {\n        _classCallCheck(this, BirthDateStep);\n        var _this = _possibleConstructorReturn(this, (BirthDateStep.__proto__ || Object.getPrototypeOf(BirthDateStep)).call(this, props));\n        bindAll(_this, ['handleValidSubmit', 'validateForm', 'validateSelect']);\n        return _this;\n    }\n    _createClass(BirthDateStep, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            if (this.props.sendAnalytics) {\n                this.props.sendAnalytics('join-birthdate');\n            }\n        }\n    }, {\n        key: 'validateSelect',\n        value: function validateSelect(selection) {\n            if (selection === 'null') {\n                return this.props.intl.formatMessage({ id: 'general.required' });\n            }\n            return null;\n        }\n    }, {\n        key: 'validateForm',\n        value: function validateForm() {\n            return {};\n        }\n    }, {\n        key: 'handleValidSubmit',\n        value: function handleValidSubmit(formData, formikBag) {\n            formikBag.setSubmitting(false);\n            this.props.onNextStep(formData);\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n            var birthMonthOptions = getBirthMonthOptions(this.props.intl);\n            var birthYearOptions = getBirthYearOptions(this.props.intl);\n            return React.createElement(\n                _formik.Formik,\n                {\n                    initialValues: {\n                        birth_month: 'null',\n                        birth_year: 'null'\n                    },\n                    validate: this.validateForm,\n                    validateOnBlur: false,\n                    validateOnChange: false,\n                    onSubmit: this.handleValidSubmit\n                },\n                function (props) {\n                    var errors = props.errors,\n                        handleSubmit = props.handleSubmit,\n                        isSubmitting = props.isSubmitting,\n                        setFieldError = props.setFieldError;\n                    return React.createElement(\n                        JoinFlowStep,\n                        {\n                            headerImgClass: 'birthdate-step-image',\n                            headerImgSrc: '/images/join-flow/birthdate-header.png',\n                            innerClassName: 'join-flow-inner-birthdate-step',\n                            title: _this2.props.intl.formatMessage({ id: 'registration.birthDateStepTitle' }),\n                            titleClassName: 'join-flow-birthdate-title',\n                            waiting: isSubmitting,\n                            onSubmit: handleSubmit\n                        },\n                        React.createElement(\n                            'div',\n                            {\n                                className: classNames('col-sm-9', 'row', 'birthdate-select-row')\n                            },\n                            React.createElement(FormikSelect, {\n                                className: classNames('join-flow-select', 'join-flow-select-month', { fail: errors.birth_month })\n                                /* hide month (left side) error, if year (right side) error exists */\n                                , error: errors.birth_year ? null : errors.birth_month,\n                                id: 'birth_month',\n                                name: 'birth_month',\n                                options: birthMonthOptions,\n                                validate: _this2.validateSelect,\n                                validationClassName: classNames('validation-birthdate', 'validation-birthdate-month', 'validation-left')\n                                /* eslint-disable react/jsx-no-bind */\n                                , onFocus: function onFocus() {\n                                    return setFieldError('birth_month', null);\n                                }\n                                /* eslint-enable react/jsx-no-bind */\n                            }),\n                            React.createElement(FormikSelect, {\n                                className: classNames('join-flow-select', 'join-flow-select-year', { fail: errors.birth_year }),\n                                error: errors.birth_year,\n                                id: 'birth_year',\n                                name: 'birth_year',\n                                options: birthYearOptions,\n                                validate: _this2.validateSelect,\n                                validationClassName: classNames('validation-birthdate', 'validation-birthdate-year')\n                                /* eslint-disable react/jsx-no-bind */\n                                , onFocus: function onFocus() {\n                                    return setFieldError('birth_year', null);\n                                }\n                                /* eslint-enable react/jsx-no-bind */\n                            })\n                        ),\n                        React.createElement(\n                            'div',\n                            { className: 'join-flow-privacy-message' },\n                            React.createElement(FormattedMessage, { id: 'registration.private' }),\n                            React.createElement(InfoButton, {\n                                message: _this2.props.intl.formatMessage({ id: 'registration.birthDateStepInfo' })\n                            })\n                        )\n                    );\n                }\n            );\n        }\n    }]);\n    return BirthDateStep;\n}(React.Component);\nBirthDateStep.propTypes = {\n    intl: intlShape,\n    onNextStep: PropTypes.func,\n    sendAnalytics: PropTypes.func.isRequired\n};\nvar IntlBirthDateStep = injectIntl(BirthDateStep);\nmodule.exports = IntlBirthDateStep;\n// ./src/components/join-flow/birthdate-step.jsx\n// module id = 580\n// module chunks = 0 1\n//# sourceURL=scratch:///./src/components/join-flow/birthdate-step.jsx?");
 })