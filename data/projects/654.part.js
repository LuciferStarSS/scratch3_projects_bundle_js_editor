/* 654 */
 (function(module, __webpack_exports__, __webpack_require__) {
"use strict";
eval(" var __WEBPACK_IMPORTED_MODULE_0__Symbol_js__ = __webpack_require__(473);\n var __WEBPACK_IMPORTED_MODULE_1__arrayMap_js__ = __webpack_require__(503);\n var __WEBPACK_IMPORTED_MODULE_2__isArray_js__ = __webpack_require__(263);\n var __WEBPACK_IMPORTED_MODULE_3__isSymbol_js__ = __webpack_require__(464);\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = __WEBPACK_IMPORTED_MODULE_0__Symbol_js__[\"a\" /* default */] ? __WEBPACK_IMPORTED_MODULE_0__Symbol_js__[\"a\" /* default */].prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__isArray_js__[\"a\" /* default */])(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__arrayMap_js__[\"a\" /* default */])(value, baseToString) + '';\n  }\n  if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__isSymbol_js__[\"a\" /* default */])(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n/* harmony default export */ __webpack_exports__[\"a\"] = (baseToString);\n// ./~/lodash-es/_baseToString.js\n// module id = 654\n// module chunks = 0 1\n//# sourceURL=scratch:///./~/lodash-es/_baseToString.js?");
 })