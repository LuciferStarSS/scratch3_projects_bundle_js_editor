/* 934 */
 (function(module, exports, __webpack_require__) {
"use strict";
eval("\n/**\n Given a timestamp in the future, calculate the largest, closest unit to show.\n On the high end we stop at hours. e.g. 15 days is still counted in hours not days or weeks.\n On the low end we stop at minutes.\n This rounds duration to the nearest integer. e.g. 5.7 minutes => will return 6 as duration.\n @param {number} timeStamp A future time stamp in ms.\n @returns {object} containing the unit (min, hours) and how many. e.g. {unit: minutes, duration: 3}\n */\nvar getTimeUnitAndDuration = function getTimeUnitAndDuration(timeStamp) {\n    var diff = timeStamp - Date.now();\n    var oneHourInMs = 1000 * 60 * 60;\n    var oneMinuteInMs = 1000 * 60;\n    var unit = 'minute';\n    var duration = diff / oneMinuteInMs;\n    // We show minutes up to 2 hours, then switch to hours.\n    if (diff >= 2 * oneHourInMs) {\n        unit = 'hour';\n        duration = diff / oneHourInMs;\n    }\n    // Round to nearest hour or minute.\n    duration = Math.round(duration);\n    return {\n        unit: unit,\n        duration: duration\n    };\n};\n/**\n* Given a future timestamp and a langauge, constructs a phrase to describe that time relative to now.\n* e.g. in 2 days, in 3 minutes, en 2 horas.\n* The largest time unit is days, the smallest is minutes.\n* @param {number} futureTime a timestamp in ms to build a phrase for.\n* @param {string} lang Langauge to build the phrase in.\n* @returns {string} A phrase representing the relative time in the future. e.g. 3 days 5 hours.\n*/\nmodule.exports.formatRelativeTime = function (futureTime, lang) {\n    var formatter = new Intl.RelativeTimeFormat([lang].concat(window.navigator.languages), {\n        localeMatcher: 'best fit',\n        numeric: 'always',\n        style: 'long'\n    });\n    var timeInfo = getTimeUnitAndDuration(futureTime);\n    return formatter.format(timeInfo.duration, timeInfo.unit);\n};\n// ./src/lib/format-time.js\n// module id = 934\n// module chunks = 0\n//# sourceURL=scratch:///./src/lib/format-time.js?");
 })